// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetCampaignBundlePricing_Pu.proto

package io.dstore.engine.procedures;

public final class OmGetCampaignBundlePricingPu {
  private OmGetCampaignBundlePricingPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    boolean hasBenefitId();
    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    io.dstore.values.IntegerValue getBenefitId();
    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getBenefitIdOrBuilder();

    /**
     * <code>optional bool benefit_id_null = 1001;</code>
     */
    boolean getBenefitIdNull();

    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    boolean hasOnlyDefinition();
    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    io.dstore.values.IntegerValue getOnlyDefinition();
    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getOnlyDefinitionOrBuilder();

    /**
     * <code>optional bool only_definition_null = 1002;</code>
     */
    boolean getOnlyDefinitionNull();

    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    boolean hasFilterByItemSetId();
    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    io.dstore.values.IntegerValue getFilterByItemSetId();
    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getFilterByItemSetIdOrBuilder();

    /**
     * <code>optional bool filter_by_item_set_id_null = 1003;</code>
     */
    boolean getFilterByItemSetIdNull();

    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    boolean hasSortByCharacteristicIdList();
    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    io.dstore.values.StringValue getSortByCharacteristicIdList();
    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    io.dstore.values.StringValueOrBuilder getSortByCharacteristicIdListOrBuilder();

    /**
     * <code>optional bool sort_by_characteristic_id_list_null = 1004;</code>
     */
    boolean getSortByCharacteristicIdListNull();

    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    boolean hasSortOptionList();
    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    io.dstore.values.StringValue getSortOptionList();
    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    io.dstore.values.StringValueOrBuilder getSortOptionListOrBuilder();

    /**
     * <code>optional bool sort_option_list_null = 1005;</code>
     */
    boolean getSortOptionListNull();

    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    boolean hasInheritDepthOptionList();
    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    io.dstore.values.StringValue getInheritDepthOptionList();
    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    io.dstore.values.StringValueOrBuilder getInheritDepthOptionListOrBuilder();

    /**
     * <code>optional bool inherit_depth_option_list_null = 1006;</code>
     */
    boolean getInheritDepthOptionListNull();

    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    boolean hasRecursiveEvaluationOptionList();
    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    io.dstore.values.StringValue getRecursiveEvaluationOptionList();
    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    io.dstore.values.StringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder();

    /**
     * <code>optional bool recursive_evaluation_option_list_null = 1007;</code>
     */
    boolean getRecursiveEvaluationOptionListNull();

    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    boolean hasGetValuesForSortByCharacs();
    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    io.dstore.values.BooleanValue getGetValuesForSortByCharacs();
    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    io.dstore.values.BooleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder();

    /**
     * <code>optional bool get_values_for_sort_by_characs_null = 1008;</code>
     */
    boolean getGetValuesForSortByCharacsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      benefitIdNull_ = false;
      onlyDefinitionNull_ = false;
      filterByItemSetIdNull_ = false;
      sortByCharacteristicIdListNull_ = false;
      sortOptionListNull_ = false;
      inheritDepthOptionListNull_ = false;
      recursiveEvaluationOptionListNull_ = false;
      getValuesForSortByCharacsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (benefitId_ != null) {
                subBuilder = benefitId_.toBuilder();
              }
              benefitId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(benefitId_);
                benefitId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (onlyDefinition_ != null) {
                subBuilder = onlyDefinition_.toBuilder();
              }
              onlyDefinition_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyDefinition_);
                onlyDefinition_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (filterByItemSetId_ != null) {
                subBuilder = filterByItemSetId_.toBuilder();
              }
              filterByItemSetId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filterByItemSetId_);
                filterByItemSetId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (sortByCharacteristicIdList_ != null) {
                subBuilder = sortByCharacteristicIdList_.toBuilder();
              }
              sortByCharacteristicIdList_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortByCharacteristicIdList_);
                sortByCharacteristicIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (sortOptionList_ != null) {
                subBuilder = sortOptionList_.toBuilder();
              }
              sortOptionList_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortOptionList_);
                sortOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (inheritDepthOptionList_ != null) {
                subBuilder = inheritDepthOptionList_.toBuilder();
              }
              inheritDepthOptionList_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inheritDepthOptionList_);
                inheritDepthOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (recursiveEvaluationOptionList_ != null) {
                subBuilder = recursiveEvaluationOptionList_.toBuilder();
              }
              recursiveEvaluationOptionList_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recursiveEvaluationOptionList_);
                recursiveEvaluationOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.values.BooleanValue.Builder subBuilder = null;
              if (getValuesForSortByCharacs_ != null) {
                subBuilder = getValuesForSortByCharacs_.toBuilder();
              }
              getValuesForSortByCharacs_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getValuesForSortByCharacs_);
                getValuesForSortByCharacs_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              benefitIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              onlyDefinitionNull_ = input.readBool();
              break;
            }
            case 8024: {

              filterByItemSetIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              sortByCharacteristicIdListNull_ = input.readBool();
              break;
            }
            case 8040: {

              sortOptionListNull_ = input.readBool();
              break;
            }
            case 8048: {

              inheritDepthOptionListNull_ = input.readBool();
              break;
            }
            case 8056: {

              recursiveEvaluationOptionListNull_ = input.readBool();
              break;
            }
            case 8064: {

              getValuesForSortByCharacsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.Builder.class);
    }

    public static final int BENEFIT_ID_FIELD_NUMBER = 1;
    private io.dstore.values.IntegerValue benefitId_;
    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    public boolean hasBenefitId() {
      return benefitId_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    public io.dstore.values.IntegerValue getBenefitId() {
      return benefitId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : benefitId_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getBenefitIdOrBuilder() {
      return getBenefitId();
    }

    public static final int BENEFIT_ID_NULL_FIELD_NUMBER = 1001;
    private boolean benefitIdNull_;
    /**
     * <code>optional bool benefit_id_null = 1001;</code>
     */
    public boolean getBenefitIdNull() {
      return benefitIdNull_;
    }

    public static final int ONLY_DEFINITION_FIELD_NUMBER = 2;
    private io.dstore.values.IntegerValue onlyDefinition_;
    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    public boolean hasOnlyDefinition() {
      return onlyDefinition_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    public io.dstore.values.IntegerValue getOnlyDefinition() {
      return onlyDefinition_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : onlyDefinition_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getOnlyDefinitionOrBuilder() {
      return getOnlyDefinition();
    }

    public static final int ONLY_DEFINITION_NULL_FIELD_NUMBER = 1002;
    private boolean onlyDefinitionNull_;
    /**
     * <code>optional bool only_definition_null = 1002;</code>
     */
    public boolean getOnlyDefinitionNull() {
      return onlyDefinitionNull_;
    }

    public static final int FILTER_BY_ITEM_SET_ID_FIELD_NUMBER = 3;
    private io.dstore.values.IntegerValue filterByItemSetId_;
    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    public boolean hasFilterByItemSetId() {
      return filterByItemSetId_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    public io.dstore.values.IntegerValue getFilterByItemSetId() {
      return filterByItemSetId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : filterByItemSetId_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getFilterByItemSetIdOrBuilder() {
      return getFilterByItemSetId();
    }

    public static final int FILTER_BY_ITEM_SET_ID_NULL_FIELD_NUMBER = 1003;
    private boolean filterByItemSetIdNull_;
    /**
     * <code>optional bool filter_by_item_set_id_null = 1003;</code>
     */
    public boolean getFilterByItemSetIdNull() {
      return filterByItemSetIdNull_;
    }

    public static final int SORT_BY_CHARACTERISTIC_ID_LIST_FIELD_NUMBER = 4;
    private io.dstore.values.StringValue sortByCharacteristicIdList_;
    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    public boolean hasSortByCharacteristicIdList() {
      return sortByCharacteristicIdList_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    public io.dstore.values.StringValue getSortByCharacteristicIdList() {
      return sortByCharacteristicIdList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : sortByCharacteristicIdList_;
    }
    /**
     * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
     */
    public io.dstore.values.StringValueOrBuilder getSortByCharacteristicIdListOrBuilder() {
      return getSortByCharacteristicIdList();
    }

    public static final int SORT_BY_CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER = 1004;
    private boolean sortByCharacteristicIdListNull_;
    /**
     * <code>optional bool sort_by_characteristic_id_list_null = 1004;</code>
     */
    public boolean getSortByCharacteristicIdListNull() {
      return sortByCharacteristicIdListNull_;
    }

    public static final int SORT_OPTION_LIST_FIELD_NUMBER = 5;
    private io.dstore.values.StringValue sortOptionList_;
    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    public boolean hasSortOptionList() {
      return sortOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    public io.dstore.values.StringValue getSortOptionList() {
      return sortOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : sortOptionList_;
    }
    /**
     * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
     */
    public io.dstore.values.StringValueOrBuilder getSortOptionListOrBuilder() {
      return getSortOptionList();
    }

    public static final int SORT_OPTION_LIST_NULL_FIELD_NUMBER = 1005;
    private boolean sortOptionListNull_;
    /**
     * <code>optional bool sort_option_list_null = 1005;</code>
     */
    public boolean getSortOptionListNull() {
      return sortOptionListNull_;
    }

    public static final int INHERIT_DEPTH_OPTION_LIST_FIELD_NUMBER = 6;
    private io.dstore.values.StringValue inheritDepthOptionList_;
    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    public boolean hasInheritDepthOptionList() {
      return inheritDepthOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    public io.dstore.values.StringValue getInheritDepthOptionList() {
      return inheritDepthOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : inheritDepthOptionList_;
    }
    /**
     * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
     */
    public io.dstore.values.StringValueOrBuilder getInheritDepthOptionListOrBuilder() {
      return getInheritDepthOptionList();
    }

    public static final int INHERIT_DEPTH_OPTION_LIST_NULL_FIELD_NUMBER = 1006;
    private boolean inheritDepthOptionListNull_;
    /**
     * <code>optional bool inherit_depth_option_list_null = 1006;</code>
     */
    public boolean getInheritDepthOptionListNull() {
      return inheritDepthOptionListNull_;
    }

    public static final int RECURSIVE_EVALUATION_OPTION_LIST_FIELD_NUMBER = 7;
    private io.dstore.values.StringValue recursiveEvaluationOptionList_;
    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    public boolean hasRecursiveEvaluationOptionList() {
      return recursiveEvaluationOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    public io.dstore.values.StringValue getRecursiveEvaluationOptionList() {
      return recursiveEvaluationOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
    }
    /**
     * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
     */
    public io.dstore.values.StringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder() {
      return getRecursiveEvaluationOptionList();
    }

    public static final int RECURSIVE_EVALUATION_OPTION_LIST_NULL_FIELD_NUMBER = 1007;
    private boolean recursiveEvaluationOptionListNull_;
    /**
     * <code>optional bool recursive_evaluation_option_list_null = 1007;</code>
     */
    public boolean getRecursiveEvaluationOptionListNull() {
      return recursiveEvaluationOptionListNull_;
    }

    public static final int GET_VALUES_FOR_SORT_BY_CHARACS_FIELD_NUMBER = 8;
    private io.dstore.values.BooleanValue getValuesForSortByCharacs_;
    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    public boolean hasGetValuesForSortByCharacs() {
      return getValuesForSortByCharacs_ != null;
    }
    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    public io.dstore.values.BooleanValue getGetValuesForSortByCharacs() {
      return getValuesForSortByCharacs_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
    }
    /**
     * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
     */
    public io.dstore.values.BooleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder() {
      return getGetValuesForSortByCharacs();
    }

    public static final int GET_VALUES_FOR_SORT_BY_CHARACS_NULL_FIELD_NUMBER = 1008;
    private boolean getValuesForSortByCharacsNull_;
    /**
     * <code>optional bool get_values_for_sort_by_characs_null = 1008;</code>
     */
    public boolean getGetValuesForSortByCharacsNull() {
      return getValuesForSortByCharacsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (benefitId_ != null) {
        output.writeMessage(1, getBenefitId());
      }
      if (onlyDefinition_ != null) {
        output.writeMessage(2, getOnlyDefinition());
      }
      if (filterByItemSetId_ != null) {
        output.writeMessage(3, getFilterByItemSetId());
      }
      if (sortByCharacteristicIdList_ != null) {
        output.writeMessage(4, getSortByCharacteristicIdList());
      }
      if (sortOptionList_ != null) {
        output.writeMessage(5, getSortOptionList());
      }
      if (inheritDepthOptionList_ != null) {
        output.writeMessage(6, getInheritDepthOptionList());
      }
      if (recursiveEvaluationOptionList_ != null) {
        output.writeMessage(7, getRecursiveEvaluationOptionList());
      }
      if (getValuesForSortByCharacs_ != null) {
        output.writeMessage(8, getGetValuesForSortByCharacs());
      }
      if (benefitIdNull_ != false) {
        output.writeBool(1001, benefitIdNull_);
      }
      if (onlyDefinitionNull_ != false) {
        output.writeBool(1002, onlyDefinitionNull_);
      }
      if (filterByItemSetIdNull_ != false) {
        output.writeBool(1003, filterByItemSetIdNull_);
      }
      if (sortByCharacteristicIdListNull_ != false) {
        output.writeBool(1004, sortByCharacteristicIdListNull_);
      }
      if (sortOptionListNull_ != false) {
        output.writeBool(1005, sortOptionListNull_);
      }
      if (inheritDepthOptionListNull_ != false) {
        output.writeBool(1006, inheritDepthOptionListNull_);
      }
      if (recursiveEvaluationOptionListNull_ != false) {
        output.writeBool(1007, recursiveEvaluationOptionListNull_);
      }
      if (getValuesForSortByCharacsNull_ != false) {
        output.writeBool(1008, getValuesForSortByCharacsNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (benefitId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBenefitId());
      }
      if (onlyDefinition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOnlyDefinition());
      }
      if (filterByItemSetId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFilterByItemSetId());
      }
      if (sortByCharacteristicIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSortByCharacteristicIdList());
      }
      if (sortOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSortOptionList());
      }
      if (inheritDepthOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getInheritDepthOptionList());
      }
      if (recursiveEvaluationOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRecursiveEvaluationOptionList());
      }
      if (getValuesForSortByCharacs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGetValuesForSortByCharacs());
      }
      if (benefitIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, benefitIdNull_);
      }
      if (onlyDefinitionNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, onlyDefinitionNull_);
      }
      if (filterByItemSetIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, filterByItemSetIdNull_);
      }
      if (sortByCharacteristicIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, sortByCharacteristicIdListNull_);
      }
      if (sortOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, sortOptionListNull_);
      }
      if (inheritDepthOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, inheritDepthOptionListNull_);
      }
      if (recursiveEvaluationOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, recursiveEvaluationOptionListNull_);
      }
      if (getValuesForSortByCharacsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, getValuesForSortByCharacsNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters other = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters) obj;

      boolean result = true;
      result = result && (hasBenefitId() == other.hasBenefitId());
      if (hasBenefitId()) {
        result = result && getBenefitId()
            .equals(other.getBenefitId());
      }
      result = result && (getBenefitIdNull()
          == other.getBenefitIdNull());
      result = result && (hasOnlyDefinition() == other.hasOnlyDefinition());
      if (hasOnlyDefinition()) {
        result = result && getOnlyDefinition()
            .equals(other.getOnlyDefinition());
      }
      result = result && (getOnlyDefinitionNull()
          == other.getOnlyDefinitionNull());
      result = result && (hasFilterByItemSetId() == other.hasFilterByItemSetId());
      if (hasFilterByItemSetId()) {
        result = result && getFilterByItemSetId()
            .equals(other.getFilterByItemSetId());
      }
      result = result && (getFilterByItemSetIdNull()
          == other.getFilterByItemSetIdNull());
      result = result && (hasSortByCharacteristicIdList() == other.hasSortByCharacteristicIdList());
      if (hasSortByCharacteristicIdList()) {
        result = result && getSortByCharacteristicIdList()
            .equals(other.getSortByCharacteristicIdList());
      }
      result = result && (getSortByCharacteristicIdListNull()
          == other.getSortByCharacteristicIdListNull());
      result = result && (hasSortOptionList() == other.hasSortOptionList());
      if (hasSortOptionList()) {
        result = result && getSortOptionList()
            .equals(other.getSortOptionList());
      }
      result = result && (getSortOptionListNull()
          == other.getSortOptionListNull());
      result = result && (hasInheritDepthOptionList() == other.hasInheritDepthOptionList());
      if (hasInheritDepthOptionList()) {
        result = result && getInheritDepthOptionList()
            .equals(other.getInheritDepthOptionList());
      }
      result = result && (getInheritDepthOptionListNull()
          == other.getInheritDepthOptionListNull());
      result = result && (hasRecursiveEvaluationOptionList() == other.hasRecursiveEvaluationOptionList());
      if (hasRecursiveEvaluationOptionList()) {
        result = result && getRecursiveEvaluationOptionList()
            .equals(other.getRecursiveEvaluationOptionList());
      }
      result = result && (getRecursiveEvaluationOptionListNull()
          == other.getRecursiveEvaluationOptionListNull());
      result = result && (hasGetValuesForSortByCharacs() == other.hasGetValuesForSortByCharacs());
      if (hasGetValuesForSortByCharacs()) {
        result = result && getGetValuesForSortByCharacs()
            .equals(other.getGetValuesForSortByCharacs());
      }
      result = result && (getGetValuesForSortByCharacsNull()
          == other.getGetValuesForSortByCharacsNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBenefitId()) {
        hash = (37 * hash) + BENEFIT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getBenefitId().hashCode();
      }
      hash = (37 * hash) + BENEFIT_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBenefitIdNull());
      if (hasOnlyDefinition()) {
        hash = (37 * hash) + ONLY_DEFINITION_FIELD_NUMBER;
        hash = (53 * hash) + getOnlyDefinition().hashCode();
      }
      hash = (37 * hash) + ONLY_DEFINITION_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOnlyDefinitionNull());
      if (hasFilterByItemSetId()) {
        hash = (37 * hash) + FILTER_BY_ITEM_SET_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFilterByItemSetId().hashCode();
      }
      hash = (37 * hash) + FILTER_BY_ITEM_SET_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFilterByItemSetIdNull());
      if (hasSortByCharacteristicIdList()) {
        hash = (37 * hash) + SORT_BY_CHARACTERISTIC_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSortByCharacteristicIdList().hashCode();
      }
      hash = (37 * hash) + SORT_BY_CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSortByCharacteristicIdListNull());
      if (hasSortOptionList()) {
        hash = (37 * hash) + SORT_OPTION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSortOptionList().hashCode();
      }
      hash = (37 * hash) + SORT_OPTION_LIST_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSortOptionListNull());
      if (hasInheritDepthOptionList()) {
        hash = (37 * hash) + INHERIT_DEPTH_OPTION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getInheritDepthOptionList().hashCode();
      }
      hash = (37 * hash) + INHERIT_DEPTH_OPTION_LIST_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInheritDepthOptionListNull());
      if (hasRecursiveEvaluationOptionList()) {
        hash = (37 * hash) + RECURSIVE_EVALUATION_OPTION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getRecursiveEvaluationOptionList().hashCode();
      }
      hash = (37 * hash) + RECURSIVE_EVALUATION_OPTION_LIST_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRecursiveEvaluationOptionListNull());
      if (hasGetValuesForSortByCharacs()) {
        hash = (37 * hash) + GET_VALUES_FOR_SORT_BY_CHARACS_FIELD_NUMBER;
        hash = (53 * hash) + getGetValuesForSortByCharacs().hashCode();
      }
      hash = (37 * hash) + GET_VALUES_FOR_SORT_BY_CHARACS_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGetValuesForSortByCharacsNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters)
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (benefitIdBuilder_ == null) {
          benefitId_ = null;
        } else {
          benefitId_ = null;
          benefitIdBuilder_ = null;
        }
        benefitIdNull_ = false;

        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = null;
        } else {
          onlyDefinition_ = null;
          onlyDefinitionBuilder_ = null;
        }
        onlyDefinitionNull_ = false;

        if (filterByItemSetIdBuilder_ == null) {
          filterByItemSetId_ = null;
        } else {
          filterByItemSetId_ = null;
          filterByItemSetIdBuilder_ = null;
        }
        filterByItemSetIdNull_ = false;

        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = null;
        } else {
          sortByCharacteristicIdList_ = null;
          sortByCharacteristicIdListBuilder_ = null;
        }
        sortByCharacteristicIdListNull_ = false;

        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = null;
        } else {
          sortOptionList_ = null;
          sortOptionListBuilder_ = null;
        }
        sortOptionListNull_ = false;

        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = null;
        } else {
          inheritDepthOptionList_ = null;
          inheritDepthOptionListBuilder_ = null;
        }
        inheritDepthOptionListNull_ = false;

        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = null;
        } else {
          recursiveEvaluationOptionList_ = null;
          recursiveEvaluationOptionListBuilder_ = null;
        }
        recursiveEvaluationOptionListNull_ = false;

        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = null;
        } else {
          getValuesForSortByCharacs_ = null;
          getValuesForSortByCharacsBuilder_ = null;
        }
        getValuesForSortByCharacsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters build() {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters buildPartial() {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters result = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters(this);
        if (benefitIdBuilder_ == null) {
          result.benefitId_ = benefitId_;
        } else {
          result.benefitId_ = benefitIdBuilder_.build();
        }
        result.benefitIdNull_ = benefitIdNull_;
        if (onlyDefinitionBuilder_ == null) {
          result.onlyDefinition_ = onlyDefinition_;
        } else {
          result.onlyDefinition_ = onlyDefinitionBuilder_.build();
        }
        result.onlyDefinitionNull_ = onlyDefinitionNull_;
        if (filterByItemSetIdBuilder_ == null) {
          result.filterByItemSetId_ = filterByItemSetId_;
        } else {
          result.filterByItemSetId_ = filterByItemSetIdBuilder_.build();
        }
        result.filterByItemSetIdNull_ = filterByItemSetIdNull_;
        if (sortByCharacteristicIdListBuilder_ == null) {
          result.sortByCharacteristicIdList_ = sortByCharacteristicIdList_;
        } else {
          result.sortByCharacteristicIdList_ = sortByCharacteristicIdListBuilder_.build();
        }
        result.sortByCharacteristicIdListNull_ = sortByCharacteristicIdListNull_;
        if (sortOptionListBuilder_ == null) {
          result.sortOptionList_ = sortOptionList_;
        } else {
          result.sortOptionList_ = sortOptionListBuilder_.build();
        }
        result.sortOptionListNull_ = sortOptionListNull_;
        if (inheritDepthOptionListBuilder_ == null) {
          result.inheritDepthOptionList_ = inheritDepthOptionList_;
        } else {
          result.inheritDepthOptionList_ = inheritDepthOptionListBuilder_.build();
        }
        result.inheritDepthOptionListNull_ = inheritDepthOptionListNull_;
        if (recursiveEvaluationOptionListBuilder_ == null) {
          result.recursiveEvaluationOptionList_ = recursiveEvaluationOptionList_;
        } else {
          result.recursiveEvaluationOptionList_ = recursiveEvaluationOptionListBuilder_.build();
        }
        result.recursiveEvaluationOptionListNull_ = recursiveEvaluationOptionListNull_;
        if (getValuesForSortByCharacsBuilder_ == null) {
          result.getValuesForSortByCharacs_ = getValuesForSortByCharacs_;
        } else {
          result.getValuesForSortByCharacs_ = getValuesForSortByCharacsBuilder_.build();
        }
        result.getValuesForSortByCharacsNull_ = getValuesForSortByCharacsNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters other) {
        if (other == io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters.getDefaultInstance()) return this;
        if (other.hasBenefitId()) {
          mergeBenefitId(other.getBenefitId());
        }
        if (other.getBenefitIdNull() != false) {
          setBenefitIdNull(other.getBenefitIdNull());
        }
        if (other.hasOnlyDefinition()) {
          mergeOnlyDefinition(other.getOnlyDefinition());
        }
        if (other.getOnlyDefinitionNull() != false) {
          setOnlyDefinitionNull(other.getOnlyDefinitionNull());
        }
        if (other.hasFilterByItemSetId()) {
          mergeFilterByItemSetId(other.getFilterByItemSetId());
        }
        if (other.getFilterByItemSetIdNull() != false) {
          setFilterByItemSetIdNull(other.getFilterByItemSetIdNull());
        }
        if (other.hasSortByCharacteristicIdList()) {
          mergeSortByCharacteristicIdList(other.getSortByCharacteristicIdList());
        }
        if (other.getSortByCharacteristicIdListNull() != false) {
          setSortByCharacteristicIdListNull(other.getSortByCharacteristicIdListNull());
        }
        if (other.hasSortOptionList()) {
          mergeSortOptionList(other.getSortOptionList());
        }
        if (other.getSortOptionListNull() != false) {
          setSortOptionListNull(other.getSortOptionListNull());
        }
        if (other.hasInheritDepthOptionList()) {
          mergeInheritDepthOptionList(other.getInheritDepthOptionList());
        }
        if (other.getInheritDepthOptionListNull() != false) {
          setInheritDepthOptionListNull(other.getInheritDepthOptionListNull());
        }
        if (other.hasRecursiveEvaluationOptionList()) {
          mergeRecursiveEvaluationOptionList(other.getRecursiveEvaluationOptionList());
        }
        if (other.getRecursiveEvaluationOptionListNull() != false) {
          setRecursiveEvaluationOptionListNull(other.getRecursiveEvaluationOptionListNull());
        }
        if (other.hasGetValuesForSortByCharacs()) {
          mergeGetValuesForSortByCharacs(other.getGetValuesForSortByCharacs());
        }
        if (other.getGetValuesForSortByCharacsNull() != false) {
          setGetValuesForSortByCharacsNull(other.getGetValuesForSortByCharacsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.IntegerValue benefitId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> benefitIdBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public boolean hasBenefitId() {
        return benefitIdBuilder_ != null || benefitId_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public io.dstore.values.IntegerValue getBenefitId() {
        if (benefitIdBuilder_ == null) {
          return benefitId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : benefitId_;
        } else {
          return benefitIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public Builder setBenefitId(io.dstore.values.IntegerValue value) {
        if (benefitIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          benefitId_ = value;
          onChanged();
        } else {
          benefitIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public Builder setBenefitId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (benefitIdBuilder_ == null) {
          benefitId_ = builderForValue.build();
          onChanged();
        } else {
          benefitIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public Builder mergeBenefitId(io.dstore.values.IntegerValue value) {
        if (benefitIdBuilder_ == null) {
          if (benefitId_ != null) {
            benefitId_ =
              io.dstore.values.IntegerValue.newBuilder(benefitId_).mergeFrom(value).buildPartial();
          } else {
            benefitId_ = value;
          }
          onChanged();
        } else {
          benefitIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public Builder clearBenefitId() {
        if (benefitIdBuilder_ == null) {
          benefitId_ = null;
          onChanged();
        } else {
          benefitId_ = null;
          benefitIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public io.dstore.values.IntegerValue.Builder getBenefitIdBuilder() {
        
        onChanged();
        return getBenefitIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getBenefitIdOrBuilder() {
        if (benefitIdBuilder_ != null) {
          return benefitIdBuilder_.getMessageOrBuilder();
        } else {
          return benefitId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : benefitId_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue benefit_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getBenefitIdFieldBuilder() {
        if (benefitIdBuilder_ == null) {
          benefitIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getBenefitId(),
                  getParentForChildren(),
                  isClean());
          benefitId_ = null;
        }
        return benefitIdBuilder_;
      }

      private boolean benefitIdNull_ ;
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public boolean getBenefitIdNull() {
        return benefitIdNull_;
      }
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public Builder setBenefitIdNull(boolean value) {
        
        benefitIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public Builder clearBenefitIdNull() {
        
        benefitIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.IntegerValue onlyDefinition_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> onlyDefinitionBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public boolean hasOnlyDefinition() {
        return onlyDefinitionBuilder_ != null || onlyDefinition_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public io.dstore.values.IntegerValue getOnlyDefinition() {
        if (onlyDefinitionBuilder_ == null) {
          return onlyDefinition_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : onlyDefinition_;
        } else {
          return onlyDefinitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public Builder setOnlyDefinition(io.dstore.values.IntegerValue value) {
        if (onlyDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyDefinition_ = value;
          onChanged();
        } else {
          onlyDefinitionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public Builder setOnlyDefinition(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = builderForValue.build();
          onChanged();
        } else {
          onlyDefinitionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public Builder mergeOnlyDefinition(io.dstore.values.IntegerValue value) {
        if (onlyDefinitionBuilder_ == null) {
          if (onlyDefinition_ != null) {
            onlyDefinition_ =
              io.dstore.values.IntegerValue.newBuilder(onlyDefinition_).mergeFrom(value).buildPartial();
          } else {
            onlyDefinition_ = value;
          }
          onChanged();
        } else {
          onlyDefinitionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public Builder clearOnlyDefinition() {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = null;
          onChanged();
        } else {
          onlyDefinition_ = null;
          onlyDefinitionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public io.dstore.values.IntegerValue.Builder getOnlyDefinitionBuilder() {
        
        onChanged();
        return getOnlyDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getOnlyDefinitionOrBuilder() {
        if (onlyDefinitionBuilder_ != null) {
          return onlyDefinitionBuilder_.getMessageOrBuilder();
        } else {
          return onlyDefinition_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : onlyDefinition_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue only_definition = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getOnlyDefinitionFieldBuilder() {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getOnlyDefinition(),
                  getParentForChildren(),
                  isClean());
          onlyDefinition_ = null;
        }
        return onlyDefinitionBuilder_;
      }

      private boolean onlyDefinitionNull_ ;
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public boolean getOnlyDefinitionNull() {
        return onlyDefinitionNull_;
      }
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public Builder setOnlyDefinitionNull(boolean value) {
        
        onlyDefinitionNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public Builder clearOnlyDefinitionNull() {
        
        onlyDefinitionNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.IntegerValue filterByItemSetId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> filterByItemSetIdBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public boolean hasFilterByItemSetId() {
        return filterByItemSetIdBuilder_ != null || filterByItemSetId_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public io.dstore.values.IntegerValue getFilterByItemSetId() {
        if (filterByItemSetIdBuilder_ == null) {
          return filterByItemSetId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : filterByItemSetId_;
        } else {
          return filterByItemSetIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public Builder setFilterByItemSetId(io.dstore.values.IntegerValue value) {
        if (filterByItemSetIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filterByItemSetId_ = value;
          onChanged();
        } else {
          filterByItemSetIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public Builder setFilterByItemSetId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (filterByItemSetIdBuilder_ == null) {
          filterByItemSetId_ = builderForValue.build();
          onChanged();
        } else {
          filterByItemSetIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public Builder mergeFilterByItemSetId(io.dstore.values.IntegerValue value) {
        if (filterByItemSetIdBuilder_ == null) {
          if (filterByItemSetId_ != null) {
            filterByItemSetId_ =
              io.dstore.values.IntegerValue.newBuilder(filterByItemSetId_).mergeFrom(value).buildPartial();
          } else {
            filterByItemSetId_ = value;
          }
          onChanged();
        } else {
          filterByItemSetIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public Builder clearFilterByItemSetId() {
        if (filterByItemSetIdBuilder_ == null) {
          filterByItemSetId_ = null;
          onChanged();
        } else {
          filterByItemSetId_ = null;
          filterByItemSetIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public io.dstore.values.IntegerValue.Builder getFilterByItemSetIdBuilder() {
        
        onChanged();
        return getFilterByItemSetIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getFilterByItemSetIdOrBuilder() {
        if (filterByItemSetIdBuilder_ != null) {
          return filterByItemSetIdBuilder_.getMessageOrBuilder();
        } else {
          return filterByItemSetId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : filterByItemSetId_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue filter_by_item_set_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getFilterByItemSetIdFieldBuilder() {
        if (filterByItemSetIdBuilder_ == null) {
          filterByItemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getFilterByItemSetId(),
                  getParentForChildren(),
                  isClean());
          filterByItemSetId_ = null;
        }
        return filterByItemSetIdBuilder_;
      }

      private boolean filterByItemSetIdNull_ ;
      /**
       * <code>optional bool filter_by_item_set_id_null = 1003;</code>
       */
      public boolean getFilterByItemSetIdNull() {
        return filterByItemSetIdNull_;
      }
      /**
       * <code>optional bool filter_by_item_set_id_null = 1003;</code>
       */
      public Builder setFilterByItemSetIdNull(boolean value) {
        
        filterByItemSetIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_by_item_set_id_null = 1003;</code>
       */
      public Builder clearFilterByItemSetIdNull() {
        
        filterByItemSetIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue sortByCharacteristicIdList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> sortByCharacteristicIdListBuilder_;
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public boolean hasSortByCharacteristicIdList() {
        return sortByCharacteristicIdListBuilder_ != null || sortByCharacteristicIdList_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public io.dstore.values.StringValue getSortByCharacteristicIdList() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          return sortByCharacteristicIdList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : sortByCharacteristicIdList_;
        } else {
          return sortByCharacteristicIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public Builder setSortByCharacteristicIdList(io.dstore.values.StringValue value) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortByCharacteristicIdList_ = value;
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public Builder setSortByCharacteristicIdList(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = builderForValue.build();
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public Builder mergeSortByCharacteristicIdList(io.dstore.values.StringValue value) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          if (sortByCharacteristicIdList_ != null) {
            sortByCharacteristicIdList_ =
              io.dstore.values.StringValue.newBuilder(sortByCharacteristicIdList_).mergeFrom(value).buildPartial();
          } else {
            sortByCharacteristicIdList_ = value;
          }
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public Builder clearSortByCharacteristicIdList() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = null;
          onChanged();
        } else {
          sortByCharacteristicIdList_ = null;
          sortByCharacteristicIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public io.dstore.values.StringValue.Builder getSortByCharacteristicIdListBuilder() {
        
        onChanged();
        return getSortByCharacteristicIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      public io.dstore.values.StringValueOrBuilder getSortByCharacteristicIdListOrBuilder() {
        if (sortByCharacteristicIdListBuilder_ != null) {
          return sortByCharacteristicIdListBuilder_.getMessageOrBuilder();
        } else {
          return sortByCharacteristicIdList_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : sortByCharacteristicIdList_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue sort_by_characteristic_id_list = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getSortByCharacteristicIdListFieldBuilder() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getSortByCharacteristicIdList(),
                  getParentForChildren(),
                  isClean());
          sortByCharacteristicIdList_ = null;
        }
        return sortByCharacteristicIdListBuilder_;
      }

      private boolean sortByCharacteristicIdListNull_ ;
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1004;</code>
       */
      public boolean getSortByCharacteristicIdListNull() {
        return sortByCharacteristicIdListNull_;
      }
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1004;</code>
       */
      public Builder setSortByCharacteristicIdListNull(boolean value) {
        
        sortByCharacteristicIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1004;</code>
       */
      public Builder clearSortByCharacteristicIdListNull() {
        
        sortByCharacteristicIdListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue sortOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> sortOptionListBuilder_;
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public boolean hasSortOptionList() {
        return sortOptionListBuilder_ != null || sortOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public io.dstore.values.StringValue getSortOptionList() {
        if (sortOptionListBuilder_ == null) {
          return sortOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : sortOptionList_;
        } else {
          return sortOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public Builder setSortOptionList(io.dstore.values.StringValue value) {
        if (sortOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortOptionList_ = value;
          onChanged();
        } else {
          sortOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public Builder setSortOptionList(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = builderForValue.build();
          onChanged();
        } else {
          sortOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public Builder mergeSortOptionList(io.dstore.values.StringValue value) {
        if (sortOptionListBuilder_ == null) {
          if (sortOptionList_ != null) {
            sortOptionList_ =
              io.dstore.values.StringValue.newBuilder(sortOptionList_).mergeFrom(value).buildPartial();
          } else {
            sortOptionList_ = value;
          }
          onChanged();
        } else {
          sortOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public Builder clearSortOptionList() {
        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = null;
          onChanged();
        } else {
          sortOptionList_ = null;
          sortOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public io.dstore.values.StringValue.Builder getSortOptionListBuilder() {
        
        onChanged();
        return getSortOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      public io.dstore.values.StringValueOrBuilder getSortOptionListOrBuilder() {
        if (sortOptionListBuilder_ != null) {
          return sortOptionListBuilder_.getMessageOrBuilder();
        } else {
          return sortOptionList_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : sortOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue sort_option_list = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getSortOptionListFieldBuilder() {
        if (sortOptionListBuilder_ == null) {
          sortOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getSortOptionList(),
                  getParentForChildren(),
                  isClean());
          sortOptionList_ = null;
        }
        return sortOptionListBuilder_;
      }

      private boolean sortOptionListNull_ ;
      /**
       * <code>optional bool sort_option_list_null = 1005;</code>
       */
      public boolean getSortOptionListNull() {
        return sortOptionListNull_;
      }
      /**
       * <code>optional bool sort_option_list_null = 1005;</code>
       */
      public Builder setSortOptionListNull(boolean value) {
        
        sortOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sort_option_list_null = 1005;</code>
       */
      public Builder clearSortOptionListNull() {
        
        sortOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue inheritDepthOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> inheritDepthOptionListBuilder_;
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public boolean hasInheritDepthOptionList() {
        return inheritDepthOptionListBuilder_ != null || inheritDepthOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public io.dstore.values.StringValue getInheritDepthOptionList() {
        if (inheritDepthOptionListBuilder_ == null) {
          return inheritDepthOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : inheritDepthOptionList_;
        } else {
          return inheritDepthOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public Builder setInheritDepthOptionList(io.dstore.values.StringValue value) {
        if (inheritDepthOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inheritDepthOptionList_ = value;
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public Builder setInheritDepthOptionList(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = builderForValue.build();
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public Builder mergeInheritDepthOptionList(io.dstore.values.StringValue value) {
        if (inheritDepthOptionListBuilder_ == null) {
          if (inheritDepthOptionList_ != null) {
            inheritDepthOptionList_ =
              io.dstore.values.StringValue.newBuilder(inheritDepthOptionList_).mergeFrom(value).buildPartial();
          } else {
            inheritDepthOptionList_ = value;
          }
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public Builder clearInheritDepthOptionList() {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = null;
          onChanged();
        } else {
          inheritDepthOptionList_ = null;
          inheritDepthOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public io.dstore.values.StringValue.Builder getInheritDepthOptionListBuilder() {
        
        onChanged();
        return getInheritDepthOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      public io.dstore.values.StringValueOrBuilder getInheritDepthOptionListOrBuilder() {
        if (inheritDepthOptionListBuilder_ != null) {
          return inheritDepthOptionListBuilder_.getMessageOrBuilder();
        } else {
          return inheritDepthOptionList_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : inheritDepthOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue inherit_depth_option_list = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getInheritDepthOptionListFieldBuilder() {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getInheritDepthOptionList(),
                  getParentForChildren(),
                  isClean());
          inheritDepthOptionList_ = null;
        }
        return inheritDepthOptionListBuilder_;
      }

      private boolean inheritDepthOptionListNull_ ;
      /**
       * <code>optional bool inherit_depth_option_list_null = 1006;</code>
       */
      public boolean getInheritDepthOptionListNull() {
        return inheritDepthOptionListNull_;
      }
      /**
       * <code>optional bool inherit_depth_option_list_null = 1006;</code>
       */
      public Builder setInheritDepthOptionListNull(boolean value) {
        
        inheritDepthOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inherit_depth_option_list_null = 1006;</code>
       */
      public Builder clearInheritDepthOptionListNull() {
        
        inheritDepthOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue recursiveEvaluationOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> recursiveEvaluationOptionListBuilder_;
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public boolean hasRecursiveEvaluationOptionList() {
        return recursiveEvaluationOptionListBuilder_ != null || recursiveEvaluationOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public io.dstore.values.StringValue getRecursiveEvaluationOptionList() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          return recursiveEvaluationOptionList_ == null ? io.dstore.values.StringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
        } else {
          return recursiveEvaluationOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public Builder setRecursiveEvaluationOptionList(io.dstore.values.StringValue value) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recursiveEvaluationOptionList_ = value;
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public Builder setRecursiveEvaluationOptionList(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = builderForValue.build();
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public Builder mergeRecursiveEvaluationOptionList(io.dstore.values.StringValue value) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          if (recursiveEvaluationOptionList_ != null) {
            recursiveEvaluationOptionList_ =
              io.dstore.values.StringValue.newBuilder(recursiveEvaluationOptionList_).mergeFrom(value).buildPartial();
          } else {
            recursiveEvaluationOptionList_ = value;
          }
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public Builder clearRecursiveEvaluationOptionList() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = null;
          onChanged();
        } else {
          recursiveEvaluationOptionList_ = null;
          recursiveEvaluationOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public io.dstore.values.StringValue.Builder getRecursiveEvaluationOptionListBuilder() {
        
        onChanged();
        return getRecursiveEvaluationOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      public io.dstore.values.StringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder() {
        if (recursiveEvaluationOptionListBuilder_ != null) {
          return recursiveEvaluationOptionListBuilder_.getMessageOrBuilder();
        } else {
          return recursiveEvaluationOptionList_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue recursive_evaluation_option_list = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getRecursiveEvaluationOptionListFieldBuilder() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getRecursiveEvaluationOptionList(),
                  getParentForChildren(),
                  isClean());
          recursiveEvaluationOptionList_ = null;
        }
        return recursiveEvaluationOptionListBuilder_;
      }

      private boolean recursiveEvaluationOptionListNull_ ;
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1007;</code>
       */
      public boolean getRecursiveEvaluationOptionListNull() {
        return recursiveEvaluationOptionListNull_;
      }
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1007;</code>
       */
      public Builder setRecursiveEvaluationOptionListNull(boolean value) {
        
        recursiveEvaluationOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1007;</code>
       */
      public Builder clearRecursiveEvaluationOptionListNull() {
        
        recursiveEvaluationOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.BooleanValue getValuesForSortByCharacs_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> getValuesForSortByCharacsBuilder_;
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public boolean hasGetValuesForSortByCharacs() {
        return getValuesForSortByCharacsBuilder_ != null || getValuesForSortByCharacs_ != null;
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public io.dstore.values.BooleanValue getGetValuesForSortByCharacs() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          return getValuesForSortByCharacs_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
        } else {
          return getValuesForSortByCharacsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public Builder setGetValuesForSortByCharacs(io.dstore.values.BooleanValue value) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getValuesForSortByCharacs_ = value;
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public Builder setGetValuesForSortByCharacs(
          io.dstore.values.BooleanValue.Builder builderForValue) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = builderForValue.build();
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public Builder mergeGetValuesForSortByCharacs(io.dstore.values.BooleanValue value) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          if (getValuesForSortByCharacs_ != null) {
            getValuesForSortByCharacs_ =
              io.dstore.values.BooleanValue.newBuilder(getValuesForSortByCharacs_).mergeFrom(value).buildPartial();
          } else {
            getValuesForSortByCharacs_ = value;
          }
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public Builder clearGetValuesForSortByCharacs() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = null;
          onChanged();
        } else {
          getValuesForSortByCharacs_ = null;
          getValuesForSortByCharacsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public io.dstore.values.BooleanValue.Builder getGetValuesForSortByCharacsBuilder() {
        
        onChanged();
        return getGetValuesForSortByCharacsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder() {
        if (getValuesForSortByCharacsBuilder_ != null) {
          return getValuesForSortByCharacsBuilder_.getMessageOrBuilder();
        } else {
          return getValuesForSortByCharacs_ == null ?
              io.dstore.values.BooleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
        }
      }
      /**
       * <code>optional .dstore.values.BooleanValue get_values_for_sort_by_characs = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
          getGetValuesForSortByCharacsFieldBuilder() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                  getGetValuesForSortByCharacs(),
                  getParentForChildren(),
                  isClean());
          getValuesForSortByCharacs_ = null;
        }
        return getValuesForSortByCharacsBuilder_;
      }

      private boolean getValuesForSortByCharacsNull_ ;
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1008;</code>
       */
      public boolean getGetValuesForSortByCharacsNull() {
        return getValuesForSortByCharacsNull_;
      }
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1008;</code>
       */
      public Builder setGetValuesForSortByCharacsNull(boolean value) {
        
        getValuesForSortByCharacsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1008;</code>
       */
      public Builder clearGetValuesForSortByCharacsNull() {
        
        getValuesForSortByCharacsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Parameters)
    private static final io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters();
    }

    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBundlePricing_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      boolean hasNetBasedPricing();
      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      io.dstore.values.BooleanValue getNetBasedPricing();
      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getNetBasedPricingOrBuilder();

      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      boolean hasItemConditionId();
      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      io.dstore.values.IntegerValue getItemConditionId();
      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemConditionIdOrBuilder();

      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      boolean hasBundlePricingTypeId();
      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      io.dstore.values.IntegerValue getBundlePricingTypeId();
      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getBundlePricingTypeIdOrBuilder();

      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      boolean hasBundlePricingType();
      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      io.dstore.values.StringValue getBundlePricingType();
      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      io.dstore.values.StringValueOrBuilder getBundlePricingTypeOrBuilder();

      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      boolean hasItemSetId();
      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      io.dstore.values.IntegerValue getItemSetId();
      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemSetIdOrBuilder();

      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      boolean hasQuantity();
      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      io.dstore.values.IntegerValue getQuantity();
      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getQuantityOrBuilder();

      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      boolean hasDistinctItemsOnly();
      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      io.dstore.values.BooleanValue getDistinctItemsOnly();
      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getDistinctItemsOnlyOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      boolean hasItemConditionDescription();
      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      io.dstore.values.StringValue getItemConditionDescription();
      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      io.dstore.values.StringValueOrBuilder getItemConditionDescriptionOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      boolean hasSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      io.dstore.values.IntegerValue getSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder();

      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      boolean hasBundlePriceOrDiscount();
      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      io.dstore.values.DecimalValue getBundlePriceOrDiscount();
      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      io.dstore.values.DecimalValueOrBuilder getBundlePriceOrDiscountOrBuilder();

      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      boolean hasCondition1();
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      io.dstore.values.StringValue getCondition1();
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      io.dstore.values.StringValueOrBuilder getCondition1OrBuilder();

      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      boolean hasCondition2();
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      io.dstore.values.StringValue getCondition2();
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      io.dstore.values.StringValueOrBuilder getCondition2OrBuilder();

      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      boolean hasRecursiveEvaluation();
      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      io.dstore.values.IntegerValue getRecursiveEvaluation();
      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getRecursiveEvaluationOrBuilder();

      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      boolean hasDomainTreeNodeIds();
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      io.dstore.values.StringValue getDomainTreeNodeIds();
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      io.dstore.values.StringValueOrBuilder getDomainTreeNodeIdsOrBuilder();

      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      io.dstore.values.IntegerValue getNodeCharacteristicId();
      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      boolean hasItemConditionPartId();
      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      io.dstore.values.IntegerValue getItemConditionPartId();
      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemConditionPartIdOrBuilder();

      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      boolean hasCombineGroupsWithANDOperator();
      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      io.dstore.values.BooleanValue getCombineGroupsWithANDOperator();
      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      boolean hasItemConditionPartDescription();
      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      io.dstore.values.StringValue getItemConditionPartDescription();
      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      io.dstore.values.StringValueOrBuilder getItemConditionPartDescriptionOrBuilder();

      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      boolean hasLevelIds();
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      io.dstore.values.StringValue getLevelIds();
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      io.dstore.values.StringValueOrBuilder getLevelIdsOrBuilder();

      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      boolean hasItemConditionGroupId();
      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      io.dstore.values.IntegerValue getItemConditionGroupId();
      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemConditionGroupIdOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      boolean hasItemGroupSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      io.dstore.values.IntegerValue getItemGroupSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemGroupSortNoOrBuilder();

      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      boolean hasOperator1();
      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      io.dstore.values.StringValue getOperator1();
      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      io.dstore.values.StringValueOrBuilder getOperator1OrBuilder();

      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      boolean hasOperator2();
      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      io.dstore.values.StringValue getOperator2();
      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      io.dstore.values.StringValueOrBuilder getOperator2OrBuilder();

      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      boolean hasItemConditionGroupDescription();
      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      io.dstore.values.StringValue getItemConditionGroupDescription();
      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      io.dstore.values.StringValueOrBuilder getItemConditionGroupDescriptionOrBuilder();

      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      boolean hasCombinePartsWithANDOperator();
      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      io.dstore.values.BooleanValue getCombinePartsWithANDOperator();
      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      boolean hasItemPartSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      io.dstore.values.IntegerValue getItemPartSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getItemPartSortNoOrBuilder();

      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      boolean hasInheritDepth();
      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      io.dstore.values.IntegerValue getInheritDepth();
      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getInheritDepthOrBuilder();

      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      boolean hasNodeDescription();
      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      io.dstore.values.StringValue getNodeDescription();
      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      boolean hasValue2();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      io.dstore.values.StringValue getValue2();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      io.dstore.values.StringValueOrBuilder getValue2OrBuilder();

      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      boolean hasValue3();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      io.dstore.values.StringValue getValue3();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      io.dstore.values.StringValueOrBuilder getValue3OrBuilder();

      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      boolean hasValue1();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      io.dstore.values.StringValue getValue1();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      io.dstore.values.StringValueOrBuilder getValue1OrBuilder();

      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      boolean hasTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      io.dstore.values.IntegerValue getTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      io.dstore.values.IntegerValue getNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (netBasedPricing_ != null) {
                  subBuilder = netBasedPricing_.toBuilder();
                }
                netBasedPricing_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(netBasedPricing_);
                  netBasedPricing_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemConditionId_ != null) {
                  subBuilder = itemConditionId_.toBuilder();
                }
                itemConditionId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionId_);
                  itemConditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (bundlePricingTypeId_ != null) {
                  subBuilder = bundlePricingTypeId_.toBuilder();
                }
                bundlePricingTypeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bundlePricingTypeId_);
                  bundlePricingTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (bundlePricingType_ != null) {
                  subBuilder = bundlePricingType_.toBuilder();
                }
                bundlePricingType_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bundlePricingType_);
                  bundlePricingType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemSetId_ != null) {
                  subBuilder = itemSetId_.toBuilder();
                }
                itemSetId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemSetId_);
                  itemSetId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (quantity_ != null) {
                  subBuilder = quantity_.toBuilder();
                }
                quantity_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quantity_);
                  quantity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (distinctItemsOnly_ != null) {
                  subBuilder = distinctItemsOnly_.toBuilder();
                }
                distinctItemsOnly_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(distinctItemsOnly_);
                  distinctItemsOnly_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (itemConditionDescription_ != null) {
                  subBuilder = itemConditionDescription_.toBuilder();
                }
                itemConditionDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionDescription_);
                  itemConditionDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.values.DecimalValue.Builder subBuilder = null;
                if (bundlePriceOrDiscount_ != null) {
                  subBuilder = bundlePriceOrDiscount_.toBuilder();
                }
                bundlePriceOrDiscount_ = input.readMessage(io.dstore.values.DecimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bundlePriceOrDiscount_);
                  bundlePriceOrDiscount_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160010: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (condition1_ != null) {
                  subBuilder = condition1_.toBuilder();
                }
                condition1_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition1_);
                  condition1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160018: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (condition2_ != null) {
                  subBuilder = condition2_.toBuilder();
                }
                condition2_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition2_);
                  condition2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160026: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (recursiveEvaluation_ != null) {
                  subBuilder = recursiveEvaluation_.toBuilder();
                }
                recursiveEvaluation_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(recursiveEvaluation_);
                  recursiveEvaluation_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (domainTreeNodeIds_ != null) {
                  subBuilder = domainTreeNodeIds_.toBuilder();
                }
                domainTreeNodeIds_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(domainTreeNodeIds_);
                  domainTreeNodeIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160042: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemConditionPartId_ != null) {
                  subBuilder = itemConditionPartId_.toBuilder();
                }
                itemConditionPartId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartId_);
                  itemConditionPartId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160066: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (combineGroupsWithANDOperator_ != null) {
                  subBuilder = combineGroupsWithANDOperator_.toBuilder();
                }
                combineGroupsWithANDOperator_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combineGroupsWithANDOperator_);
                  combineGroupsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160074: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (itemConditionPartDescription_ != null) {
                  subBuilder = itemConditionPartDescription_.toBuilder();
                }
                itemConditionPartDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartDescription_);
                  itemConditionPartDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160090: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (levelIds_ != null) {
                  subBuilder = levelIds_.toBuilder();
                }
                levelIds_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelIds_);
                  levelIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160098: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemConditionGroupId_ != null) {
                  subBuilder = itemConditionGroupId_.toBuilder();
                }
                itemConditionGroupId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupId_);
                  itemConditionGroupId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160106: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemGroupSortNo_ != null) {
                  subBuilder = itemGroupSortNo_.toBuilder();
                }
                itemGroupSortNo_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemGroupSortNo_);
                  itemGroupSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160114: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (operator1_ != null) {
                  subBuilder = operator1_.toBuilder();
                }
                operator1_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator1_);
                  operator1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160130: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (operator2_ != null) {
                  subBuilder = operator2_.toBuilder();
                }
                operator2_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator2_);
                  operator2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160138: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (itemConditionGroupDescription_ != null) {
                  subBuilder = itemConditionGroupDescription_.toBuilder();
                }
                itemConditionGroupDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupDescription_);
                  itemConditionGroupDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160146: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (combinePartsWithANDOperator_ != null) {
                  subBuilder = combinePartsWithANDOperator_.toBuilder();
                }
                combinePartsWithANDOperator_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combinePartsWithANDOperator_);
                  combinePartsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160154: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (itemPartSortNo_ != null) {
                  subBuilder = itemPartSortNo_.toBuilder();
                }
                itemPartSortNo_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemPartSortNo_);
                  itemPartSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160218: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (inheritDepth_ != null) {
                  subBuilder = inheritDepth_.toBuilder();
                }
                inheritDepth_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inheritDepth_);
                  inheritDepth_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240010: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240018: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (value2_ != null) {
                  subBuilder = value2_.toBuilder();
                }
                value2_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2_);
                  value2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240026: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (value3_ != null) {
                  subBuilder = value3_.toBuilder();
                }
                value3_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3_);
                  value3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (value1_ != null) {
                  subBuilder = value1_.toBuilder();
                }
                value1_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1_);
                  value1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int NET_BASED_PRICING_FIELD_NUMBER = 10001;
      private io.dstore.values.BooleanValue netBasedPricing_;
      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      public boolean hasNetBasedPricing() {
        return netBasedPricing_ != null;
      }
      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      public io.dstore.values.BooleanValue getNetBasedPricing() {
        return netBasedPricing_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : netBasedPricing_;
      }
      /**
       * <pre>
       * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getNetBasedPricingOrBuilder() {
        return getNetBasedPricing();
      }

      public static final int ITEM_CONDITION_ID_FIELD_NUMBER = 10002;
      private io.dstore.values.IntegerValue itemConditionId_;
      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      public boolean hasItemConditionId() {
        return itemConditionId_ != null;
      }
      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      public io.dstore.values.IntegerValue getItemConditionId() {
        return itemConditionId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionId_;
      }
      /**
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemConditionIdOrBuilder() {
        return getItemConditionId();
      }

      public static final int BUNDLE_PRICING_TYPE_ID_FIELD_NUMBER = 10003;
      private io.dstore.values.IntegerValue bundlePricingTypeId_;
      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      public boolean hasBundlePricingTypeId() {
        return bundlePricingTypeId_ != null;
      }
      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      public io.dstore.values.IntegerValue getBundlePricingTypeId() {
        return bundlePricingTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : bundlePricingTypeId_;
      }
      /**
       * <pre>
       * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getBundlePricingTypeIdOrBuilder() {
        return getBundlePricingTypeId();
      }

      public static final int BUNDLE_PRICING_TYPE_FIELD_NUMBER = 10004;
      private io.dstore.values.StringValue bundlePricingType_;
      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      public boolean hasBundlePricingType() {
        return bundlePricingType_ != null;
      }
      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      public io.dstore.values.StringValue getBundlePricingType() {
        return bundlePricingType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : bundlePricingType_;
      }
      /**
       * <pre>
       * Die Bezeichnung von "BundlePricingTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getBundlePricingTypeOrBuilder() {
        return getBundlePricingType();
      }

      public static final int ITEM_SET_ID_FIELD_NUMBER = 10005;
      private io.dstore.values.IntegerValue itemSetId_;
      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      public boolean hasItemSetId() {
        return itemSetId_ != null;
      }
      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      public io.dstore.values.IntegerValue getItemSetId() {
        return itemSetId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemSetId_;
      }
      /**
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemSetIdOrBuilder() {
        return getItemSetId();
      }

      public static final int QUANTITY_FIELD_NUMBER = 10006;
      private io.dstore.values.IntegerValue quantity_;
      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      public boolean hasQuantity() {
        return quantity_ != null;
      }
      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      public io.dstore.values.IntegerValue getQuantity() {
        return quantity_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : quantity_;
      }
      /**
       * <pre>
       * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getQuantityOrBuilder() {
        return getQuantity();
      }

      public static final int DISTINCT_ITEMS_ONLY_FIELD_NUMBER = 10007;
      private io.dstore.values.BooleanValue distinctItemsOnly_;
      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      public boolean hasDistinctItemsOnly() {
        return distinctItemsOnly_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      public io.dstore.values.BooleanValue getDistinctItemsOnly() {
        return distinctItemsOnly_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : distinctItemsOnly_;
      }
      /**
       * <pre>
       * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getDistinctItemsOnlyOrBuilder() {
        return getDistinctItemsOnly();
      }

      public static final int ITEM_CONDITION_DESCRIPTION_FIELD_NUMBER = 10008;
      private io.dstore.values.StringValue itemConditionDescription_;
      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      public boolean hasItemConditionDescription() {
        return itemConditionDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      public io.dstore.values.StringValue getItemConditionDescription() {
        return itemConditionDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
       */
      public io.dstore.values.StringValueOrBuilder getItemConditionDescriptionOrBuilder() {
        return getItemConditionDescription();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10009;
      private io.dstore.values.IntegerValue sortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      public io.dstore.values.IntegerValue getSortNo() {
        return sortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int BUNDLE_PRICE_OR_DISCOUNT_FIELD_NUMBER = 10010;
      private io.dstore.values.DecimalValue bundlePriceOrDiscount_;
      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      public boolean hasBundlePriceOrDiscount() {
        return bundlePriceOrDiscount_ != null;
      }
      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      public io.dstore.values.DecimalValue getBundlePriceOrDiscount() {
        return bundlePriceOrDiscount_ == null ? io.dstore.values.DecimalValue.getDefaultInstance() : bundlePriceOrDiscount_;
      }
      /**
       * <pre>
       * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
       * </pre>
       *
       * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
       */
      public io.dstore.values.DecimalValueOrBuilder getBundlePriceOrDiscountOrBuilder() {
        return getBundlePriceOrDiscount();
      }

      public static final int CONDITION1_FIELD_NUMBER = 20001;
      private io.dstore.values.StringValue condition1_;
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      public boolean hasCondition1() {
        return condition1_ != null;
      }
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      public io.dstore.values.StringValue getCondition1() {
        return condition1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition1_;
      }
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
       */
      public io.dstore.values.StringValueOrBuilder getCondition1OrBuilder() {
        return getCondition1();
      }

      public static final int CONDITION2_FIELD_NUMBER = 20002;
      private io.dstore.values.StringValue condition2_;
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      public boolean hasCondition2() {
        return condition2_ != null;
      }
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      public io.dstore.values.StringValue getCondition2() {
        return condition2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition2_;
      }
      /**
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
       */
      public io.dstore.values.StringValueOrBuilder getCondition2OrBuilder() {
        return getCondition2();
      }

      public static final int RECURSIVE_EVALUATION_FIELD_NUMBER = 20003;
      private io.dstore.values.IntegerValue recursiveEvaluation_;
      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      public boolean hasRecursiveEvaluation() {
        return recursiveEvaluation_ != null;
      }
      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      public io.dstore.values.IntegerValue getRecursiveEvaluation() {
        return recursiveEvaluation_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : recursiveEvaluation_;
      }
      /**
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getRecursiveEvaluationOrBuilder() {
        return getRecursiveEvaluation();
      }

      public static final int DOMAIN_TREE_NODE_IDS_FIELD_NUMBER = 20004;
      private io.dstore.values.StringValue domainTreeNodeIds_;
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      public boolean hasDomainTreeNodeIds() {
        return domainTreeNodeIds_ != null;
      }
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      public io.dstore.values.StringValue getDomainTreeNodeIds() {
        return domainTreeNodeIds_ == null ? io.dstore.values.StringValue.getDefaultInstance() : domainTreeNodeIds_;
      }
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
        return getDomainTreeNodeIds();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 20005;
      private io.dstore.values.IntegerValue nodeCharacteristicId_;
      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      public io.dstore.values.IntegerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <pre>
       * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int ITEM_CONDITION_PART_ID_FIELD_NUMBER = 20006;
      private io.dstore.values.IntegerValue itemConditionPartId_;
      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      public boolean hasItemConditionPartId() {
        return itemConditionPartId_ != null;
      }
      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      public io.dstore.values.IntegerValue getItemConditionPartId() {
        return itemConditionPartId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionPartId_;
      }
      /**
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemConditionPartIdOrBuilder() {
        return getItemConditionPartId();
      }

      public static final int COMBINE_GROUPS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 20008;
      private io.dstore.values.BooleanValue combineGroupsWithANDOperator_;
      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      public boolean hasCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      public io.dstore.values.BooleanValue getCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
      }
      /**
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
        return getCombineGroupsWithANDOperator();
      }

      public static final int ITEM_CONDITION_PART_DESCRIPTION_FIELD_NUMBER = 20009;
      private io.dstore.values.StringValue itemConditionPartDescription_;
      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      public boolean hasItemConditionPartDescription() {
        return itemConditionPartDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      public io.dstore.values.StringValue getItemConditionPartDescription() {
        return itemConditionPartDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionPartDescription_;
      }
      /**
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
       */
      public io.dstore.values.StringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
        return getItemConditionPartDescription();
      }

      public static final int LEVEL_IDS_FIELD_NUMBER = 20011;
      private io.dstore.values.StringValue levelIds_;
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      public boolean hasLevelIds() {
        return levelIds_ != null;
      }
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      public io.dstore.values.StringValue getLevelIds() {
        return levelIds_ == null ? io.dstore.values.StringValue.getDefaultInstance() : levelIds_;
      }
      /**
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       *
       * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLevelIdsOrBuilder() {
        return getLevelIds();
      }

      public static final int ITEM_CONDITION_GROUP_ID_FIELD_NUMBER = 20012;
      private io.dstore.values.IntegerValue itemConditionGroupId_;
      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      public boolean hasItemConditionGroupId() {
        return itemConditionGroupId_ != null;
      }
      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      public io.dstore.values.IntegerValue getItemConditionGroupId() {
        return itemConditionGroupId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionGroupId_;
      }
      /**
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemConditionGroupIdOrBuilder() {
        return getItemConditionGroupId();
      }

      public static final int ITEM_GROUP_SORT_NO_FIELD_NUMBER = 20013;
      private io.dstore.values.IntegerValue itemGroupSortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      public boolean hasItemGroupSortNo() {
        return itemGroupSortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      public io.dstore.values.IntegerValue getItemGroupSortNo() {
        return itemGroupSortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemGroupSortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemGroupSortNoOrBuilder() {
        return getItemGroupSortNo();
      }

      public static final int OPERATOR1_FIELD_NUMBER = 20014;
      private io.dstore.values.StringValue operator1_;
      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      public boolean hasOperator1() {
        return operator1_ != null;
      }
      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      public io.dstore.values.StringValue getOperator1() {
        return operator1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator1_;
      }
      /**
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
       */
      public io.dstore.values.StringValueOrBuilder getOperator1OrBuilder() {
        return getOperator1();
      }

      public static final int OPERATOR2_FIELD_NUMBER = 20016;
      private io.dstore.values.StringValue operator2_;
      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      public boolean hasOperator2() {
        return operator2_ != null;
      }
      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      public io.dstore.values.StringValue getOperator2() {
        return operator2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator2_;
      }
      /**
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
       * </pre>
       *
       * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
       */
      public io.dstore.values.StringValueOrBuilder getOperator2OrBuilder() {
        return getOperator2();
      }

      public static final int ITEM_CONDITION_GROUP_DESCRIPTION_FIELD_NUMBER = 20017;
      private io.dstore.values.StringValue itemConditionGroupDescription_;
      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      public boolean hasItemConditionGroupDescription() {
        return itemConditionGroupDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      public io.dstore.values.StringValue getItemConditionGroupDescription() {
        return itemConditionGroupDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionGroupDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
       */
      public io.dstore.values.StringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
        return getItemConditionGroupDescription();
      }

      public static final int COMBINE_PARTS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 20018;
      private io.dstore.values.BooleanValue combinePartsWithANDOperator_;
      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      public boolean hasCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      public io.dstore.values.BooleanValue getCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
      }
      /**
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
        return getCombinePartsWithANDOperator();
      }

      public static final int ITEM_PART_SORT_NO_FIELD_NUMBER = 20019;
      private io.dstore.values.IntegerValue itemPartSortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      public boolean hasItemPartSortNo() {
        return itemPartSortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      public io.dstore.values.IntegerValue getItemPartSortNo() {
        return itemPartSortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemPartSortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getItemPartSortNoOrBuilder() {
        return getItemPartSortNo();
      }

      public static final int INHERIT_DEPTH_FIELD_NUMBER = 20027;
      private io.dstore.values.IntegerValue inheritDepth_;
      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      public boolean hasInheritDepth() {
        return inheritDepth_ != null;
      }
      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      public io.dstore.values.IntegerValue getInheritDepth() {
        return inheritDepth_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : inheritDepth_;
      }
      /**
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getInheritDepthOrBuilder() {
        return getInheritDepth();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 30001;
      private io.dstore.values.StringValue nodeDescription_;
      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      public io.dstore.values.StringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung von "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue node_description = 30001;</code>
       */
      public io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int VALUE2_FIELD_NUMBER = 30002;
      private io.dstore.values.StringValue value2_;
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      public boolean hasValue2() {
        return value2_ != null;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      public io.dstore.values.StringValue getValue2() {
        return value2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value2_;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value2 = 30002;</code>
       */
      public io.dstore.values.StringValueOrBuilder getValue2OrBuilder() {
        return getValue2();
      }

      public static final int VALUE3_FIELD_NUMBER = 30003;
      private io.dstore.values.StringValue value3_;
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      public boolean hasValue3() {
        return value3_ != null;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      public io.dstore.values.StringValue getValue3() {
        return value3_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value3_;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value3 = 30003;</code>
       */
      public io.dstore.values.StringValueOrBuilder getValue3OrBuilder() {
        return getValue3();
      }

      public static final int VALUE1_FIELD_NUMBER = 30004;
      private io.dstore.values.StringValue value1_;
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      public boolean hasValue1() {
        return value1_ != null;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      public io.dstore.values.StringValue getValue1() {
        return value1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value1_;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
       * </pre>
       *
       * <code>optional .dstore.values.StringValue value1 = 30004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getValue1OrBuilder() {
        return getValue1();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 30006;
      private io.dstore.values.IntegerValue treeNodeId_;
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      public io.dstore.values.IntegerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 30007;
      private io.dstore.values.IntegerValue nodeId_;
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      public io.dstore.values.IntegerValue getNodeId() {
        return nodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (netBasedPricing_ != null) {
          output.writeMessage(10001, getNetBasedPricing());
        }
        if (itemConditionId_ != null) {
          output.writeMessage(10002, getItemConditionId());
        }
        if (bundlePricingTypeId_ != null) {
          output.writeMessage(10003, getBundlePricingTypeId());
        }
        if (bundlePricingType_ != null) {
          output.writeMessage(10004, getBundlePricingType());
        }
        if (itemSetId_ != null) {
          output.writeMessage(10005, getItemSetId());
        }
        if (quantity_ != null) {
          output.writeMessage(10006, getQuantity());
        }
        if (distinctItemsOnly_ != null) {
          output.writeMessage(10007, getDistinctItemsOnly());
        }
        if (itemConditionDescription_ != null) {
          output.writeMessage(10008, getItemConditionDescription());
        }
        if (sortNo_ != null) {
          output.writeMessage(10009, getSortNo());
        }
        if (bundlePriceOrDiscount_ != null) {
          output.writeMessage(10010, getBundlePriceOrDiscount());
        }
        if (condition1_ != null) {
          output.writeMessage(20001, getCondition1());
        }
        if (condition2_ != null) {
          output.writeMessage(20002, getCondition2());
        }
        if (recursiveEvaluation_ != null) {
          output.writeMessage(20003, getRecursiveEvaluation());
        }
        if (domainTreeNodeIds_ != null) {
          output.writeMessage(20004, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(20005, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          output.writeMessage(20006, getItemConditionPartId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          output.writeMessage(20008, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          output.writeMessage(20009, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          output.writeMessage(20011, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          output.writeMessage(20012, getItemConditionGroupId());
        }
        if (itemGroupSortNo_ != null) {
          output.writeMessage(20013, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          output.writeMessage(20014, getOperator1());
        }
        if (operator2_ != null) {
          output.writeMessage(20016, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          output.writeMessage(20017, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          output.writeMessage(20018, getCombinePartsWithANDOperator());
        }
        if (itemPartSortNo_ != null) {
          output.writeMessage(20019, getItemPartSortNo());
        }
        if (inheritDepth_ != null) {
          output.writeMessage(20027, getInheritDepth());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(30001, getNodeDescription());
        }
        if (value2_ != null) {
          output.writeMessage(30002, getValue2());
        }
        if (value3_ != null) {
          output.writeMessage(30003, getValue3());
        }
        if (value1_ != null) {
          output.writeMessage(30004, getValue1());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(30006, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(30007, getNodeId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (netBasedPricing_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getNetBasedPricing());
        }
        if (itemConditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getItemConditionId());
        }
        if (bundlePricingTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getBundlePricingTypeId());
        }
        if (bundlePricingType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getBundlePricingType());
        }
        if (itemSetId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getItemSetId());
        }
        if (quantity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getQuantity());
        }
        if (distinctItemsOnly_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getDistinctItemsOnly());
        }
        if (itemConditionDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getItemConditionDescription());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getSortNo());
        }
        if (bundlePriceOrDiscount_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getBundlePriceOrDiscount());
        }
        if (condition1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20001, getCondition1());
        }
        if (condition2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20002, getCondition2());
        }
        if (recursiveEvaluation_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20003, getRecursiveEvaluation());
        }
        if (domainTreeNodeIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20004, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20005, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20006, getItemConditionPartId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20008, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20009, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20011, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20012, getItemConditionGroupId());
        }
        if (itemGroupSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20013, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20014, getOperator1());
        }
        if (operator2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20016, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20017, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20018, getCombinePartsWithANDOperator());
        }
        if (itemPartSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20019, getItemPartSortNo());
        }
        if (inheritDepth_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20027, getInheritDepth());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30001, getNodeDescription());
        }
        if (value2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30002, getValue2());
        }
        if (value3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30003, getValue3());
        }
        if (value1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30004, getValue1());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30006, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30007, getNodeId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row other = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasNetBasedPricing() == other.hasNetBasedPricing());
        if (hasNetBasedPricing()) {
          result = result && getNetBasedPricing()
              .equals(other.getNetBasedPricing());
        }
        result = result && (hasItemConditionId() == other.hasItemConditionId());
        if (hasItemConditionId()) {
          result = result && getItemConditionId()
              .equals(other.getItemConditionId());
        }
        result = result && (hasBundlePricingTypeId() == other.hasBundlePricingTypeId());
        if (hasBundlePricingTypeId()) {
          result = result && getBundlePricingTypeId()
              .equals(other.getBundlePricingTypeId());
        }
        result = result && (hasBundlePricingType() == other.hasBundlePricingType());
        if (hasBundlePricingType()) {
          result = result && getBundlePricingType()
              .equals(other.getBundlePricingType());
        }
        result = result && (hasItemSetId() == other.hasItemSetId());
        if (hasItemSetId()) {
          result = result && getItemSetId()
              .equals(other.getItemSetId());
        }
        result = result && (hasQuantity() == other.hasQuantity());
        if (hasQuantity()) {
          result = result && getQuantity()
              .equals(other.getQuantity());
        }
        result = result && (hasDistinctItemsOnly() == other.hasDistinctItemsOnly());
        if (hasDistinctItemsOnly()) {
          result = result && getDistinctItemsOnly()
              .equals(other.getDistinctItemsOnly());
        }
        result = result && (hasItemConditionDescription() == other.hasItemConditionDescription());
        if (hasItemConditionDescription()) {
          result = result && getItemConditionDescription()
              .equals(other.getItemConditionDescription());
        }
        result = result && (hasSortNo() == other.hasSortNo());
        if (hasSortNo()) {
          result = result && getSortNo()
              .equals(other.getSortNo());
        }
        result = result && (hasBundlePriceOrDiscount() == other.hasBundlePriceOrDiscount());
        if (hasBundlePriceOrDiscount()) {
          result = result && getBundlePriceOrDiscount()
              .equals(other.getBundlePriceOrDiscount());
        }
        result = result && (hasCondition1() == other.hasCondition1());
        if (hasCondition1()) {
          result = result && getCondition1()
              .equals(other.getCondition1());
        }
        result = result && (hasCondition2() == other.hasCondition2());
        if (hasCondition2()) {
          result = result && getCondition2()
              .equals(other.getCondition2());
        }
        result = result && (hasRecursiveEvaluation() == other.hasRecursiveEvaluation());
        if (hasRecursiveEvaluation()) {
          result = result && getRecursiveEvaluation()
              .equals(other.getRecursiveEvaluation());
        }
        result = result && (hasDomainTreeNodeIds() == other.hasDomainTreeNodeIds());
        if (hasDomainTreeNodeIds()) {
          result = result && getDomainTreeNodeIds()
              .equals(other.getDomainTreeNodeIds());
        }
        result = result && (hasNodeCharacteristicId() == other.hasNodeCharacteristicId());
        if (hasNodeCharacteristicId()) {
          result = result && getNodeCharacteristicId()
              .equals(other.getNodeCharacteristicId());
        }
        result = result && (hasItemConditionPartId() == other.hasItemConditionPartId());
        if (hasItemConditionPartId()) {
          result = result && getItemConditionPartId()
              .equals(other.getItemConditionPartId());
        }
        result = result && (hasCombineGroupsWithANDOperator() == other.hasCombineGroupsWithANDOperator());
        if (hasCombineGroupsWithANDOperator()) {
          result = result && getCombineGroupsWithANDOperator()
              .equals(other.getCombineGroupsWithANDOperator());
        }
        result = result && (hasItemConditionPartDescription() == other.hasItemConditionPartDescription());
        if (hasItemConditionPartDescription()) {
          result = result && getItemConditionPartDescription()
              .equals(other.getItemConditionPartDescription());
        }
        result = result && (hasLevelIds() == other.hasLevelIds());
        if (hasLevelIds()) {
          result = result && getLevelIds()
              .equals(other.getLevelIds());
        }
        result = result && (hasItemConditionGroupId() == other.hasItemConditionGroupId());
        if (hasItemConditionGroupId()) {
          result = result && getItemConditionGroupId()
              .equals(other.getItemConditionGroupId());
        }
        result = result && (hasItemGroupSortNo() == other.hasItemGroupSortNo());
        if (hasItemGroupSortNo()) {
          result = result && getItemGroupSortNo()
              .equals(other.getItemGroupSortNo());
        }
        result = result && (hasOperator1() == other.hasOperator1());
        if (hasOperator1()) {
          result = result && getOperator1()
              .equals(other.getOperator1());
        }
        result = result && (hasOperator2() == other.hasOperator2());
        if (hasOperator2()) {
          result = result && getOperator2()
              .equals(other.getOperator2());
        }
        result = result && (hasItemConditionGroupDescription() == other.hasItemConditionGroupDescription());
        if (hasItemConditionGroupDescription()) {
          result = result && getItemConditionGroupDescription()
              .equals(other.getItemConditionGroupDescription());
        }
        result = result && (hasCombinePartsWithANDOperator() == other.hasCombinePartsWithANDOperator());
        if (hasCombinePartsWithANDOperator()) {
          result = result && getCombinePartsWithANDOperator()
              .equals(other.getCombinePartsWithANDOperator());
        }
        result = result && (hasItemPartSortNo() == other.hasItemPartSortNo());
        if (hasItemPartSortNo()) {
          result = result && getItemPartSortNo()
              .equals(other.getItemPartSortNo());
        }
        result = result && (hasInheritDepth() == other.hasInheritDepth());
        if (hasInheritDepth()) {
          result = result && getInheritDepth()
              .equals(other.getInheritDepth());
        }
        result = result && (hasNodeDescription() == other.hasNodeDescription());
        if (hasNodeDescription()) {
          result = result && getNodeDescription()
              .equals(other.getNodeDescription());
        }
        result = result && (hasValue2() == other.hasValue2());
        if (hasValue2()) {
          result = result && getValue2()
              .equals(other.getValue2());
        }
        result = result && (hasValue3() == other.hasValue3());
        if (hasValue3()) {
          result = result && getValue3()
              .equals(other.getValue3());
        }
        result = result && (hasValue1() == other.hasValue1());
        if (hasValue1()) {
          result = result && getValue1()
              .equals(other.getValue1());
        }
        result = result && (hasTreeNodeId() == other.hasTreeNodeId());
        if (hasTreeNodeId()) {
          result = result && getTreeNodeId()
              .equals(other.getTreeNodeId());
        }
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && getNodeId()
              .equals(other.getNodeId());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasNetBasedPricing()) {
          hash = (37 * hash) + NET_BASED_PRICING_FIELD_NUMBER;
          hash = (53 * hash) + getNetBasedPricing().hashCode();
        }
        if (hasItemConditionId()) {
          hash = (37 * hash) + ITEM_CONDITION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionId().hashCode();
        }
        if (hasBundlePricingTypeId()) {
          hash = (37 * hash) + BUNDLE_PRICING_TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBundlePricingTypeId().hashCode();
        }
        if (hasBundlePricingType()) {
          hash = (37 * hash) + BUNDLE_PRICING_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getBundlePricingType().hashCode();
        }
        if (hasItemSetId()) {
          hash = (37 * hash) + ITEM_SET_ID_FIELD_NUMBER;
          hash = (53 * hash) + getItemSetId().hashCode();
        }
        if (hasQuantity()) {
          hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
          hash = (53 * hash) + getQuantity().hashCode();
        }
        if (hasDistinctItemsOnly()) {
          hash = (37 * hash) + DISTINCT_ITEMS_ONLY_FIELD_NUMBER;
          hash = (53 * hash) + getDistinctItemsOnly().hashCode();
        }
        if (hasItemConditionDescription()) {
          hash = (37 * hash) + ITEM_CONDITION_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionDescription().hashCode();
        }
        if (hasSortNo()) {
          hash = (37 * hash) + SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getSortNo().hashCode();
        }
        if (hasBundlePriceOrDiscount()) {
          hash = (37 * hash) + BUNDLE_PRICE_OR_DISCOUNT_FIELD_NUMBER;
          hash = (53 * hash) + getBundlePriceOrDiscount().hashCode();
        }
        if (hasCondition1()) {
          hash = (37 * hash) + CONDITION1_FIELD_NUMBER;
          hash = (53 * hash) + getCondition1().hashCode();
        }
        if (hasCondition2()) {
          hash = (37 * hash) + CONDITION2_FIELD_NUMBER;
          hash = (53 * hash) + getCondition2().hashCode();
        }
        if (hasRecursiveEvaluation()) {
          hash = (37 * hash) + RECURSIVE_EVALUATION_FIELD_NUMBER;
          hash = (53 * hash) + getRecursiveEvaluation().hashCode();
        }
        if (hasDomainTreeNodeIds()) {
          hash = (37 * hash) + DOMAIN_TREE_NODE_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getDomainTreeNodeIds().hashCode();
        }
        if (hasNodeCharacteristicId()) {
          hash = (37 * hash) + NODE_CHARACTERISTIC_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeCharacteristicId().hashCode();
        }
        if (hasItemConditionPartId()) {
          hash = (37 * hash) + ITEM_CONDITION_PART_ID_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionPartId().hashCode();
        }
        if (hasCombineGroupsWithANDOperator()) {
          hash = (37 * hash) + COMBINE_GROUPS_WITH_A_N_D_OPERATOR_FIELD_NUMBER;
          hash = (53 * hash) + getCombineGroupsWithANDOperator().hashCode();
        }
        if (hasItemConditionPartDescription()) {
          hash = (37 * hash) + ITEM_CONDITION_PART_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionPartDescription().hashCode();
        }
        if (hasLevelIds()) {
          hash = (37 * hash) + LEVEL_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getLevelIds().hashCode();
        }
        if (hasItemConditionGroupId()) {
          hash = (37 * hash) + ITEM_CONDITION_GROUP_ID_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionGroupId().hashCode();
        }
        if (hasItemGroupSortNo()) {
          hash = (37 * hash) + ITEM_GROUP_SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getItemGroupSortNo().hashCode();
        }
        if (hasOperator1()) {
          hash = (37 * hash) + OPERATOR1_FIELD_NUMBER;
          hash = (53 * hash) + getOperator1().hashCode();
        }
        if (hasOperator2()) {
          hash = (37 * hash) + OPERATOR2_FIELD_NUMBER;
          hash = (53 * hash) + getOperator2().hashCode();
        }
        if (hasItemConditionGroupDescription()) {
          hash = (37 * hash) + ITEM_CONDITION_GROUP_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getItemConditionGroupDescription().hashCode();
        }
        if (hasCombinePartsWithANDOperator()) {
          hash = (37 * hash) + COMBINE_PARTS_WITH_A_N_D_OPERATOR_FIELD_NUMBER;
          hash = (53 * hash) + getCombinePartsWithANDOperator().hashCode();
        }
        if (hasItemPartSortNo()) {
          hash = (37 * hash) + ITEM_PART_SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getItemPartSortNo().hashCode();
        }
        if (hasInheritDepth()) {
          hash = (37 * hash) + INHERIT_DEPTH_FIELD_NUMBER;
          hash = (53 * hash) + getInheritDepth().hashCode();
        }
        if (hasNodeDescription()) {
          hash = (37 * hash) + NODE_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getNodeDescription().hashCode();
        }
        if (hasValue2()) {
          hash = (37 * hash) + VALUE2_FIELD_NUMBER;
          hash = (53 * hash) + getValue2().hashCode();
        }
        if (hasValue3()) {
          hash = (37 * hash) + VALUE3_FIELD_NUMBER;
          hash = (53 * hash) + getValue3().hashCode();
        }
        if (hasValue1()) {
          hash = (37 * hash) + VALUE1_FIELD_NUMBER;
          hash = (53 * hash) + getValue1().hashCode();
        }
        if (hasTreeNodeId()) {
          hash = (37 * hash) + TREE_NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTreeNodeId().hashCode();
        }
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row)
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (netBasedPricingBuilder_ == null) {
            netBasedPricing_ = null;
          } else {
            netBasedPricing_ = null;
            netBasedPricingBuilder_ = null;
          }
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }
          if (bundlePricingTypeIdBuilder_ == null) {
            bundlePricingTypeId_ = null;
          } else {
            bundlePricingTypeId_ = null;
            bundlePricingTypeIdBuilder_ = null;
          }
          if (bundlePricingTypeBuilder_ == null) {
            bundlePricingType_ = null;
          } else {
            bundlePricingType_ = null;
            bundlePricingTypeBuilder_ = null;
          }
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }
          if (quantityBuilder_ == null) {
            quantity_ = null;
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }
          if (distinctItemsOnlyBuilder_ == null) {
            distinctItemsOnly_ = null;
          } else {
            distinctItemsOnly_ = null;
            distinctItemsOnlyBuilder_ = null;
          }
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (bundlePriceOrDiscountBuilder_ == null) {
            bundlePriceOrDiscount_ = null;
          } else {
            bundlePriceOrDiscount_ = null;
            bundlePriceOrDiscountBuilder_ = null;
          }
          if (condition1Builder_ == null) {
            condition1_ = null;
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }
          if (condition2Builder_ == null) {
            condition2_ = null;
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }
          if (operator1Builder_ == null) {
            operator1_ = null;
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }
          if (operator2Builder_ == null) {
            operator2_ = null;
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (value2Builder_ == null) {
            value2_ = null;
          } else {
            value2_ = null;
            value2Builder_ = null;
          }
          if (value3Builder_ == null) {
            value3_ = null;
          } else {
            value3_ = null;
            value3Builder_ = null;
          }
          if (value1Builder_ == null) {
            value1_ = null;
          } else {
            value1_ = null;
            value1Builder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row build() {
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row buildPartial() {
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row result = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (netBasedPricingBuilder_ == null) {
            result.netBasedPricing_ = netBasedPricing_;
          } else {
            result.netBasedPricing_ = netBasedPricingBuilder_.build();
          }
          if (itemConditionIdBuilder_ == null) {
            result.itemConditionId_ = itemConditionId_;
          } else {
            result.itemConditionId_ = itemConditionIdBuilder_.build();
          }
          if (bundlePricingTypeIdBuilder_ == null) {
            result.bundlePricingTypeId_ = bundlePricingTypeId_;
          } else {
            result.bundlePricingTypeId_ = bundlePricingTypeIdBuilder_.build();
          }
          if (bundlePricingTypeBuilder_ == null) {
            result.bundlePricingType_ = bundlePricingType_;
          } else {
            result.bundlePricingType_ = bundlePricingTypeBuilder_.build();
          }
          if (itemSetIdBuilder_ == null) {
            result.itemSetId_ = itemSetId_;
          } else {
            result.itemSetId_ = itemSetIdBuilder_.build();
          }
          if (quantityBuilder_ == null) {
            result.quantity_ = quantity_;
          } else {
            result.quantity_ = quantityBuilder_.build();
          }
          if (distinctItemsOnlyBuilder_ == null) {
            result.distinctItemsOnly_ = distinctItemsOnly_;
          } else {
            result.distinctItemsOnly_ = distinctItemsOnlyBuilder_.build();
          }
          if (itemConditionDescriptionBuilder_ == null) {
            result.itemConditionDescription_ = itemConditionDescription_;
          } else {
            result.itemConditionDescription_ = itemConditionDescriptionBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (bundlePriceOrDiscountBuilder_ == null) {
            result.bundlePriceOrDiscount_ = bundlePriceOrDiscount_;
          } else {
            result.bundlePriceOrDiscount_ = bundlePriceOrDiscountBuilder_.build();
          }
          if (condition1Builder_ == null) {
            result.condition1_ = condition1_;
          } else {
            result.condition1_ = condition1Builder_.build();
          }
          if (condition2Builder_ == null) {
            result.condition2_ = condition2_;
          } else {
            result.condition2_ = condition2Builder_.build();
          }
          if (recursiveEvaluationBuilder_ == null) {
            result.recursiveEvaluation_ = recursiveEvaluation_;
          } else {
            result.recursiveEvaluation_ = recursiveEvaluationBuilder_.build();
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            result.domainTreeNodeIds_ = domainTreeNodeIds_;
          } else {
            result.domainTreeNodeIds_ = domainTreeNodeIdsBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (itemConditionPartIdBuilder_ == null) {
            result.itemConditionPartId_ = itemConditionPartId_;
          } else {
            result.itemConditionPartId_ = itemConditionPartIdBuilder_.build();
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperator_;
          } else {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperatorBuilder_.build();
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            result.itemConditionPartDescription_ = itemConditionPartDescription_;
          } else {
            result.itemConditionPartDescription_ = itemConditionPartDescriptionBuilder_.build();
          }
          if (levelIdsBuilder_ == null) {
            result.levelIds_ = levelIds_;
          } else {
            result.levelIds_ = levelIdsBuilder_.build();
          }
          if (itemConditionGroupIdBuilder_ == null) {
            result.itemConditionGroupId_ = itemConditionGroupId_;
          } else {
            result.itemConditionGroupId_ = itemConditionGroupIdBuilder_.build();
          }
          if (itemGroupSortNoBuilder_ == null) {
            result.itemGroupSortNo_ = itemGroupSortNo_;
          } else {
            result.itemGroupSortNo_ = itemGroupSortNoBuilder_.build();
          }
          if (operator1Builder_ == null) {
            result.operator1_ = operator1_;
          } else {
            result.operator1_ = operator1Builder_.build();
          }
          if (operator2Builder_ == null) {
            result.operator2_ = operator2_;
          } else {
            result.operator2_ = operator2Builder_.build();
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            result.itemConditionGroupDescription_ = itemConditionGroupDescription_;
          } else {
            result.itemConditionGroupDescription_ = itemConditionGroupDescriptionBuilder_.build();
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperator_;
          } else {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperatorBuilder_.build();
          }
          if (itemPartSortNoBuilder_ == null) {
            result.itemPartSortNo_ = itemPartSortNo_;
          } else {
            result.itemPartSortNo_ = itemPartSortNoBuilder_.build();
          }
          if (inheritDepthBuilder_ == null) {
            result.inheritDepth_ = inheritDepth_;
          } else {
            result.inheritDepth_ = inheritDepthBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (value2Builder_ == null) {
            result.value2_ = value2_;
          } else {
            result.value2_ = value2Builder_.build();
          }
          if (value3Builder_ == null) {
            result.value3_ = value3_;
          } else {
            result.value3_ = value3Builder_.build();
          }
          if (value1Builder_ == null) {
            result.value1_ = value1_;
          } else {
            result.value1_ = value1Builder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row other) {
          if (other == io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasNetBasedPricing()) {
            mergeNetBasedPricing(other.getNetBasedPricing());
          }
          if (other.hasItemConditionId()) {
            mergeItemConditionId(other.getItemConditionId());
          }
          if (other.hasBundlePricingTypeId()) {
            mergeBundlePricingTypeId(other.getBundlePricingTypeId());
          }
          if (other.hasBundlePricingType()) {
            mergeBundlePricingType(other.getBundlePricingType());
          }
          if (other.hasItemSetId()) {
            mergeItemSetId(other.getItemSetId());
          }
          if (other.hasQuantity()) {
            mergeQuantity(other.getQuantity());
          }
          if (other.hasDistinctItemsOnly()) {
            mergeDistinctItemsOnly(other.getDistinctItemsOnly());
          }
          if (other.hasItemConditionDescription()) {
            mergeItemConditionDescription(other.getItemConditionDescription());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasBundlePriceOrDiscount()) {
            mergeBundlePriceOrDiscount(other.getBundlePriceOrDiscount());
          }
          if (other.hasCondition1()) {
            mergeCondition1(other.getCondition1());
          }
          if (other.hasCondition2()) {
            mergeCondition2(other.getCondition2());
          }
          if (other.hasRecursiveEvaluation()) {
            mergeRecursiveEvaluation(other.getRecursiveEvaluation());
          }
          if (other.hasDomainTreeNodeIds()) {
            mergeDomainTreeNodeIds(other.getDomainTreeNodeIds());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasItemConditionPartId()) {
            mergeItemConditionPartId(other.getItemConditionPartId());
          }
          if (other.hasCombineGroupsWithANDOperator()) {
            mergeCombineGroupsWithANDOperator(other.getCombineGroupsWithANDOperator());
          }
          if (other.hasItemConditionPartDescription()) {
            mergeItemConditionPartDescription(other.getItemConditionPartDescription());
          }
          if (other.hasLevelIds()) {
            mergeLevelIds(other.getLevelIds());
          }
          if (other.hasItemConditionGroupId()) {
            mergeItemConditionGroupId(other.getItemConditionGroupId());
          }
          if (other.hasItemGroupSortNo()) {
            mergeItemGroupSortNo(other.getItemGroupSortNo());
          }
          if (other.hasOperator1()) {
            mergeOperator1(other.getOperator1());
          }
          if (other.hasOperator2()) {
            mergeOperator2(other.getOperator2());
          }
          if (other.hasItemConditionGroupDescription()) {
            mergeItemConditionGroupDescription(other.getItemConditionGroupDescription());
          }
          if (other.hasCombinePartsWithANDOperator()) {
            mergeCombinePartsWithANDOperator(other.getCombinePartsWithANDOperator());
          }
          if (other.hasItemPartSortNo()) {
            mergeItemPartSortNo(other.getItemPartSortNo());
          }
          if (other.hasInheritDepth()) {
            mergeInheritDepth(other.getInheritDepth());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasValue2()) {
            mergeValue2(other.getValue2());
          }
          if (other.hasValue3()) {
            mergeValue3(other.getValue3());
          }
          if (other.hasValue1()) {
            mergeValue1(other.getValue1());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.BooleanValue netBasedPricing_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> netBasedPricingBuilder_;
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public boolean hasNetBasedPricing() {
          return netBasedPricingBuilder_ != null || netBasedPricing_ != null;
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public io.dstore.values.BooleanValue getNetBasedPricing() {
          if (netBasedPricingBuilder_ == null) {
            return netBasedPricing_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : netBasedPricing_;
          } else {
            return netBasedPricingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public Builder setNetBasedPricing(io.dstore.values.BooleanValue value) {
          if (netBasedPricingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            netBasedPricing_ = value;
            onChanged();
          } else {
            netBasedPricingBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public Builder setNetBasedPricing(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (netBasedPricingBuilder_ == null) {
            netBasedPricing_ = builderForValue.build();
            onChanged();
          } else {
            netBasedPricingBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public Builder mergeNetBasedPricing(io.dstore.values.BooleanValue value) {
          if (netBasedPricingBuilder_ == null) {
            if (netBasedPricing_ != null) {
              netBasedPricing_ =
                io.dstore.values.BooleanValue.newBuilder(netBasedPricing_).mergeFrom(value).buildPartial();
            } else {
              netBasedPricing_ = value;
            }
            onChanged();
          } else {
            netBasedPricingBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public Builder clearNetBasedPricing() {
          if (netBasedPricingBuilder_ == null) {
            netBasedPricing_ = null;
            onChanged();
          } else {
            netBasedPricing_ = null;
            netBasedPricingBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public io.dstore.values.BooleanValue.Builder getNetBasedPricingBuilder() {
          
          onChanged();
          return getNetBasedPricingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getNetBasedPricingOrBuilder() {
          if (netBasedPricingBuilder_ != null) {
            return netBasedPricingBuilder_.getMessageOrBuilder();
          } else {
            return netBasedPricing_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : netBasedPricing_;
          }
        }
        /**
         * <pre>
         * Bestimmt je nach "BundlePricingTypeID", ob der Festpreis (ID "0") in brutto oder netto angegeben ist bzw. (alle anderen IDs) welcher Preis (ob brutto oder netto) bei der Bestimmung "günstigster/teuerster Artikel" herangezogen werden soll
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue net_based_pricing = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getNetBasedPricingFieldBuilder() {
          if (netBasedPricingBuilder_ == null) {
            netBasedPricingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getNetBasedPricing(),
                    getParentForChildren(),
                    isClean());
            netBasedPricing_ = null;
          }
          return netBasedPricingBuilder_;
        }

        private io.dstore.values.IntegerValue itemConditionId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemConditionIdBuilder_;
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public boolean hasItemConditionId() {
          return itemConditionIdBuilder_ != null || itemConditionId_ != null;
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public io.dstore.values.IntegerValue getItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            return itemConditionId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionId_;
          } else {
            return itemConditionIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public Builder setItemConditionId(io.dstore.values.IntegerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionId_ = value;
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public Builder setItemConditionId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public Builder mergeItemConditionId(io.dstore.values.IntegerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (itemConditionId_ != null) {
              itemConditionId_ =
                io.dstore.values.IntegerValue.newBuilder(itemConditionId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionId_ = value;
            }
            onChanged();
          } else {
            itemConditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public Builder clearItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
            onChanged();
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemConditionIdBuilder() {
          
          onChanged();
          return getItemConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemConditionIdOrBuilder() {
          if (itemConditionIdBuilder_ != null) {
            return itemConditionIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionId_;
          }
        }
        /**
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemConditionIdFieldBuilder() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemConditionId(),
                    getParentForChildren(),
                    isClean());
            itemConditionId_ = null;
          }
          return itemConditionIdBuilder_;
        }

        private io.dstore.values.IntegerValue bundlePricingTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> bundlePricingTypeIdBuilder_;
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public boolean hasBundlePricingTypeId() {
          return bundlePricingTypeIdBuilder_ != null || bundlePricingTypeId_ != null;
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public io.dstore.values.IntegerValue getBundlePricingTypeId() {
          if (bundlePricingTypeIdBuilder_ == null) {
            return bundlePricingTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : bundlePricingTypeId_;
          } else {
            return bundlePricingTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public Builder setBundlePricingTypeId(io.dstore.values.IntegerValue value) {
          if (bundlePricingTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bundlePricingTypeId_ = value;
            onChanged();
          } else {
            bundlePricingTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public Builder setBundlePricingTypeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (bundlePricingTypeIdBuilder_ == null) {
            bundlePricingTypeId_ = builderForValue.build();
            onChanged();
          } else {
            bundlePricingTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public Builder mergeBundlePricingTypeId(io.dstore.values.IntegerValue value) {
          if (bundlePricingTypeIdBuilder_ == null) {
            if (bundlePricingTypeId_ != null) {
              bundlePricingTypeId_ =
                io.dstore.values.IntegerValue.newBuilder(bundlePricingTypeId_).mergeFrom(value).buildPartial();
            } else {
              bundlePricingTypeId_ = value;
            }
            onChanged();
          } else {
            bundlePricingTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public Builder clearBundlePricingTypeId() {
          if (bundlePricingTypeIdBuilder_ == null) {
            bundlePricingTypeId_ = null;
            onChanged();
          } else {
            bundlePricingTypeId_ = null;
            bundlePricingTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public io.dstore.values.IntegerValue.Builder getBundlePricingTypeIdBuilder() {
          
          onChanged();
          return getBundlePricingTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getBundlePricingTypeIdOrBuilder() {
          if (bundlePricingTypeIdBuilder_ != null) {
            return bundlePricingTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return bundlePricingTypeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : bundlePricingTypeId_;
          }
        }
        /**
         * <pre>
         * ID der Art, wie der (Ziel-)Preis für das Bundle "&#64;BenefitID" bestimmt wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue bundle_pricing_type_id = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getBundlePricingTypeIdFieldBuilder() {
          if (bundlePricingTypeIdBuilder_ == null) {
            bundlePricingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getBundlePricingTypeId(),
                    getParentForChildren(),
                    isClean());
            bundlePricingTypeId_ = null;
          }
          return bundlePricingTypeIdBuilder_;
        }

        private io.dstore.values.StringValue bundlePricingType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> bundlePricingTypeBuilder_;
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public boolean hasBundlePricingType() {
          return bundlePricingTypeBuilder_ != null || bundlePricingType_ != null;
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public io.dstore.values.StringValue getBundlePricingType() {
          if (bundlePricingTypeBuilder_ == null) {
            return bundlePricingType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : bundlePricingType_;
          } else {
            return bundlePricingTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public Builder setBundlePricingType(io.dstore.values.StringValue value) {
          if (bundlePricingTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bundlePricingType_ = value;
            onChanged();
          } else {
            bundlePricingTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public Builder setBundlePricingType(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (bundlePricingTypeBuilder_ == null) {
            bundlePricingType_ = builderForValue.build();
            onChanged();
          } else {
            bundlePricingTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public Builder mergeBundlePricingType(io.dstore.values.StringValue value) {
          if (bundlePricingTypeBuilder_ == null) {
            if (bundlePricingType_ != null) {
              bundlePricingType_ =
                io.dstore.values.StringValue.newBuilder(bundlePricingType_).mergeFrom(value).buildPartial();
            } else {
              bundlePricingType_ = value;
            }
            onChanged();
          } else {
            bundlePricingTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public Builder clearBundlePricingType() {
          if (bundlePricingTypeBuilder_ == null) {
            bundlePricingType_ = null;
            onChanged();
          } else {
            bundlePricingType_ = null;
            bundlePricingTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public io.dstore.values.StringValue.Builder getBundlePricingTypeBuilder() {
          
          onChanged();
          return getBundlePricingTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getBundlePricingTypeOrBuilder() {
          if (bundlePricingTypeBuilder_ != null) {
            return bundlePricingTypeBuilder_.getMessageOrBuilder();
          } else {
            return bundlePricingType_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : bundlePricingType_;
          }
        }
        /**
         * <pre>
         * Die Bezeichnung von "BundlePricingTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue bundle_pricing_type = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getBundlePricingTypeFieldBuilder() {
          if (bundlePricingTypeBuilder_ == null) {
            bundlePricingTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getBundlePricingType(),
                    getParentForChildren(),
                    isClean());
            bundlePricingType_ = null;
          }
          return bundlePricingTypeBuilder_;
        }

        private io.dstore.values.IntegerValue itemSetId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemSetIdBuilder_;
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public boolean hasItemSetId() {
          return itemSetIdBuilder_ != null || itemSetId_ != null;
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public io.dstore.values.IntegerValue getItemSetId() {
          if (itemSetIdBuilder_ == null) {
            return itemSetId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemSetId_;
          } else {
            return itemSetIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public Builder setItemSetId(io.dstore.values.IntegerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemSetId_ = value;
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public Builder setItemSetId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = builderForValue.build();
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public Builder mergeItemSetId(io.dstore.values.IntegerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (itemSetId_ != null) {
              itemSetId_ =
                io.dstore.values.IntegerValue.newBuilder(itemSetId_).mergeFrom(value).buildPartial();
            } else {
              itemSetId_ = value;
            }
            onChanged();
          } else {
            itemSetIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public Builder clearItemSetId() {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
            onChanged();
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemSetIdBuilder() {
          
          onChanged();
          return getItemSetIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemSetIdOrBuilder() {
          if (itemSetIdBuilder_ != null) {
            return itemSetIdBuilder_.getMessageOrBuilder();
          } else {
            return itemSetId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemSetId_;
          }
        }
        /**
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "&#64;BenefitID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_set_id = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemSetIdFieldBuilder() {
          if (itemSetIdBuilder_ == null) {
            itemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemSetId(),
                    getParentForChildren(),
                    isClean());
            itemSetId_ = null;
          }
          return itemSetIdBuilder_;
        }

        private io.dstore.values.IntegerValue quantity_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> quantityBuilder_;
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public boolean hasQuantity() {
          return quantityBuilder_ != null || quantity_ != null;
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public io.dstore.values.IntegerValue getQuantity() {
          if (quantityBuilder_ == null) {
            return quantity_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : quantity_;
          } else {
            return quantityBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public Builder setQuantity(io.dstore.values.IntegerValue value) {
          if (quantityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quantity_ = value;
            onChanged();
          } else {
            quantityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public Builder setQuantity(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (quantityBuilder_ == null) {
            quantity_ = builderForValue.build();
            onChanged();
          } else {
            quantityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public Builder mergeQuantity(io.dstore.values.IntegerValue value) {
          if (quantityBuilder_ == null) {
            if (quantity_ != null) {
              quantity_ =
                io.dstore.values.IntegerValue.newBuilder(quantity_).mergeFrom(value).buildPartial();
            } else {
              quantity_ = value;
            }
            onChanged();
          } else {
            quantityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public Builder clearQuantity() {
          if (quantityBuilder_ == null) {
            quantity_ = null;
            onChanged();
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getQuantityBuilder() {
          
          onChanged();
          return getQuantityFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getQuantityOrBuilder() {
          if (quantityBuilder_ != null) {
            return quantityBuilder_.getMessageOrBuilder();
          } else {
            return quantity_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : quantity_;
          }
        }
        /**
         * <pre>
         * Wieviele Artikel der Kunde aus dem Set "ItemSetID" auswählen muss, damit er den "Bundle-Preis" erhält (sofern auch die aus evtl. anderen zur "&#64;BenefitID" definierten Sets hinterlegte "Quantity"-Anzahl ausgewählt wird)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quantity = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getQuantityFieldBuilder() {
          if (quantityBuilder_ == null) {
            quantityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getQuantity(),
                    getParentForChildren(),
                    isClean());
            quantity_ = null;
          }
          return quantityBuilder_;
        }

        private io.dstore.values.BooleanValue distinctItemsOnly_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> distinctItemsOnlyBuilder_;
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public boolean hasDistinctItemsOnly() {
          return distinctItemsOnlyBuilder_ != null || distinctItemsOnly_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public io.dstore.values.BooleanValue getDistinctItemsOnly() {
          if (distinctItemsOnlyBuilder_ == null) {
            return distinctItemsOnly_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : distinctItemsOnly_;
          } else {
            return distinctItemsOnlyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public Builder setDistinctItemsOnly(io.dstore.values.BooleanValue value) {
          if (distinctItemsOnlyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            distinctItemsOnly_ = value;
            onChanged();
          } else {
            distinctItemsOnlyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public Builder setDistinctItemsOnly(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (distinctItemsOnlyBuilder_ == null) {
            distinctItemsOnly_ = builderForValue.build();
            onChanged();
          } else {
            distinctItemsOnlyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public Builder mergeDistinctItemsOnly(io.dstore.values.BooleanValue value) {
          if (distinctItemsOnlyBuilder_ == null) {
            if (distinctItemsOnly_ != null) {
              distinctItemsOnly_ =
                io.dstore.values.BooleanValue.newBuilder(distinctItemsOnly_).mergeFrom(value).buildPartial();
            } else {
              distinctItemsOnly_ = value;
            }
            onChanged();
          } else {
            distinctItemsOnlyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public Builder clearDistinctItemsOnly() {
          if (distinctItemsOnlyBuilder_ == null) {
            distinctItemsOnly_ = null;
            onChanged();
          } else {
            distinctItemsOnly_ = null;
            distinctItemsOnlyBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public io.dstore.values.BooleanValue.Builder getDistinctItemsOnlyBuilder() {
          
          onChanged();
          return getDistinctItemsOnlyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getDistinctItemsOnlyOrBuilder() {
          if (distinctItemsOnlyBuilder_ != null) {
            return distinctItemsOnlyBuilder_.getMessageOrBuilder();
          } else {
            return distinctItemsOnly_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : distinctItemsOnly_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob es sich bei der Auswahl aus dem Set "ItemSetID" um unterschiedliche Artikel handlen muss ("1") oder derselbe Artikel auch mehrfach ausgewählt werden darf ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue distinct_items_only = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getDistinctItemsOnlyFieldBuilder() {
          if (distinctItemsOnlyBuilder_ == null) {
            distinctItemsOnlyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getDistinctItemsOnly(),
                    getParentForChildren(),
                    isClean());
            distinctItemsOnly_ = null;
          }
          return distinctItemsOnlyBuilder_;
        }

        private io.dstore.values.StringValue itemConditionDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> itemConditionDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public boolean hasItemConditionDescription() {
          return itemConditionDescriptionBuilder_ != null || itemConditionDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public io.dstore.values.StringValue getItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            return itemConditionDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionDescription_;
          } else {
            return itemConditionDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public Builder setItemConditionDescription(io.dstore.values.StringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionDescription_ = value;
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public Builder setItemConditionDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public Builder mergeItemConditionDescription(io.dstore.values.StringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (itemConditionDescription_ != null) {
              itemConditionDescription_ =
                io.dstore.values.StringValue.newBuilder(itemConditionDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public Builder clearItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
            onChanged();
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public io.dstore.values.StringValue.Builder getItemConditionDescriptionBuilder() {
          
          onChanged();
          return getItemConditionDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        public io.dstore.values.StringValueOrBuilder getItemConditionDescriptionOrBuilder() {
          if (itemConditionDescriptionBuilder_ != null) {
            return itemConditionDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : itemConditionDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_description = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getItemConditionDescriptionFieldBuilder() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getItemConditionDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionDescription_ = null;
          }
          return itemConditionDescriptionBuilder_;
        }

        private io.dstore.values.IntegerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> sortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public io.dstore.values.IntegerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public Builder setSortNo(io.dstore.values.IntegerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public Builder setSortNo(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public Builder mergeSortNo(io.dstore.values.IntegerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.values.IntegerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public io.dstore.values.IntegerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "&#64;BenefitID" zugeordneten Sets
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.values.DecimalValue bundlePriceOrDiscount_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.DecimalValue, io.dstore.values.DecimalValue.Builder, io.dstore.values.DecimalValueOrBuilder> bundlePriceOrDiscountBuilder_;
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public boolean hasBundlePriceOrDiscount() {
          return bundlePriceOrDiscountBuilder_ != null || bundlePriceOrDiscount_ != null;
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public io.dstore.values.DecimalValue getBundlePriceOrDiscount() {
          if (bundlePriceOrDiscountBuilder_ == null) {
            return bundlePriceOrDiscount_ == null ? io.dstore.values.DecimalValue.getDefaultInstance() : bundlePriceOrDiscount_;
          } else {
            return bundlePriceOrDiscountBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public Builder setBundlePriceOrDiscount(io.dstore.values.DecimalValue value) {
          if (bundlePriceOrDiscountBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bundlePriceOrDiscount_ = value;
            onChanged();
          } else {
            bundlePriceOrDiscountBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public Builder setBundlePriceOrDiscount(
            io.dstore.values.DecimalValue.Builder builderForValue) {
          if (bundlePriceOrDiscountBuilder_ == null) {
            bundlePriceOrDiscount_ = builderForValue.build();
            onChanged();
          } else {
            bundlePriceOrDiscountBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public Builder mergeBundlePriceOrDiscount(io.dstore.values.DecimalValue value) {
          if (bundlePriceOrDiscountBuilder_ == null) {
            if (bundlePriceOrDiscount_ != null) {
              bundlePriceOrDiscount_ =
                io.dstore.values.DecimalValue.newBuilder(bundlePriceOrDiscount_).mergeFrom(value).buildPartial();
            } else {
              bundlePriceOrDiscount_ = value;
            }
            onChanged();
          } else {
            bundlePriceOrDiscountBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public Builder clearBundlePriceOrDiscount() {
          if (bundlePriceOrDiscountBuilder_ == null) {
            bundlePriceOrDiscount_ = null;
            onChanged();
          } else {
            bundlePriceOrDiscount_ = null;
            bundlePriceOrDiscountBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public io.dstore.values.DecimalValue.Builder getBundlePriceOrDiscountBuilder() {
          
          onChanged();
          return getBundlePriceOrDiscountFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        public io.dstore.values.DecimalValueOrBuilder getBundlePriceOrDiscountOrBuilder() {
          if (bundlePriceOrDiscountBuilder_ != null) {
            return bundlePriceOrDiscountBuilder_.getMessageOrBuilder();
          } else {
            return bundlePriceOrDiscount_ == null ?
                io.dstore.values.DecimalValue.getDefaultInstance() : bundlePriceOrDiscount_;
          }
        }
        /**
         * <pre>
         * Bei "BundlePricingTypeID = 0" der Festpreis, bei "BundlePricingTypeID IN (1,2)" der prozentuale Rabatt und sonst "NULL"
         * </pre>
         *
         * <code>optional .dstore.values.DecimalValue bundle_price_or_discount = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.DecimalValue, io.dstore.values.DecimalValue.Builder, io.dstore.values.DecimalValueOrBuilder> 
            getBundlePriceOrDiscountFieldBuilder() {
          if (bundlePriceOrDiscountBuilder_ == null) {
            bundlePriceOrDiscountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.DecimalValue, io.dstore.values.DecimalValue.Builder, io.dstore.values.DecimalValueOrBuilder>(
                    getBundlePriceOrDiscount(),
                    getParentForChildren(),
                    isClean());
            bundlePriceOrDiscount_ = null;
          }
          return bundlePriceOrDiscountBuilder_;
        }

        private io.dstore.values.StringValue condition1_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> condition1Builder_;
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public boolean hasCondition1() {
          return condition1Builder_ != null || condition1_ != null;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public io.dstore.values.StringValue getCondition1() {
          if (condition1Builder_ == null) {
            return condition1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition1_;
          } else {
            return condition1Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public Builder setCondition1(io.dstore.values.StringValue value) {
          if (condition1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition1_ = value;
            onChanged();
          } else {
            condition1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public Builder setCondition1(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (condition1Builder_ == null) {
            condition1_ = builderForValue.build();
            onChanged();
          } else {
            condition1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public Builder mergeCondition1(io.dstore.values.StringValue value) {
          if (condition1Builder_ == null) {
            if (condition1_ != null) {
              condition1_ =
                io.dstore.values.StringValue.newBuilder(condition1_).mergeFrom(value).buildPartial();
            } else {
              condition1_ = value;
            }
            onChanged();
          } else {
            condition1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public Builder clearCondition1() {
          if (condition1Builder_ == null) {
            condition1_ = null;
            onChanged();
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public io.dstore.values.StringValue.Builder getCondition1Builder() {
          
          onChanged();
          return getCondition1FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        public io.dstore.values.StringValueOrBuilder getCondition1OrBuilder() {
          if (condition1Builder_ != null) {
            return condition1Builder_.getMessageOrBuilder();
          } else {
            return condition1_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : condition1_;
          }
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition1 = 20001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getCondition1FieldBuilder() {
          if (condition1Builder_ == null) {
            condition1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getCondition1(),
                    getParentForChildren(),
                    isClean());
            condition1_ = null;
          }
          return condition1Builder_;
        }

        private io.dstore.values.StringValue condition2_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> condition2Builder_;
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public boolean hasCondition2() {
          return condition2Builder_ != null || condition2_ != null;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public io.dstore.values.StringValue getCondition2() {
          if (condition2Builder_ == null) {
            return condition2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition2_;
          } else {
            return condition2Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public Builder setCondition2(io.dstore.values.StringValue value) {
          if (condition2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition2_ = value;
            onChanged();
          } else {
            condition2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public Builder setCondition2(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (condition2Builder_ == null) {
            condition2_ = builderForValue.build();
            onChanged();
          } else {
            condition2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public Builder mergeCondition2(io.dstore.values.StringValue value) {
          if (condition2Builder_ == null) {
            if (condition2_ != null) {
              condition2_ =
                io.dstore.values.StringValue.newBuilder(condition2_).mergeFrom(value).buildPartial();
            } else {
              condition2_ = value;
            }
            onChanged();
          } else {
            condition2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public Builder clearCondition2() {
          if (condition2Builder_ == null) {
            condition2_ = null;
            onChanged();
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public io.dstore.values.StringValue.Builder getCondition2Builder() {
          
          onChanged();
          return getCondition2FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        public io.dstore.values.StringValueOrBuilder getCondition2OrBuilder() {
          if (condition2Builder_ != null) {
            return condition2Builder_.getMessageOrBuilder();
          } else {
            return condition2_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : condition2_;
          }
        }
        /**
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue condition2 = 20002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getCondition2FieldBuilder() {
          if (condition2Builder_ == null) {
            condition2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getCondition2(),
                    getParentForChildren(),
                    isClean());
            condition2_ = null;
          }
          return condition2Builder_;
        }

        private io.dstore.values.IntegerValue recursiveEvaluation_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> recursiveEvaluationBuilder_;
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public boolean hasRecursiveEvaluation() {
          return recursiveEvaluationBuilder_ != null || recursiveEvaluation_ != null;
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public io.dstore.values.IntegerValue getRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            return recursiveEvaluation_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : recursiveEvaluation_;
          } else {
            return recursiveEvaluationBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public Builder setRecursiveEvaluation(io.dstore.values.IntegerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            recursiveEvaluation_ = value;
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public Builder setRecursiveEvaluation(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = builderForValue.build();
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public Builder mergeRecursiveEvaluation(io.dstore.values.IntegerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (recursiveEvaluation_ != null) {
              recursiveEvaluation_ =
                io.dstore.values.IntegerValue.newBuilder(recursiveEvaluation_).mergeFrom(value).buildPartial();
            } else {
              recursiveEvaluation_ = value;
            }
            onChanged();
          } else {
            recursiveEvaluationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public Builder clearRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
            onChanged();
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public io.dstore.values.IntegerValue.Builder getRecursiveEvaluationBuilder() {
          
          onChanged();
          return getRecursiveEvaluationFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getRecursiveEvaluationOrBuilder() {
          if (recursiveEvaluationBuilder_ != null) {
            return recursiveEvaluationBuilder_.getMessageOrBuilder();
          } else {
            return recursiveEvaluation_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : recursiveEvaluation_;
          }
        }
        /**
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue recursive_evaluation = 20003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getRecursiveEvaluationFieldBuilder() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getRecursiveEvaluation(),
                    getParentForChildren(),
                    isClean());
            recursiveEvaluation_ = null;
          }
          return recursiveEvaluationBuilder_;
        }

        private io.dstore.values.StringValue domainTreeNodeIds_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> domainTreeNodeIdsBuilder_;
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public boolean hasDomainTreeNodeIds() {
          return domainTreeNodeIdsBuilder_ != null || domainTreeNodeIds_ != null;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public io.dstore.values.StringValue getDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            return domainTreeNodeIds_ == null ? io.dstore.values.StringValue.getDefaultInstance() : domainTreeNodeIds_;
          } else {
            return domainTreeNodeIdsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public Builder setDomainTreeNodeIds(io.dstore.values.StringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            domainTreeNodeIds_ = value;
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public Builder setDomainTreeNodeIds(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = builderForValue.build();
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public Builder mergeDomainTreeNodeIds(io.dstore.values.StringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (domainTreeNodeIds_ != null) {
              domainTreeNodeIds_ =
                io.dstore.values.StringValue.newBuilder(domainTreeNodeIds_).mergeFrom(value).buildPartial();
            } else {
              domainTreeNodeIds_ = value;
            }
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public Builder clearDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
            onChanged();
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public io.dstore.values.StringValue.Builder getDomainTreeNodeIdsBuilder() {
          
          onChanged();
          return getDomainTreeNodeIdsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
          if (domainTreeNodeIdsBuilder_ != null) {
            return domainTreeNodeIdsBuilder_.getMessageOrBuilder();
          } else {
            return domainTreeNodeIds_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : domainTreeNodeIds_;
          }
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue domain_tree_node_ids = 20004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getDomainTreeNodeIdsFieldBuilder() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIdsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getDomainTreeNodeIds(),
                    getParentForChildren(),
                    isClean());
            domainTreeNodeIds_ = null;
          }
          return domainTreeNodeIdsBuilder_;
        }

        private io.dstore.values.IntegerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public io.dstore.values.IntegerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public Builder setNodeCharacteristicId(io.dstore.values.IntegerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.values.IntegerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.values.IntegerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public io.dstore.values.IntegerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <pre>
         * ID eines Merkmals. Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der Bedingung ("Operator1" etc.) genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (ist also immer erfüllt).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_characteristic_id = 20005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.values.IntegerValue itemConditionPartId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemConditionPartIdBuilder_;
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public boolean hasItemConditionPartId() {
          return itemConditionPartIdBuilder_ != null || itemConditionPartId_ != null;
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public io.dstore.values.IntegerValue getItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            return itemConditionPartId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionPartId_;
          } else {
            return itemConditionPartIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public Builder setItemConditionPartId(io.dstore.values.IntegerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartId_ = value;
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public Builder setItemConditionPartId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public Builder mergeItemConditionPartId(io.dstore.values.IntegerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (itemConditionPartId_ != null) {
              itemConditionPartId_ =
                io.dstore.values.IntegerValue.newBuilder(itemConditionPartId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartId_ = value;
            }
            onChanged();
          } else {
            itemConditionPartIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public Builder clearItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
            onChanged();
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemConditionPartIdBuilder() {
          
          onChanged();
          return getItemConditionPartIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemConditionPartIdOrBuilder() {
          if (itemConditionPartIdBuilder_ != null) {
            return itemConditionPartIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionPartId_;
          }
        }
        /**
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_part_id = 20006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemConditionPartIdFieldBuilder() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemConditionPartId(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartId_ = null;
          }
          return itemConditionPartIdBuilder_;
        }

        private io.dstore.values.BooleanValue combineGroupsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> combineGroupsWithANDOperatorBuilder_;
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public boolean hasCombineGroupsWithANDOperator() {
          return combineGroupsWithANDOperatorBuilder_ != null || combineGroupsWithANDOperator_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public io.dstore.values.BooleanValue getCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            return combineGroupsWithANDOperator_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          } else {
            return combineGroupsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public Builder setCombineGroupsWithANDOperator(io.dstore.values.BooleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combineGroupsWithANDOperator_ = value;
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public Builder setCombineGroupsWithANDOperator(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public Builder mergeCombineGroupsWithANDOperator(io.dstore.values.BooleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (combineGroupsWithANDOperator_ != null) {
              combineGroupsWithANDOperator_ =
                io.dstore.values.BooleanValue.newBuilder(combineGroupsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combineGroupsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public Builder clearCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
            onChanged();
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public io.dstore.values.BooleanValue.Builder getCombineGroupsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombineGroupsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ != null) {
            return combineGroupsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combineGroupsWithANDOperator_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_groups_with_a_n_d_operator = 20008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getCombineGroupsWithANDOperatorFieldBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getCombineGroupsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combineGroupsWithANDOperator_ = null;
          }
          return combineGroupsWithANDOperatorBuilder_;
        }

        private io.dstore.values.StringValue itemConditionPartDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> itemConditionPartDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public boolean hasItemConditionPartDescription() {
          return itemConditionPartDescriptionBuilder_ != null || itemConditionPartDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public io.dstore.values.StringValue getItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            return itemConditionPartDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionPartDescription_;
          } else {
            return itemConditionPartDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public Builder setItemConditionPartDescription(io.dstore.values.StringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartDescription_ = value;
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public Builder setItemConditionPartDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public Builder mergeItemConditionPartDescription(io.dstore.values.StringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (itemConditionPartDescription_ != null) {
              itemConditionPartDescription_ =
                io.dstore.values.StringValue.newBuilder(itemConditionPartDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public Builder clearItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
            onChanged();
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public io.dstore.values.StringValue.Builder getItemConditionPartDescriptionBuilder() {
          
          onChanged();
          return getItemConditionPartDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        public io.dstore.values.StringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
          if (itemConditionPartDescriptionBuilder_ != null) {
            return itemConditionPartDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : itemConditionPartDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_part_description = 20009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getItemConditionPartDescriptionFieldBuilder() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getItemConditionPartDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartDescription_ = null;
          }
          return itemConditionPartDescriptionBuilder_;
        }

        private io.dstore.values.StringValue levelIds_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> levelIdsBuilder_;
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public boolean hasLevelIds() {
          return levelIdsBuilder_ != null || levelIds_ != null;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public io.dstore.values.StringValue getLevelIds() {
          if (levelIdsBuilder_ == null) {
            return levelIds_ == null ? io.dstore.values.StringValue.getDefaultInstance() : levelIds_;
          } else {
            return levelIdsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public Builder setLevelIds(io.dstore.values.StringValue value) {
          if (levelIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelIds_ = value;
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public Builder setLevelIds(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (levelIdsBuilder_ == null) {
            levelIds_ = builderForValue.build();
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public Builder mergeLevelIds(io.dstore.values.StringValue value) {
          if (levelIdsBuilder_ == null) {
            if (levelIds_ != null) {
              levelIds_ =
                io.dstore.values.StringValue.newBuilder(levelIds_).mergeFrom(value).buildPartial();
            } else {
              levelIds_ = value;
            }
            onChanged();
          } else {
            levelIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public Builder clearLevelIds() {
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
            onChanged();
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public io.dstore.values.StringValue.Builder getLevelIdsBuilder() {
          
          onChanged();
          return getLevelIdsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLevelIdsOrBuilder() {
          if (levelIdsBuilder_ != null) {
            return levelIdsBuilder_.getMessageOrBuilder();
          } else {
            return levelIds_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : levelIds_;
          }
        }
        /**
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         *
         * <code>optional .dstore.values.StringValue level_ids = 20011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLevelIdsFieldBuilder() {
          if (levelIdsBuilder_ == null) {
            levelIdsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLevelIds(),
                    getParentForChildren(),
                    isClean());
            levelIds_ = null;
          }
          return levelIdsBuilder_;
        }

        private io.dstore.values.IntegerValue itemConditionGroupId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemConditionGroupIdBuilder_;
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public boolean hasItemConditionGroupId() {
          return itemConditionGroupIdBuilder_ != null || itemConditionGroupId_ != null;
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public io.dstore.values.IntegerValue getItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            return itemConditionGroupId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionGroupId_;
          } else {
            return itemConditionGroupIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public Builder setItemConditionGroupId(io.dstore.values.IntegerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupId_ = value;
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public Builder setItemConditionGroupId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public Builder mergeItemConditionGroupId(io.dstore.values.IntegerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (itemConditionGroupId_ != null) {
              itemConditionGroupId_ =
                io.dstore.values.IntegerValue.newBuilder(itemConditionGroupId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupId_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public Builder clearItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
            onChanged();
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemConditionGroupIdBuilder() {
          
          onChanged();
          return getItemConditionGroupIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemConditionGroupIdOrBuilder() {
          if (itemConditionGroupIdBuilder_ != null) {
            return itemConditionGroupIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemConditionGroupId_;
          }
        }
        /**
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_condition_group_id = 20012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemConditionGroupIdFieldBuilder() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemConditionGroupId(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupId_ = null;
          }
          return itemConditionGroupIdBuilder_;
        }

        private io.dstore.values.IntegerValue itemGroupSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemGroupSortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public boolean hasItemGroupSortNo() {
          return itemGroupSortNoBuilder_ != null || itemGroupSortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public io.dstore.values.IntegerValue getItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            return itemGroupSortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemGroupSortNo_;
          } else {
            return itemGroupSortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public Builder setItemGroupSortNo(io.dstore.values.IntegerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemGroupSortNo_ = value;
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public Builder setItemGroupSortNo(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public Builder mergeItemGroupSortNo(io.dstore.values.IntegerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (itemGroupSortNo_ != null) {
              itemGroupSortNo_ =
                io.dstore.values.IntegerValue.newBuilder(itemGroupSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemGroupSortNo_ = value;
            }
            onChanged();
          } else {
            itemGroupSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public Builder clearItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
            onChanged();
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemGroupSortNoBuilder() {
          
          onChanged();
          return getItemGroupSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemGroupSortNoOrBuilder() {
          if (itemGroupSortNoBuilder_ != null) {
            return itemGroupSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemGroupSortNo_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemGroupSortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_group_sort_no = 20013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemGroupSortNoFieldBuilder() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemGroupSortNo(),
                    getParentForChildren(),
                    isClean());
            itemGroupSortNo_ = null;
          }
          return itemGroupSortNoBuilder_;
        }

        private io.dstore.values.StringValue operator1_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> operator1Builder_;
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public boolean hasOperator1() {
          return operator1Builder_ != null || operator1_ != null;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public io.dstore.values.StringValue getOperator1() {
          if (operator1Builder_ == null) {
            return operator1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator1_;
          } else {
            return operator1Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public Builder setOperator1(io.dstore.values.StringValue value) {
          if (operator1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator1_ = value;
            onChanged();
          } else {
            operator1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public Builder setOperator1(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (operator1Builder_ == null) {
            operator1_ = builderForValue.build();
            onChanged();
          } else {
            operator1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public Builder mergeOperator1(io.dstore.values.StringValue value) {
          if (operator1Builder_ == null) {
            if (operator1_ != null) {
              operator1_ =
                io.dstore.values.StringValue.newBuilder(operator1_).mergeFrom(value).buildPartial();
            } else {
              operator1_ = value;
            }
            onChanged();
          } else {
            operator1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public Builder clearOperator1() {
          if (operator1Builder_ == null) {
            operator1_ = null;
            onChanged();
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public io.dstore.values.StringValue.Builder getOperator1Builder() {
          
          onChanged();
          return getOperator1FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        public io.dstore.values.StringValueOrBuilder getOperator1OrBuilder() {
          if (operator1Builder_ != null) {
            return operator1Builder_.getMessageOrBuilder();
          } else {
            return operator1_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : operator1_;
          }
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator1 = 20014;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getOperator1FieldBuilder() {
          if (operator1Builder_ == null) {
            operator1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getOperator1(),
                    getParentForChildren(),
                    isClean());
            operator1_ = null;
          }
          return operator1Builder_;
        }

        private io.dstore.values.StringValue operator2_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> operator2Builder_;
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public boolean hasOperator2() {
          return operator2Builder_ != null || operator2_ != null;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public io.dstore.values.StringValue getOperator2() {
          if (operator2Builder_ == null) {
            return operator2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator2_;
          } else {
            return operator2Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public Builder setOperator2(io.dstore.values.StringValue value) {
          if (operator2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator2_ = value;
            onChanged();
          } else {
            operator2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public Builder setOperator2(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (operator2Builder_ == null) {
            operator2_ = builderForValue.build();
            onChanged();
          } else {
            operator2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public Builder mergeOperator2(io.dstore.values.StringValue value) {
          if (operator2Builder_ == null) {
            if (operator2_ != null) {
              operator2_ =
                io.dstore.values.StringValue.newBuilder(operator2_).mergeFrom(value).buildPartial();
            } else {
              operator2_ = value;
            }
            onChanged();
          } else {
            operator2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public Builder clearOperator2() {
          if (operator2Builder_ == null) {
            operator2_ = null;
            onChanged();
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public io.dstore.values.StringValue.Builder getOperator2Builder() {
          
          onChanged();
          return getOperator2FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        public io.dstore.values.StringValueOrBuilder getOperator2OrBuilder() {
          if (operator2Builder_ != null) {
            return operator2Builder_.getMessageOrBuilder();
          } else {
            return operator2_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : operator2_;
          }
        }
        /**
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge
         * </pre>
         *
         * <code>optional .dstore.values.StringValue operator2 = 20016;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getOperator2FieldBuilder() {
          if (operator2Builder_ == null) {
            operator2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getOperator2(),
                    getParentForChildren(),
                    isClean());
            operator2_ = null;
          }
          return operator2Builder_;
        }

        private io.dstore.values.StringValue itemConditionGroupDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> itemConditionGroupDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public boolean hasItemConditionGroupDescription() {
          return itemConditionGroupDescriptionBuilder_ != null || itemConditionGroupDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public io.dstore.values.StringValue getItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            return itemConditionGroupDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : itemConditionGroupDescription_;
          } else {
            return itemConditionGroupDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public Builder setItemConditionGroupDescription(io.dstore.values.StringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupDescription_ = value;
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public Builder setItemConditionGroupDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public Builder mergeItemConditionGroupDescription(io.dstore.values.StringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (itemConditionGroupDescription_ != null) {
              itemConditionGroupDescription_ =
                io.dstore.values.StringValue.newBuilder(itemConditionGroupDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public Builder clearItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
            onChanged();
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public io.dstore.values.StringValue.Builder getItemConditionGroupDescriptionBuilder() {
          
          onChanged();
          return getItemConditionGroupDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        public io.dstore.values.StringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
          if (itemConditionGroupDescriptionBuilder_ != null) {
            return itemConditionGroupDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : itemConditionGroupDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue item_condition_group_description = 20017;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getItemConditionGroupDescriptionFieldBuilder() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getItemConditionGroupDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupDescription_ = null;
          }
          return itemConditionGroupDescriptionBuilder_;
        }

        private io.dstore.values.BooleanValue combinePartsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> combinePartsWithANDOperatorBuilder_;
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public boolean hasCombinePartsWithANDOperator() {
          return combinePartsWithANDOperatorBuilder_ != null || combinePartsWithANDOperator_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public io.dstore.values.BooleanValue getCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            return combinePartsWithANDOperator_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          } else {
            return combinePartsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public Builder setCombinePartsWithANDOperator(io.dstore.values.BooleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combinePartsWithANDOperator_ = value;
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public Builder setCombinePartsWithANDOperator(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public Builder mergeCombinePartsWithANDOperator(io.dstore.values.BooleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (combinePartsWithANDOperator_ != null) {
              combinePartsWithANDOperator_ =
                io.dstore.values.BooleanValue.newBuilder(combinePartsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combinePartsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public Builder clearCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
            onChanged();
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public io.dstore.values.BooleanValue.Builder getCombinePartsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombinePartsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
          if (combinePartsWithANDOperatorBuilder_ != null) {
            return combinePartsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combinePartsWithANDOperator_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue combine_parts_with_a_n_d_operator = 20018;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getCombinePartsWithANDOperatorFieldBuilder() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getCombinePartsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combinePartsWithANDOperator_ = null;
          }
          return combinePartsWithANDOperatorBuilder_;
        }

        private io.dstore.values.IntegerValue itemPartSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> itemPartSortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public boolean hasItemPartSortNo() {
          return itemPartSortNoBuilder_ != null || itemPartSortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public io.dstore.values.IntegerValue getItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            return itemPartSortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : itemPartSortNo_;
          } else {
            return itemPartSortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public Builder setItemPartSortNo(io.dstore.values.IntegerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemPartSortNo_ = value;
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public Builder setItemPartSortNo(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public Builder mergeItemPartSortNo(io.dstore.values.IntegerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (itemPartSortNo_ != null) {
              itemPartSortNo_ =
                io.dstore.values.IntegerValue.newBuilder(itemPartSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemPartSortNo_ = value;
            }
            onChanged();
          } else {
            itemPartSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public Builder clearItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
            onChanged();
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public io.dstore.values.IntegerValue.Builder getItemPartSortNoBuilder() {
          
          onChanged();
          return getItemPartSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getItemPartSortNoOrBuilder() {
          if (itemPartSortNoBuilder_ != null) {
            return itemPartSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemPartSortNo_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : itemPartSortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue item_part_sort_no = 20019;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getItemPartSortNoFieldBuilder() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getItemPartSortNo(),
                    getParentForChildren(),
                    isClean());
            itemPartSortNo_ = null;
          }
          return itemPartSortNoBuilder_;
        }

        private io.dstore.values.IntegerValue inheritDepth_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> inheritDepthBuilder_;
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public boolean hasInheritDepth() {
          return inheritDepthBuilder_ != null || inheritDepth_ != null;
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public io.dstore.values.IntegerValue getInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            return inheritDepth_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : inheritDepth_;
          } else {
            return inheritDepthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public Builder setInheritDepth(io.dstore.values.IntegerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inheritDepth_ = value;
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public Builder setInheritDepth(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = builderForValue.build();
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public Builder mergeInheritDepth(io.dstore.values.IntegerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (inheritDepth_ != null) {
              inheritDepth_ =
                io.dstore.values.IntegerValue.newBuilder(inheritDepth_).mergeFrom(value).buildPartial();
            } else {
              inheritDepth_ = value;
            }
            onChanged();
          } else {
            inheritDepthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public Builder clearInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
            onChanged();
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public io.dstore.values.IntegerValue.Builder getInheritDepthBuilder() {
          
          onChanged();
          return getInheritDepthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getInheritDepthOrBuilder() {
          if (inheritDepthBuilder_ != null) {
            return inheritDepthBuilder_.getMessageOrBuilder();
          } else {
            return inheritDepth_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : inheritDepth_;
          }
        }
        /**
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue inherit_depth = 20027;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getInheritDepthFieldBuilder() {
          if (inheritDepthBuilder_ == null) {
            inheritDepthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getInheritDepth(),
                    getParentForChildren(),
                    isClean());
            inheritDepth_ = null;
          }
          return inheritDepthBuilder_;
        }

        private io.dstore.values.StringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public io.dstore.values.StringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public Builder setNodeDescription(io.dstore.values.StringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public Builder setNodeDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public Builder mergeNodeDescription(io.dstore.values.StringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.values.StringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public io.dstore.values.StringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        public io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung von "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue node_description = 30001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.values.StringValue value2_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> value2Builder_;
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public boolean hasValue2() {
          return value2Builder_ != null || value2_ != null;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public io.dstore.values.StringValue getValue2() {
          if (value2Builder_ == null) {
            return value2_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value2_;
          } else {
            return value2Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public Builder setValue2(io.dstore.values.StringValue value) {
          if (value2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2_ = value;
            onChanged();
          } else {
            value2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public Builder setValue2(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (value2Builder_ == null) {
            value2_ = builderForValue.build();
            onChanged();
          } else {
            value2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public Builder mergeValue2(io.dstore.values.StringValue value) {
          if (value2Builder_ == null) {
            if (value2_ != null) {
              value2_ =
                io.dstore.values.StringValue.newBuilder(value2_).mergeFrom(value).buildPartial();
            } else {
              value2_ = value;
            }
            onChanged();
          } else {
            value2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public Builder clearValue2() {
          if (value2Builder_ == null) {
            value2_ = null;
            onChanged();
          } else {
            value2_ = null;
            value2Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public io.dstore.values.StringValue.Builder getValue2Builder() {
          
          onChanged();
          return getValue2FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        public io.dstore.values.StringValueOrBuilder getValue2OrBuilder() {
          if (value2Builder_ != null) {
            return value2Builder_.getMessageOrBuilder();
          } else {
            return value2_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : value2_;
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum zweiten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur ein Merkmal in "&#64;SortByCharacteristicIDList" angegeben wurde !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value2 = 30002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getValue2FieldBuilder() {
          if (value2Builder_ == null) {
            value2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getValue2(),
                    getParentForChildren(),
                    isClean());
            value2_ = null;
          }
          return value2Builder_;
        }

        private io.dstore.values.StringValue value3_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> value3Builder_;
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public boolean hasValue3() {
          return value3Builder_ != null || value3_ != null;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public io.dstore.values.StringValue getValue3() {
          if (value3Builder_ == null) {
            return value3_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value3_;
          } else {
            return value3Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public Builder setValue3(io.dstore.values.StringValue value) {
          if (value3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3_ = value;
            onChanged();
          } else {
            value3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public Builder setValue3(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (value3Builder_ == null) {
            value3_ = builderForValue.build();
            onChanged();
          } else {
            value3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public Builder mergeValue3(io.dstore.values.StringValue value) {
          if (value3Builder_ == null) {
            if (value3_ != null) {
              value3_ =
                io.dstore.values.StringValue.newBuilder(value3_).mergeFrom(value).buildPartial();
            } else {
              value3_ = value;
            }
            onChanged();
          } else {
            value3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public Builder clearValue3() {
          if (value3Builder_ == null) {
            value3_ = null;
            onChanged();
          } else {
            value3_ = null;
            value3Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public io.dstore.values.StringValue.Builder getValue3Builder() {
          
          onChanged();
          return getValue3FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        public io.dstore.values.StringValueOrBuilder getValue3OrBuilder() {
          if (value3Builder_ != null) {
            return value3Builder_.getMessageOrBuilder();
          } else {
            return value3_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : value3_;
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum dritten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" ist oder wenn nur zwei Merkmale in "&#64;SortByCharacteristicIDList" angegeben wurden !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value3 = 30003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getValue3FieldBuilder() {
          if (value3Builder_ == null) {
            value3Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getValue3(),
                    getParentForChildren(),
                    isClean());
            value3_ = null;
          }
          return value3Builder_;
        }

        private io.dstore.values.StringValue value1_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> value1Builder_;
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public boolean hasValue1() {
          return value1Builder_ != null || value1_ != null;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public io.dstore.values.StringValue getValue1() {
          if (value1Builder_ == null) {
            return value1_ == null ? io.dstore.values.StringValue.getDefaultInstance() : value1_;
          } else {
            return value1Builder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public Builder setValue1(io.dstore.values.StringValue value) {
          if (value1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1_ = value;
            onChanged();
          } else {
            value1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public Builder setValue1(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (value1Builder_ == null) {
            value1_ = builderForValue.build();
            onChanged();
          } else {
            value1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public Builder mergeValue1(io.dstore.values.StringValue value) {
          if (value1Builder_ == null) {
            if (value1_ != null) {
              value1_ =
                io.dstore.values.StringValue.newBuilder(value1_).mergeFrom(value).buildPartial();
            } else {
              value1_ = value;
            }
            onChanged();
          } else {
            value1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public Builder clearValue1() {
          if (value1Builder_ == null) {
            value1_ = null;
            onChanged();
          } else {
            value1_ = null;
            value1Builder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public io.dstore.values.StringValue.Builder getValue1Builder() {
          
          onChanged();
          return getValue1FieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getValue1OrBuilder() {
          if (value1Builder_ != null) {
            return value1Builder_.getMessageOrBuilder();
          } else {
            return value1_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : value1_;
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum ersten in "&#64;SortByCharacteristicIDList" angegeben Merkmal. Immer "NULL", wenn "&#64;GetValuesForSortByCharacs = 0" !
         * </pre>
         *
         * <code>optional .dstore.values.StringValue value1 = 30004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getValue1FieldBuilder() {
          if (value1Builder_ == null) {
            value1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getValue1(),
                    getParentForChildren(),
                    isClean());
            value1_ = null;
          }
          return value1Builder_;
        }

        private io.dstore.values.IntegerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public io.dstore.values.IntegerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public Builder setTreeNodeId(io.dstore.values.IntegerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public Builder setTreeNodeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public Builder mergeTreeNodeId(io.dstore.values.IntegerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.values.IntegerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, das die Bedingungen des Sets "ItemSetID" erfüllt (das der Kunde also auswählen darf, um sein "Bundle" zu erstellen)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue tree_node_id = 30006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.values.IntegerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> nodeIdBuilder_;
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public io.dstore.values.IntegerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public Builder setNodeId(io.dstore.values.IntegerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public Builder setNodeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public Builder mergeNodeId(io.dstore.values.IntegerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.values.IntegerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue node_id = 30007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row)
      private static final io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row();
      }

      public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response other = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBundlePricing_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBundlePricing_Pu.Response)
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.class, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor;
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response build() {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response buildPartial() {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response result = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response) {
          return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response other) {
        if (other == io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetCampaignBundlePricing_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBundlePricing_Pu.Response)
    private static final io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response();
    }

    public static io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetCampaignBundlePricingPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/om_GetCampaig" +
      "nBundlePricing_Pu.proto\022,dstore.engine.o" +
      "m_GetCampaignBundlePricing_Pu\032\023dstore/va" +
      "lues.proto\032\032dstore/engine/engine.proto\"\246" +
      "\006\n\nParameters\022/\n\nbenefit_id\030\001 \001(\0132\033.dsto" +
      "re.values.IntegerValue\022\030\n\017benefit_id_nul" +
      "l\030\351\007 \001(\010\0224\n\017only_definition\030\002 \001(\0132\033.dsto" +
      "re.values.IntegerValue\022\035\n\024only_definitio" +
      "n_null\030\352\007 \001(\010\022:\n\025filter_by_item_set_id\030\003" +
      " \001(\0132\033.dstore.values.IntegerValue\022#\n\032fil",
      "ter_by_item_set_id_null\030\353\007 \001(\010\022B\n\036sort_b" +
      "y_characteristic_id_list\030\004 \001(\0132\032.dstore." +
      "values.StringValue\022,\n#sort_by_characteri" +
      "stic_id_list_null\030\354\007 \001(\010\0224\n\020sort_option_" +
      "list\030\005 \001(\0132\032.dstore.values.StringValue\022\036" +
      "\n\025sort_option_list_null\030\355\007 \001(\010\022=\n\031inheri" +
      "t_depth_option_list\030\006 \001(\0132\032.dstore.value" +
      "s.StringValue\022\'\n\036inherit_depth_option_li" +
      "st_null\030\356\007 \001(\010\022D\n recursive_evaluation_o" +
      "ption_list\030\007 \001(\0132\032.dstore.values.StringV",
      "alue\022.\n%recursive_evaluation_option_list" +
      "_null\030\357\007 \001(\010\022C\n\036get_values_for_sort_by_c" +
      "haracs\030\010 \001(\0132\033.dstore.values.BooleanValu" +
      "e\022,\n#get_values_for_sort_by_characs_null" +
      "\030\360\007 \001(\010\"\253\020\n\010Response\0228\n\020meta_information" +
      "\030\002 \003(\0132\036.dstore.engine.MetaInformation\022\'" +
      "\n\007message\030\003 \003(\0132\026.dstore.engine.Message\022" +
      "G\n\003row\030\004 \003(\0132:.dstore.engine.om_GetCampa" +
      "ignBundlePricing_Pu.Response.Row\032\362\016\n\003Row" +
      "\022\017\n\006row_id\030\220N \001(\005\0227\n\021net_based_pricing\030\221",
      "N \001(\0132\033.dstore.values.BooleanValue\0227\n\021it" +
      "em_condition_id\030\222N \001(\0132\033.dstore.values.I" +
      "ntegerValue\022<\n\026bundle_pricing_type_id\030\223N" +
      " \001(\0132\033.dstore.values.IntegerValue\0228\n\023bun" +
      "dle_pricing_type\030\224N \001(\0132\032.dstore.values." +
      "StringValue\0221\n\013item_set_id\030\225N \001(\0132\033.dsto" +
      "re.values.IntegerValue\022.\n\010quantity\030\226N \001(" +
      "\0132\033.dstore.values.IntegerValue\0229\n\023distin" +
      "ct_items_only\030\227N \001(\0132\033.dstore.values.Boo" +
      "leanValue\022?\n\032item_condition_description\030",
      "\230N \001(\0132\032.dstore.values.StringValue\022-\n\007so" +
      "rt_no\030\231N \001(\0132\033.dstore.values.IntegerValu" +
      "e\022>\n\030bundle_price_or_discount\030\232N \001(\0132\033.d" +
      "store.values.DecimalValue\0220\n\ncondition1\030" +
      "\241\234\001 \001(\0132\032.dstore.values.StringValue\0220\n\nc" +
      "ondition2\030\242\234\001 \001(\0132\032.dstore.values.String" +
      "Value\022;\n\024recursive_evaluation\030\243\234\001 \001(\0132\033." +
      "dstore.values.IntegerValue\022:\n\024domain_tre" +
      "e_node_ids\030\244\234\001 \001(\0132\032.dstore.values.Strin" +
      "gValue\022=\n\026node_characteristic_id\030\245\234\001 \001(\013",
      "2\033.dstore.values.IntegerValue\022=\n\026item_co" +
      "ndition_part_id\030\246\234\001 \001(\0132\033.dstore.values." +
      "IntegerValue\022I\n\"combine_groups_with_a_n_" +
      "d_operator\030\250\234\001 \001(\0132\033.dstore.values.Boole" +
      "anValue\022E\n\037item_condition_part_descripti" +
      "on\030\251\234\001 \001(\0132\032.dstore.values.StringValue\022/" +
      "\n\tlevel_ids\030\253\234\001 \001(\0132\032.dstore.values.Stri" +
      "ngValue\022>\n\027item_condition_group_id\030\254\234\001 \001" +
      "(\0132\033.dstore.values.IntegerValue\0229\n\022item_" +
      "group_sort_no\030\255\234\001 \001(\0132\033.dstore.values.In",
      "tegerValue\022/\n\toperator1\030\256\234\001 \001(\0132\032.dstore" +
      ".values.StringValue\022/\n\toperator2\030\260\234\001 \001(\013" +
      "2\032.dstore.values.StringValue\022F\n item_con" +
      "dition_group_description\030\261\234\001 \001(\0132\032.dstor" +
      "e.values.StringValue\022H\n!combine_parts_wi" +
      "th_a_n_d_operator\030\262\234\001 \001(\0132\033.dstore.value" +
      "s.BooleanValue\0228\n\021item_part_sort_no\030\263\234\001 " +
      "\001(\0132\033.dstore.values.IntegerValue\0224\n\rinhe" +
      "rit_depth\030\273\234\001 \001(\0132\033.dstore.values.Intege" +
      "rValue\0226\n\020node_description\030\261\352\001 \001(\0132\032.dst",
      "ore.values.StringValue\022,\n\006value2\030\262\352\001 \001(\013" +
      "2\032.dstore.values.StringValue\022,\n\006value3\030\263" +
      "\352\001 \001(\0132\032.dstore.values.StringValue\022,\n\006va" +
      "lue1\030\264\352\001 \001(\0132\032.dstore.values.StringValue" +
      "\0223\n\014tree_node_id\030\266\352\001 \001(\0132\033.dstore.values" +
      ".IntegerValue\022.\n\007node_id\030\267\352\001 \001(\0132\033.dstor" +
      "e.values.IntegerValueB_\n\033io.dstore.engin" +
      "e.proceduresZ@gosdk.dstore.de/engine/pro" +
      "cedures/om_GetCampaignBundlePricing_Pub\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Parameters_descriptor,
        new java.lang.String[] { "BenefitId", "BenefitIdNull", "OnlyDefinition", "OnlyDefinitionNull", "FilterByItemSetId", "FilterByItemSetIdNull", "SortByCharacteristicIdList", "SortByCharacteristicIdListNull", "SortOptionList", "SortOptionListNull", "InheritDepthOptionList", "InheritDepthOptionListNull", "RecursiveEvaluationOptionList", "RecursiveEvaluationOptionListNull", "GetValuesForSortByCharacs", "GetValuesForSortByCharacsNull", });
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBundlePricing_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "NetBasedPricing", "ItemConditionId", "BundlePricingTypeId", "BundlePricingType", "ItemSetId", "Quantity", "DistinctItemsOnly", "ItemConditionDescription", "SortNo", "BundlePriceOrDiscount", "Condition1", "Condition2", "RecursiveEvaluation", "DomainTreeNodeIds", "NodeCharacteristicId", "ItemConditionPartId", "CombineGroupsWithANDOperator", "ItemConditionPartDescription", "LevelIds", "ItemConditionGroupId", "ItemGroupSortNo", "Operator1", "Operator2", "ItemConditionGroupDescription", "CombinePartsWithANDOperator", "ItemPartSortNo", "InheritDepth", "NodeDescription", "Value2", "Value3", "Value1", "TreeNodeId", "NodeId", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
