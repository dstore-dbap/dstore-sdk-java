// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetShippTypeSurcharges_Ad.proto

package io.dstore.engine.procedures;

public final class OmGetShippTypeSurchargesAd {
  private OmGetShippTypeSurchargesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    boolean hasShippingTypeId();
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    io.dstore.Values.integerValue getShippingTypeId();
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

    /**
     * <code>optional bool shipping_type_id_null = 1001;</code>
     */
    boolean getShippingTypeIdNull();

    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    boolean hasSurchargeTypeId();
    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    io.dstore.Values.integerValue getSurchargeTypeId();
    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

    /**
     * <code>optional bool surcharge_type_id_null = 1002;</code>
     */
    boolean getSurchargeTypeIdNull();

    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    boolean hasValidFrom();
    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    io.dstore.Values.timestampValue getValidFrom();
    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder();

    /**
     * <code>optional bool valid_from_null = 1003;</code>
     */
    boolean getValidFromNull();

    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    boolean hasValidTo();
    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    io.dstore.Values.timestampValue getValidTo();
    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder();

    /**
     * <code>optional bool valid_to_null = 1004;</code>
     */
    boolean getValidToNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      shippingTypeIdNull_ = false;
      surchargeTypeIdNull_ = false;
      validFromNull_ = false;
      validToNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (shippingTypeId_ != null) {
                subBuilder = shippingTypeId_.toBuilder();
              }
              shippingTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shippingTypeId_);
                shippingTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (surchargeTypeId_ != null) {
                subBuilder = surchargeTypeId_.toBuilder();
              }
              surchargeTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(surchargeTypeId_);
                surchargeTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.timestampValue.Builder subBuilder = null;
              if (validFrom_ != null) {
                subBuilder = validFrom_.toBuilder();
              }
              validFrom_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(validFrom_);
                validFrom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.timestampValue.Builder subBuilder = null;
              if (validTo_ != null) {
                subBuilder = validTo_.toBuilder();
              }
              validTo_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(validTo_);
                validTo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              shippingTypeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              surchargeTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              validFromNull_ = input.readBool();
              break;
            }
            case 8032: {

              validToNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.Builder.class);
    }

    public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue shippingTypeId_;
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    public boolean hasShippingTypeId() {
      return shippingTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    public io.dstore.Values.integerValue getShippingTypeId() {
      return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
      return getShippingTypeId();
    }

    public static final int SHIPPING_TYPE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean shippingTypeIdNull_;
    /**
     * <code>optional bool shipping_type_id_null = 1001;</code>
     */
    public boolean getShippingTypeIdNull() {
      return shippingTypeIdNull_;
    }

    public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue surchargeTypeId_;
    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    public boolean hasSurchargeTypeId() {
      return surchargeTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    public io.dstore.Values.integerValue getSurchargeTypeId() {
      return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
      return getSurchargeTypeId();
    }

    public static final int SURCHARGE_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean surchargeTypeIdNull_;
    /**
     * <code>optional bool surcharge_type_id_null = 1002;</code>
     */
    public boolean getSurchargeTypeIdNull() {
      return surchargeTypeIdNull_;
    }

    public static final int VALID_FROM_FIELD_NUMBER = 3;
    private io.dstore.Values.timestampValue validFrom_;
    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    public boolean hasValidFrom() {
      return validFrom_ != null;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    public io.dstore.Values.timestampValue getValidFrom() {
      return validFrom_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
     */
    public io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder() {
      return getValidFrom();
    }

    public static final int VALID_FROM_NULL_FIELD_NUMBER = 1003;
    private boolean validFromNull_;
    /**
     * <code>optional bool valid_from_null = 1003;</code>
     */
    public boolean getValidFromNull() {
      return validFromNull_;
    }

    public static final int VALID_TO_FIELD_NUMBER = 4;
    private io.dstore.Values.timestampValue validTo_;
    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    public boolean hasValidTo() {
      return validTo_ != null;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    public io.dstore.Values.timestampValue getValidTo() {
      return validTo_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
     */
    public io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder() {
      return getValidTo();
    }

    public static final int VALID_TO_NULL_FIELD_NUMBER = 1004;
    private boolean validToNull_;
    /**
     * <code>optional bool valid_to_null = 1004;</code>
     */
    public boolean getValidToNull() {
      return validToNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (shippingTypeId_ != null) {
        output.writeMessage(1, getShippingTypeId());
      }
      if (surchargeTypeId_ != null) {
        output.writeMessage(2, getSurchargeTypeId());
      }
      if (validFrom_ != null) {
        output.writeMessage(3, getValidFrom());
      }
      if (validTo_ != null) {
        output.writeMessage(4, getValidTo());
      }
      if (shippingTypeIdNull_ != false) {
        output.writeBool(1001, shippingTypeIdNull_);
      }
      if (surchargeTypeIdNull_ != false) {
        output.writeBool(1002, surchargeTypeIdNull_);
      }
      if (validFromNull_ != false) {
        output.writeBool(1003, validFromNull_);
      }
      if (validToNull_ != false) {
        output.writeBool(1004, validToNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shippingTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getShippingTypeId());
      }
      if (surchargeTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSurchargeTypeId());
      }
      if (validFrom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValidFrom());
      }
      if (validTo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValidTo());
      }
      if (shippingTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, shippingTypeIdNull_);
      }
      if (surchargeTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, surchargeTypeIdNull_);
      }
      if (validFromNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, validFromNull_);
      }
      if (validToNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, validToNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters)
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }
        shippingTypeIdNull_ = false;

        if (surchargeTypeIdBuilder_ == null) {
          surchargeTypeId_ = null;
        } else {
          surchargeTypeId_ = null;
          surchargeTypeIdBuilder_ = null;
        }
        surchargeTypeIdNull_ = false;

        if (validFromBuilder_ == null) {
          validFrom_ = null;
        } else {
          validFrom_ = null;
          validFromBuilder_ = null;
        }
        validFromNull_ = false;

        if (validToBuilder_ == null) {
          validTo_ = null;
        } else {
          validTo_ = null;
          validToBuilder_ = null;
        }
        validToNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters build() {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters result = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters(this);
        if (shippingTypeIdBuilder_ == null) {
          result.shippingTypeId_ = shippingTypeId_;
        } else {
          result.shippingTypeId_ = shippingTypeIdBuilder_.build();
        }
        result.shippingTypeIdNull_ = shippingTypeIdNull_;
        if (surchargeTypeIdBuilder_ == null) {
          result.surchargeTypeId_ = surchargeTypeId_;
        } else {
          result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
        }
        result.surchargeTypeIdNull_ = surchargeTypeIdNull_;
        if (validFromBuilder_ == null) {
          result.validFrom_ = validFrom_;
        } else {
          result.validFrom_ = validFromBuilder_.build();
        }
        result.validFromNull_ = validFromNull_;
        if (validToBuilder_ == null) {
          result.validTo_ = validTo_;
        } else {
          result.validTo_ = validToBuilder_.build();
        }
        result.validToNull_ = validToNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasShippingTypeId()) {
          mergeShippingTypeId(other.getShippingTypeId());
        }
        if (other.getShippingTypeIdNull() != false) {
          setShippingTypeIdNull(other.getShippingTypeIdNull());
        }
        if (other.hasSurchargeTypeId()) {
          mergeSurchargeTypeId(other.getSurchargeTypeId());
        }
        if (other.getSurchargeTypeIdNull() != false) {
          setSurchargeTypeIdNull(other.getSurchargeTypeIdNull());
        }
        if (other.hasValidFrom()) {
          mergeValidFrom(other.getValidFrom());
        }
        if (other.getValidFromNull() != false) {
          setValidFromNull(other.getValidFromNull());
        }
        if (other.hasValidTo()) {
          mergeValidTo(other.getValidTo());
        }
        if (other.getValidToNull() != false) {
          setValidToNull(other.getValidToNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue shippingTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public io.dstore.Values.integerValue getShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        } else {
          return shippingTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public Builder setShippingTypeId(io.dstore.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shippingTypeId_ = value;
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public Builder setShippingTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = builderForValue.build();
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public Builder mergeShippingTypeId(io.dstore.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (shippingTypeId_ != null) {
            shippingTypeId_ =
              io.dstore.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
          } else {
            shippingTypeId_ = value;
          }
          onChanged();
        } else {
          shippingTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public Builder clearShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
          onChanged();
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getShippingTypeIdBuilder() {
        
        onChanged();
        return getShippingTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        if (shippingTypeIdBuilder_ != null) {
          return shippingTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return shippingTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getShippingTypeIdFieldBuilder() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getShippingTypeId(),
                  getParentForChildren(),
                  isClean());
          shippingTypeId_ = null;
        }
        return shippingTypeIdBuilder_;
      }

      private boolean shippingTypeIdNull_ ;
      /**
       * <code>optional bool shipping_type_id_null = 1001;</code>
       */
      public boolean getShippingTypeIdNull() {
        return shippingTypeIdNull_;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1001;</code>
       */
      public Builder setShippingTypeIdNull(boolean value) {
        
        shippingTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1001;</code>
       */
      public Builder clearShippingTypeIdNull() {
        
        shippingTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue surchargeTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue getSurchargeTypeId() {
        if (surchargeTypeIdBuilder_ == null) {
          return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
        } else {
          return surchargeTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public Builder setSurchargeTypeId(io.dstore.Values.integerValue value) {
        if (surchargeTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          surchargeTypeId_ = value;
          onChanged();
        } else {
          surchargeTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public Builder setSurchargeTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (surchargeTypeIdBuilder_ == null) {
          surchargeTypeId_ = builderForValue.build();
          onChanged();
        } else {
          surchargeTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public Builder mergeSurchargeTypeId(io.dstore.Values.integerValue value) {
        if (surchargeTypeIdBuilder_ == null) {
          if (surchargeTypeId_ != null) {
            surchargeTypeId_ =
              io.dstore.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
          } else {
            surchargeTypeId_ = value;
          }
          onChanged();
        } else {
          surchargeTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public Builder clearSurchargeTypeId() {
        if (surchargeTypeIdBuilder_ == null) {
          surchargeTypeId_ = null;
          onChanged();
        } else {
          surchargeTypeId_ = null;
          surchargeTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
        
        onChanged();
        return getSurchargeTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        if (surchargeTypeIdBuilder_ != null) {
          return surchargeTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return surchargeTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getSurchargeTypeIdFieldBuilder() {
        if (surchargeTypeIdBuilder_ == null) {
          surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getSurchargeTypeId(),
                  getParentForChildren(),
                  isClean());
          surchargeTypeId_ = null;
        }
        return surchargeTypeIdBuilder_;
      }

      private boolean surchargeTypeIdNull_ ;
      /**
       * <code>optional bool surcharge_type_id_null = 1002;</code>
       */
      public boolean getSurchargeTypeIdNull() {
        return surchargeTypeIdNull_;
      }
      /**
       * <code>optional bool surcharge_type_id_null = 1002;</code>
       */
      public Builder setSurchargeTypeIdNull(boolean value) {
        
        surchargeTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool surcharge_type_id_null = 1002;</code>
       */
      public Builder clearSurchargeTypeIdNull() {
        
        surchargeTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.timestampValue validFrom_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> validFromBuilder_;
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public boolean hasValidFrom() {
        return validFromBuilder_ != null || validFrom_ != null;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public io.dstore.Values.timestampValue getValidFrom() {
        if (validFromBuilder_ == null) {
          return validFrom_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
        } else {
          return validFromBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public Builder setValidFrom(io.dstore.Values.timestampValue value) {
        if (validFromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          validFrom_ = value;
          onChanged();
        } else {
          validFromBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public Builder setValidFrom(
          io.dstore.Values.timestampValue.Builder builderForValue) {
        if (validFromBuilder_ == null) {
          validFrom_ = builderForValue.build();
          onChanged();
        } else {
          validFromBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public Builder mergeValidFrom(io.dstore.Values.timestampValue value) {
        if (validFromBuilder_ == null) {
          if (validFrom_ != null) {
            validFrom_ =
              io.dstore.Values.timestampValue.newBuilder(validFrom_).mergeFrom(value).buildPartial();
          } else {
            validFrom_ = value;
          }
          onChanged();
        } else {
          validFromBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public Builder clearValidFrom() {
        if (validFromBuilder_ == null) {
          validFrom_ = null;
          onChanged();
        } else {
          validFrom_ = null;
          validFromBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public io.dstore.Values.timestampValue.Builder getValidFromBuilder() {
        
        onChanged();
        return getValidFromFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder() {
        if (validFromBuilder_ != null) {
          return validFromBuilder_.getMessageOrBuilder();
        } else {
          return validFrom_ == null ?
              io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_from = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
          getValidFromFieldBuilder() {
        if (validFromBuilder_ == null) {
          validFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                  getValidFrom(),
                  getParentForChildren(),
                  isClean());
          validFrom_ = null;
        }
        return validFromBuilder_;
      }

      private boolean validFromNull_ ;
      /**
       * <code>optional bool valid_from_null = 1003;</code>
       */
      public boolean getValidFromNull() {
        return validFromNull_;
      }
      /**
       * <code>optional bool valid_from_null = 1003;</code>
       */
      public Builder setValidFromNull(boolean value) {
        
        validFromNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool valid_from_null = 1003;</code>
       */
      public Builder clearValidFromNull() {
        
        validFromNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.timestampValue validTo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> validToBuilder_;
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public boolean hasValidTo() {
        return validToBuilder_ != null || validTo_ != null;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public io.dstore.Values.timestampValue getValidTo() {
        if (validToBuilder_ == null) {
          return validTo_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
        } else {
          return validToBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public Builder setValidTo(io.dstore.Values.timestampValue value) {
        if (validToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          validTo_ = value;
          onChanged();
        } else {
          validToBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public Builder setValidTo(
          io.dstore.Values.timestampValue.Builder builderForValue) {
        if (validToBuilder_ == null) {
          validTo_ = builderForValue.build();
          onChanged();
        } else {
          validToBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public Builder mergeValidTo(io.dstore.Values.timestampValue value) {
        if (validToBuilder_ == null) {
          if (validTo_ != null) {
            validTo_ =
              io.dstore.Values.timestampValue.newBuilder(validTo_).mergeFrom(value).buildPartial();
          } else {
            validTo_ = value;
          }
          onChanged();
        } else {
          validToBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public Builder clearValidTo() {
        if (validToBuilder_ == null) {
          validTo_ = null;
          onChanged();
        } else {
          validTo_ = null;
          validToBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public io.dstore.Values.timestampValue.Builder getValidToBuilder() {
        
        onChanged();
        return getValidToFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder() {
        if (validToBuilder_ != null) {
          return validToBuilder_.getMessageOrBuilder();
        } else {
          return validTo_ == null ?
              io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_to = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
          getValidToFieldBuilder() {
        if (validToBuilder_ == null) {
          validToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                  getValidTo(),
                  getParentForChildren(),
                  isClean());
          validTo_ = null;
        }
        return validToBuilder_;
      }

      private boolean validToNull_ ;
      /**
       * <code>optional bool valid_to_null = 1004;</code>
       */
      public boolean getValidToNull() {
        return validToNull_;
      }
      /**
       * <code>optional bool valid_to_null = 1004;</code>
       */
      public Builder setValidToNull(boolean value) {
        
        validToNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool valid_to_null = 1004;</code>
       */
      public Builder clearValidToNull() {
        
        validToNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Parameters)
    private static final io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters();
    }

    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippTypeSurcharges_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      boolean hasUnitId();
      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      io.dstore.Values.integerValue getUnitId();
      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder();

      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      boolean hasValidTo();
      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      io.dstore.Values.timestampValue getValidTo();
      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder();

      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      boolean hasPriorityNo();
      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      io.dstore.Values.integerValue getPriorityNo();
      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder();

      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      boolean hasShippingTypeDescription();
      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      io.dstore.Values.stringValue getShippingTypeDescription();
      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder();

      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      boolean hasValidFrom();
      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      io.dstore.Values.timestampValue getValidFrom();
      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder();

      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      boolean hasSurchargeIsAbsoluteValue();
      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      io.dstore.Values.integerValue getSurchargeIsAbsoluteValue();
      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder();

      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      boolean hasUnitSymbol();
      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      io.dstore.Values.stringValue getUnitSymbol();
      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder();

      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      boolean hasShippingTypeId();
      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      io.dstore.Values.integerValue getShippingTypeId();
      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      boolean hasSurchargeTypeDescription();
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      io.dstore.Values.stringValue getSurchargeTypeDescription();
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder();

      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      boolean hasSurchargeValue();
      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      io.dstore.Values.decimalValue getSurchargeValue();
      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      boolean hasSurchargeTypeId();
      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      io.dstore.Values.integerValue getSurchargeTypeId();
      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (unitId_ != null) {
                  subBuilder = unitId_.toBuilder();
                }
                unitId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitId_);
                  unitId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.timestampValue.Builder subBuilder = null;
                if (validTo_ != null) {
                  subBuilder = validTo_.toBuilder();
                }
                validTo_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validTo_);
                  validTo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (priorityNo_ != null) {
                  subBuilder = priorityNo_.toBuilder();
                }
                priorityNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(priorityNo_);
                  priorityNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (shippingTypeDescription_ != null) {
                  subBuilder = shippingTypeDescription_.toBuilder();
                }
                shippingTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingTypeDescription_);
                  shippingTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.timestampValue.Builder subBuilder = null;
                if (validFrom_ != null) {
                  subBuilder = validFrom_.toBuilder();
                }
                validFrom_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validFrom_);
                  validFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeIsAbsoluteValue_ != null) {
                  subBuilder = surchargeIsAbsoluteValue_.toBuilder();
                }
                surchargeIsAbsoluteValue_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeIsAbsoluteValue_);
                  surchargeIsAbsoluteValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (unitSymbol_ != null) {
                  subBuilder = unitSymbol_.toBuilder();
                }
                unitSymbol_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitSymbol_);
                  unitSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (shippingTypeId_ != null) {
                  subBuilder = shippingTypeId_.toBuilder();
                }
                shippingTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingTypeId_);
                  shippingTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (surchargeTypeDescription_ != null) {
                  subBuilder = surchargeTypeDescription_.toBuilder();
                }
                surchargeTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeDescription_);
                  surchargeTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int UNIT_ID_FIELD_NUMBER = 10001;
      private io.dstore.Values.integerValue unitId_;
      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      public boolean hasUnitId() {
        return unitId_ != null;
      }
      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      public io.dstore.Values.integerValue getUnitId() {
        return unitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
      }
      /**
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder() {
        return getUnitId();
      }

      public static final int VALID_TO_FIELD_NUMBER = 10002;
      private io.dstore.Values.timestampValue validTo_;
      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      public boolean hasValidTo() {
        return validTo_ != null;
      }
      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      public io.dstore.Values.timestampValue getValidTo() {
        return validTo_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
      }
      /**
       * <pre>
       * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder() {
        return getValidTo();
      }

      public static final int PRIORITY_NO_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue priorityNo_;
      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      public boolean hasPriorityNo() {
        return priorityNo_ != null;
      }
      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      public io.dstore.Values.integerValue getPriorityNo() {
        return priorityNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
      }
      /**
       * <pre>
       * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder() {
        return getPriorityNo();
      }

      public static final int SHIPPING_TYPE_DESCRIPTION_FIELD_NUMBER = 10004;
      private io.dstore.Values.stringValue shippingTypeDescription_;
      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      public boolean hasShippingTypeDescription() {
        return shippingTypeDescription_ != null;
      }
      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      public io.dstore.Values.stringValue getShippingTypeDescription() {
        return shippingTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
      }
      /**
       * <pre>
       * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder() {
        return getShippingTypeDescription();
      }

      public static final int VALID_FROM_FIELD_NUMBER = 10005;
      private io.dstore.Values.timestampValue validFrom_;
      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      public boolean hasValidFrom() {
        return validFrom_ != null;
      }
      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      public io.dstore.Values.timestampValue getValidFrom() {
        return validFrom_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
      }
      /**
       * <pre>
       * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder() {
        return getValidFrom();
      }

      public static final int SURCHARGE_IS_ABSOLUTE_VALUE_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue surchargeIsAbsoluteValue_;
      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      public boolean hasSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ != null;
      }
      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      public io.dstore.Values.integerValue getSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
      }
      /**
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
        return getSurchargeIsAbsoluteValue();
      }

      public static final int UNIT_SYMBOL_FIELD_NUMBER = 10007;
      private io.dstore.Values.stringValue unitSymbol_;
      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      public boolean hasUnitSymbol() {
        return unitSymbol_ != null;
      }
      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      public io.dstore.Values.stringValue getUnitSymbol() {
        return unitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
      }
      /**
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
        return getUnitSymbol();
      }

      public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 10008;
      private io.dstore.Values.integerValue shippingTypeId_;
      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeId_ != null;
      }
      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      public io.dstore.Values.integerValue getShippingTypeId() {
        return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
      }
      /**
       * <pre>
       * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        return getShippingTypeId();
      }

      public static final int SURCHARGE_TYPE_DESCRIPTION_FIELD_NUMBER = 10009;
      private io.dstore.Values.stringValue surchargeTypeDescription_;
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      public boolean hasSurchargeTypeDescription() {
        return surchargeTypeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      public io.dstore.Values.stringValue getSurchargeTypeDescription() {
        return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
        return getSurchargeTypeDescription();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10010;
      private io.dstore.Values.decimalValue surchargeValue_;
      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      public io.dstore.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <pre>
       * Der Wert des Aufschlags/Rabatts
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
       */
      public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10011;
      private io.dstore.Values.integerValue surchargeTypeId_;
      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      public io.dstore.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <pre>
       * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (unitId_ != null) {
          output.writeMessage(10001, getUnitId());
        }
        if (validTo_ != null) {
          output.writeMessage(10002, getValidTo());
        }
        if (priorityNo_ != null) {
          output.writeMessage(10003, getPriorityNo());
        }
        if (shippingTypeDescription_ != null) {
          output.writeMessage(10004, getShippingTypeDescription());
        }
        if (validFrom_ != null) {
          output.writeMessage(10005, getValidFrom());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          output.writeMessage(10006, getSurchargeIsAbsoluteValue());
        }
        if (unitSymbol_ != null) {
          output.writeMessage(10007, getUnitSymbol());
        }
        if (shippingTypeId_ != null) {
          output.writeMessage(10008, getShippingTypeId());
        }
        if (surchargeTypeDescription_ != null) {
          output.writeMessage(10009, getSurchargeTypeDescription());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10010, getSurchargeValue());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10011, getSurchargeTypeId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (unitId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getUnitId());
        }
        if (validTo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getValidTo());
        }
        if (priorityNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPriorityNo());
        }
        if (shippingTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getShippingTypeDescription());
        }
        if (validFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValidFrom());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getSurchargeIsAbsoluteValue());
        }
        if (unitSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getUnitSymbol());
        }
        if (shippingTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getShippingTypeId());
        }
        if (surchargeTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getSurchargeTypeDescription());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getSurchargeValue());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getSurchargeTypeId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row)
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (unitIdBuilder_ == null) {
            unitId_ = null;
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }
          if (validToBuilder_ == null) {
            validTo_ = null;
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }
          if (priorityNoBuilder_ == null) {
            priorityNo_ = null;
          } else {
            priorityNo_ = null;
            priorityNoBuilder_ = null;
          }
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = null;
          } else {
            shippingTypeDescription_ = null;
            shippingTypeDescriptionBuilder_ = null;
          }
          if (validFromBuilder_ == null) {
            validFrom_ = null;
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row build() {
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row result = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (unitIdBuilder_ == null) {
            result.unitId_ = unitId_;
          } else {
            result.unitId_ = unitIdBuilder_.build();
          }
          if (validToBuilder_ == null) {
            result.validTo_ = validTo_;
          } else {
            result.validTo_ = validToBuilder_.build();
          }
          if (priorityNoBuilder_ == null) {
            result.priorityNo_ = priorityNo_;
          } else {
            result.priorityNo_ = priorityNoBuilder_.build();
          }
          if (shippingTypeDescriptionBuilder_ == null) {
            result.shippingTypeDescription_ = shippingTypeDescription_;
          } else {
            result.shippingTypeDescription_ = shippingTypeDescriptionBuilder_.build();
          }
          if (validFromBuilder_ == null) {
            result.validFrom_ = validFrom_;
          } else {
            result.validFrom_ = validFromBuilder_.build();
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValue_;
          } else {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValueBuilder_.build();
          }
          if (unitSymbolBuilder_ == null) {
            result.unitSymbol_ = unitSymbol_;
          } else {
            result.unitSymbol_ = unitSymbolBuilder_.build();
          }
          if (shippingTypeIdBuilder_ == null) {
            result.shippingTypeId_ = shippingTypeId_;
          } else {
            result.shippingTypeId_ = shippingTypeIdBuilder_.build();
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            result.surchargeTypeDescription_ = surchargeTypeDescription_;
          } else {
            result.surchargeTypeDescription_ = surchargeTypeDescriptionBuilder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasUnitId()) {
            mergeUnitId(other.getUnitId());
          }
          if (other.hasValidTo()) {
            mergeValidTo(other.getValidTo());
          }
          if (other.hasPriorityNo()) {
            mergePriorityNo(other.getPriorityNo());
          }
          if (other.hasShippingTypeDescription()) {
            mergeShippingTypeDescription(other.getShippingTypeDescription());
          }
          if (other.hasValidFrom()) {
            mergeValidFrom(other.getValidFrom());
          }
          if (other.hasSurchargeIsAbsoluteValue()) {
            mergeSurchargeIsAbsoluteValue(other.getSurchargeIsAbsoluteValue());
          }
          if (other.hasUnitSymbol()) {
            mergeUnitSymbol(other.getUnitSymbol());
          }
          if (other.hasShippingTypeId()) {
            mergeShippingTypeId(other.getShippingTypeId());
          }
          if (other.hasSurchargeTypeDescription()) {
            mergeSurchargeTypeDescription(other.getSurchargeTypeDescription());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.integerValue unitId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> unitIdBuilder_;
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public boolean hasUnitId() {
          return unitIdBuilder_ != null || unitId_ != null;
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public io.dstore.Values.integerValue getUnitId() {
          if (unitIdBuilder_ == null) {
            return unitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
          } else {
            return unitIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public Builder setUnitId(io.dstore.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitId_ = value;
            onChanged();
          } else {
            unitIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public Builder setUnitId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (unitIdBuilder_ == null) {
            unitId_ = builderForValue.build();
            onChanged();
          } else {
            unitIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public Builder mergeUnitId(io.dstore.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (unitId_ != null) {
              unitId_ =
                io.dstore.Values.integerValue.newBuilder(unitId_).mergeFrom(value).buildPartial();
            } else {
              unitId_ = value;
            }
            onChanged();
          } else {
            unitIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public Builder clearUnitId() {
          if (unitIdBuilder_ == null) {
            unitId_ = null;
            onChanged();
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public io.dstore.Values.integerValue.Builder getUnitIdBuilder() {
          
          onChanged();
          return getUnitIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder() {
          if (unitIdBuilder_ != null) {
            return unitIdBuilder_.getMessageOrBuilder();
          } else {
            return unitId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
          }
        }
        /**
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getUnitIdFieldBuilder() {
          if (unitIdBuilder_ == null) {
            unitIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getUnitId(),
                    getParentForChildren(),
                    isClean());
            unitId_ = null;
          }
          return unitIdBuilder_;
        }

        private io.dstore.Values.timestampValue validTo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> validToBuilder_;
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public boolean hasValidTo() {
          return validToBuilder_ != null || validTo_ != null;
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public io.dstore.Values.timestampValue getValidTo() {
          if (validToBuilder_ == null) {
            return validTo_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
          } else {
            return validToBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public Builder setValidTo(io.dstore.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validTo_ = value;
            onChanged();
          } else {
            validToBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public Builder setValidTo(
            io.dstore.Values.timestampValue.Builder builderForValue) {
          if (validToBuilder_ == null) {
            validTo_ = builderForValue.build();
            onChanged();
          } else {
            validToBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public Builder mergeValidTo(io.dstore.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (validTo_ != null) {
              validTo_ =
                io.dstore.Values.timestampValue.newBuilder(validTo_).mergeFrom(value).buildPartial();
            } else {
              validTo_ = value;
            }
            onChanged();
          } else {
            validToBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public Builder clearValidTo() {
          if (validToBuilder_ == null) {
            validTo_ = null;
            onChanged();
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public io.dstore.Values.timestampValue.Builder getValidToBuilder() {
          
          onChanged();
          return getValidToFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        public io.dstore.Values.timestampValueOrBuilder getValidToOrBuilder() {
          if (validToBuilder_ != null) {
            return validToBuilder_.getMessageOrBuilder();
          } else {
            return validTo_ == null ?
                io.dstore.Values.timestampValue.getDefaultInstance() : validTo_;
          }
        }
        /**
         * <pre>
         * Der Zeitpunkt bis zu dem ein Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_to = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
            getValidToFieldBuilder() {
          if (validToBuilder_ == null) {
            validToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                    getValidTo(),
                    getParentForChildren(),
                    isClean());
            validTo_ = null;
          }
          return validToBuilder_;
        }

        private io.dstore.Values.integerValue priorityNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> priorityNoBuilder_;
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public boolean hasPriorityNo() {
          return priorityNoBuilder_ != null || priorityNo_ != null;
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public io.dstore.Values.integerValue getPriorityNo() {
          if (priorityNoBuilder_ == null) {
            return priorityNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
          } else {
            return priorityNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public Builder setPriorityNo(io.dstore.Values.integerValue value) {
          if (priorityNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            priorityNo_ = value;
            onChanged();
          } else {
            priorityNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public Builder setPriorityNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (priorityNoBuilder_ == null) {
            priorityNo_ = builderForValue.build();
            onChanged();
          } else {
            priorityNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public Builder mergePriorityNo(io.dstore.Values.integerValue value) {
          if (priorityNoBuilder_ == null) {
            if (priorityNo_ != null) {
              priorityNo_ =
                io.dstore.Values.integerValue.newBuilder(priorityNo_).mergeFrom(value).buildPartial();
            } else {
              priorityNo_ = value;
            }
            onChanged();
          } else {
            priorityNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public Builder clearPriorityNo() {
          if (priorityNoBuilder_ == null) {
            priorityNo_ = null;
            onChanged();
          } else {
            priorityNo_ = null;
            priorityNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getPriorityNoBuilder() {
          
          onChanged();
          return getPriorityNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder() {
          if (priorityNoBuilder_ != null) {
            return priorityNoBuilder_.getMessageOrBuilder();
          } else {
            return priorityNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
          }
        }
        /**
         * <pre>
         * Die Priorität des Rabatts/Aufschlags. Bestimmt die Reihenfolge, in der Rabatte/Aufschläge berechnet und gelistet werden. Bei relativen "Surcharges" wichtig, da der Betrag, auf den er anzuwenden ist, "Surcharges" mit kleinerer "PriorityNo" enthält.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue priority_no = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPriorityNoFieldBuilder() {
          if (priorityNoBuilder_ == null) {
            priorityNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPriorityNo(),
                    getParentForChildren(),
                    isClean());
            priorityNo_ = null;
          }
          return priorityNoBuilder_;
        }

        private io.dstore.Values.stringValue shippingTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> shippingTypeDescriptionBuilder_;
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public boolean hasShippingTypeDescription() {
          return shippingTypeDescriptionBuilder_ != null || shippingTypeDescription_ != null;
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public io.dstore.Values.stringValue getShippingTypeDescription() {
          if (shippingTypeDescriptionBuilder_ == null) {
            return shippingTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
          } else {
            return shippingTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public Builder setShippingTypeDescription(io.dstore.Values.stringValue value) {
          if (shippingTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingTypeDescription_ = value;
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public Builder setShippingTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public Builder mergeShippingTypeDescription(io.dstore.Values.stringValue value) {
          if (shippingTypeDescriptionBuilder_ == null) {
            if (shippingTypeDescription_ != null) {
              shippingTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(shippingTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              shippingTypeDescription_ = value;
            }
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public Builder clearShippingTypeDescription() {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = null;
            onChanged();
          } else {
            shippingTypeDescription_ = null;
            shippingTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public io.dstore.Values.stringValue.Builder getShippingTypeDescriptionBuilder() {
          
          onChanged();
          return getShippingTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder() {
          if (shippingTypeDescriptionBuilder_ != null) {
            return shippingTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return shippingTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
          }
        }
        /**
         * <pre>
         * Die Bezeichnung der Versandart für die der Aufschlag/Rabatt gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue shipping_type_description = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getShippingTypeDescriptionFieldBuilder() {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getShippingTypeDescription(),
                    getParentForChildren(),
                    isClean());
            shippingTypeDescription_ = null;
          }
          return shippingTypeDescriptionBuilder_;
        }

        private io.dstore.Values.timestampValue validFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> validFromBuilder_;
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public boolean hasValidFrom() {
          return validFromBuilder_ != null || validFrom_ != null;
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public io.dstore.Values.timestampValue getValidFrom() {
          if (validFromBuilder_ == null) {
            return validFrom_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
          } else {
            return validFromBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public Builder setValidFrom(io.dstore.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validFrom_ = value;
            onChanged();
          } else {
            validFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public Builder setValidFrom(
            io.dstore.Values.timestampValue.Builder builderForValue) {
          if (validFromBuilder_ == null) {
            validFrom_ = builderForValue.build();
            onChanged();
          } else {
            validFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public Builder mergeValidFrom(io.dstore.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (validFrom_ != null) {
              validFrom_ =
                io.dstore.Values.timestampValue.newBuilder(validFrom_).mergeFrom(value).buildPartial();
            } else {
              validFrom_ = value;
            }
            onChanged();
          } else {
            validFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public Builder clearValidFrom() {
          if (validFromBuilder_ == null) {
            validFrom_ = null;
            onChanged();
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public io.dstore.Values.timestampValue.Builder getValidFromBuilder() {
          
          onChanged();
          return getValidFromFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        public io.dstore.Values.timestampValueOrBuilder getValidFromOrBuilder() {
          if (validFromBuilder_ != null) {
            return validFromBuilder_.getMessageOrBuilder();
          } else {
            return validFrom_ == null ?
                io.dstore.Values.timestampValue.getDefaultInstance() : validFrom_;
          }
        }
        /**
         * <pre>
         * Der Zeitpunkt ab dem der Rabatt/Aufschlag gültig ist
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue valid_from = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
            getValidFromFieldBuilder() {
          if (validFromBuilder_ == null) {
            validFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                    getValidFrom(),
                    getParentForChildren(),
                    isClean());
            validFrom_ = null;
          }
          return validFromBuilder_;
        }

        private io.dstore.Values.integerValue surchargeIsAbsoluteValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeIsAbsoluteValueBuilder_;
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public boolean hasSurchargeIsAbsoluteValue() {
          return surchargeIsAbsoluteValueBuilder_ != null || surchargeIsAbsoluteValue_ != null;
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public io.dstore.Values.integerValue getSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            return surchargeIsAbsoluteValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          } else {
            return surchargeIsAbsoluteValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public Builder setSurchargeIsAbsoluteValue(io.dstore.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeIsAbsoluteValue_ = value;
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public Builder setSurchargeIsAbsoluteValue(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public Builder mergeSurchargeIsAbsoluteValue(io.dstore.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (surchargeIsAbsoluteValue_ != null) {
              surchargeIsAbsoluteValue_ =
                io.dstore.Values.integerValue.newBuilder(surchargeIsAbsoluteValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeIsAbsoluteValue_ = value;
            }
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public Builder clearSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
            onChanged();
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeIsAbsoluteValueBuilder() {
          
          onChanged();
          return getSurchargeIsAbsoluteValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ != null) {
            return surchargeIsAbsoluteValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeIsAbsoluteValue_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          }
        }
        /**
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "UnitID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeIsAbsoluteValueFieldBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeIsAbsoluteValue(),
                    getParentForChildren(),
                    isClean());
            surchargeIsAbsoluteValue_ = null;
          }
          return surchargeIsAbsoluteValueBuilder_;
        }

        private io.dstore.Values.stringValue unitSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> unitSymbolBuilder_;
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public boolean hasUnitSymbol() {
          return unitSymbolBuilder_ != null || unitSymbol_ != null;
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public io.dstore.Values.stringValue getUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            return unitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
          } else {
            return unitSymbolBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public Builder setUnitSymbol(io.dstore.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitSymbol_ = value;
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public Builder setUnitSymbol(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = builderForValue.build();
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public Builder mergeUnitSymbol(io.dstore.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (unitSymbol_ != null) {
              unitSymbol_ =
                io.dstore.Values.stringValue.newBuilder(unitSymbol_).mergeFrom(value).buildPartial();
            } else {
              unitSymbol_ = value;
            }
            onChanged();
          } else {
            unitSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public Builder clearUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
            onChanged();
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public io.dstore.Values.stringValue.Builder getUnitSymbolBuilder() {
          
          onChanged();
          return getUnitSymbolFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
          if (unitSymbolBuilder_ != null) {
            return unitSymbolBuilder_.getMessageOrBuilder();
          } else {
            return unitSymbol_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
          }
        }
        /**
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getUnitSymbolFieldBuilder() {
          if (unitSymbolBuilder_ == null) {
            unitSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getUnitSymbol(),
                    getParentForChildren(),
                    isClean());
            unitSymbol_ = null;
          }
          return unitSymbolBuilder_;
        }

        private io.dstore.Values.integerValue shippingTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public boolean hasShippingTypeId() {
          return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public io.dstore.Values.integerValue getShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          } else {
            return shippingTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public Builder setShippingTypeId(io.dstore.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingTypeId_ = value;
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public Builder setShippingTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public Builder mergeShippingTypeId(io.dstore.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (shippingTypeId_ != null) {
              shippingTypeId_ =
                io.dstore.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
            } else {
              shippingTypeId_ = value;
            }
            onChanged();
          } else {
            shippingTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public Builder clearShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
            onChanged();
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public io.dstore.Values.integerValue.Builder getShippingTypeIdBuilder() {
          
          onChanged();
          return getShippingTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
          if (shippingTypeIdBuilder_ != null) {
            return shippingTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return shippingTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          }
        }
        /**
         * <pre>
         * Die ID der Versandart für die der Aufschlag/Rabatt gilt (z.Zt. also immer "&#64;ShippingTypeID")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue shipping_type_id = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getShippingTypeIdFieldBuilder() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getShippingTypeId(),
                    getParentForChildren(),
                    isClean());
            shippingTypeId_ = null;
          }
          return shippingTypeIdBuilder_;
        }

        private io.dstore.Values.stringValue surchargeTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> surchargeTypeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public boolean hasSurchargeTypeDescription() {
          return surchargeTypeDescriptionBuilder_ != null || surchargeTypeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public io.dstore.Values.stringValue getSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          } else {
            return surchargeTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public Builder setSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeDescription_ = value;
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public Builder setSurchargeTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public Builder mergeSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (surchargeTypeDescription_ != null) {
              surchargeTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(surchargeTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeDescription_ = value;
            }
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public Builder clearSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
            onChanged();
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public io.dstore.Values.stringValue.Builder getSurchargeTypeDescriptionBuilder() {
          
          onChanged();
          return getSurchargeTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
          if (surchargeTypeDescriptionBuilder_ != null) {
            return surchargeTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSurchargeTypeDescriptionFieldBuilder() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSurchargeTypeDescription(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeDescription_ = null;
          }
          return surchargeTypeDescriptionBuilder_;
        }

        private io.dstore.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public io.dstore.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public Builder setSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public Builder setSurchargeValue(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public Builder mergeSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public io.dstore.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <pre>
         * Der Wert des Aufschlags/Rabatts
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public io.dstore.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public Builder setSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public Builder setSurchargeTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public Builder mergeSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <pre>
         * Die ID der Aufschlags-/Rabatt-Art, die für "ShippingTypeID" im Zeitraum "ValidFrom" bis "ValidTo" konfiguriert ist/war
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row)
      private static final io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippTypeSurcharges_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippTypeSurcharges_Ad.Response)
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.class, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response build() {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response buildPartial() {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response result = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response other) {
        if (other == io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetShippTypeSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippTypeSurcharges_Ad.Response)
    private static final io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response();
    }

    public static io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetShippTypeSurchargesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/om_GetShippTy" +
      "peSurcharges_Ad.proto\022*dstore.engine.om_" +
      "GetShippTypeSurcharges_Ad\032\023dstore/values" +
      ".proto\032\033dstore/engine/message.proto\032#dst" +
      "ore/engine/metainformation.proto\"\322\002\n\nPar" +
      "ameters\0225\n\020shipping_type_id\030\001 \001(\0132\033.dsto" +
      "re.values.integerValue\022\036\n\025shipping_type_" +
      "id_null\030\351\007 \001(\010\0226\n\021surcharge_type_id\030\002 \001(" +
      "\0132\033.dstore.values.integerValue\022\037\n\026surcha" +
      "rge_type_id_null\030\352\007 \001(\010\0221\n\nvalid_from\030\003 ",
      "\001(\0132\035.dstore.values.timestampValue\022\030\n\017va" +
      "lid_from_null\030\353\007 \001(\010\022/\n\010valid_to\030\004 \001(\0132\035" +
      ".dstore.values.timestampValue\022\026\n\rvalid_t" +
      "o_null\030\354\007 \001(\010\"\313\006\n\010Response\022H\n\020meta_infor" +
      "mation\030\002 \003(\0132..dstore.engine.metainforma" +
      "tion.MetaInformation\022/\n\007message\030\003 \003(\0132\036." +
      "dstore.engine.message.Message\022E\n\003row\030\004 \003" +
      "(\01328.dstore.engine.om_GetShippTypeSurcha" +
      "rges_Ad.Response.Row\032\374\004\n\003Row\022\017\n\006row_id\030\220" +
      "N \001(\005\022-\n\007unit_id\030\221N \001(\0132\033.dstore.values.",
      "integerValue\0220\n\010valid_to\030\222N \001(\0132\035.dstore" +
      ".values.timestampValue\0221\n\013priority_no\030\223N" +
      " \001(\0132\033.dstore.values.integerValue\022>\n\031shi" +
      "pping_type_description\030\224N \001(\0132\032.dstore.v" +
      "alues.stringValue\0222\n\nvalid_from\030\225N \001(\0132\035" +
      ".dstore.values.timestampValue\022A\n\033surchar" +
      "ge_is_absolute_value\030\226N \001(\0132\033.dstore.val" +
      "ues.integerValue\0220\n\013unit_symbol\030\227N \001(\0132\032" +
      ".dstore.values.stringValue\0226\n\020shipping_t" +
      "ype_id\030\230N \001(\0132\033.dstore.values.integerVal",
      "ue\022?\n\032surcharge_type_description\030\231N \001(\0132" +
      "\032.dstore.values.stringValue\0225\n\017surcharge" +
      "_value\030\232N \001(\0132\033.dstore.values.decimalVal" +
      "ue\0227\n\021surcharge_type_id\030\233N \001(\0132\033.dstore." +
      "values.integerValueB]\n\033io.dstore.engine." +
      "proceduresZ>gosdk.dstore.de/engine/proce" +
      "dures/om_GetShippTypeSurcharges_Adb\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Parameters_descriptor,
        new java.lang.String[] { "ShippingTypeId", "ShippingTypeIdNull", "SurchargeTypeId", "SurchargeTypeIdNull", "ValidFrom", "ValidFromNull", "ValidTo", "ValidToNull", });
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippTypeSurcharges_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "UnitId", "ValidTo", "PriorityNo", "ShippingTypeDescription", "ValidFrom", "SurchargeIsAbsoluteValue", "UnitSymbol", "ShippingTypeId", "SurchargeTypeDescription", "SurchargeValue", "SurchargeTypeId", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
