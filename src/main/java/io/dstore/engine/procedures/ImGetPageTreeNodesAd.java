// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetPageTreeNodes_Ad.proto

package io.dstore.engine.procedures;

public final class ImGetPageTreeNodesAd {
  private ImGetPageTreeNodesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetPageTreeNodes_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    boolean hasIncludeInactive();
    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    io.dstore.values.BooleanValue getIncludeInactive();
    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    io.dstore.values.BooleanValueOrBuilder getIncludeInactiveOrBuilder();

    /**
     * <code>bool include_inactive_null = 1001;</code>
     */
    boolean getIncludeInactiveNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetPageTreeNodes_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      includeInactiveNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.BooleanValue.Builder subBuilder = null;
              if (includeInactive_ != null) {
                subBuilder = includeInactive_.toBuilder();
              }
              includeInactive_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includeInactive_);
                includeInactive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              includeInactiveNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.Builder.class);
    }

    public static final int INCLUDE_INACTIVE_FIELD_NUMBER = 1;
    private io.dstore.values.BooleanValue includeInactive_;
    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    public boolean hasIncludeInactive() {
      return includeInactive_ != null;
    }
    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    public io.dstore.values.BooleanValue getIncludeInactive() {
      return includeInactive_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : includeInactive_;
    }
    /**
     * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
     */
    public io.dstore.values.BooleanValueOrBuilder getIncludeInactiveOrBuilder() {
      return getIncludeInactive();
    }

    public static final int INCLUDE_INACTIVE_NULL_FIELD_NUMBER = 1001;
    private boolean includeInactiveNull_;
    /**
     * <code>bool include_inactive_null = 1001;</code>
     */
    public boolean getIncludeInactiveNull() {
      return includeInactiveNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (includeInactive_ != null) {
        output.writeMessage(1, getIncludeInactive());
      }
      if (includeInactiveNull_ != false) {
        output.writeBool(1001, includeInactiveNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (includeInactive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIncludeInactive());
      }
      if (includeInactiveNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, includeInactiveNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters other = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters) obj;

      boolean result = true;
      result = result && (hasIncludeInactive() == other.hasIncludeInactive());
      if (hasIncludeInactive()) {
        result = result && getIncludeInactive()
            .equals(other.getIncludeInactive());
      }
      result = result && (getIncludeInactiveNull()
          == other.getIncludeInactiveNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIncludeInactive()) {
        hash = (37 * hash) + INCLUDE_INACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + getIncludeInactive().hashCode();
      }
      hash = (37 * hash) + INCLUDE_INACTIVE_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIncludeInactiveNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetPageTreeNodes_Ad.Parameters)
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (includeInactiveBuilder_ == null) {
          includeInactive_ = null;
        } else {
          includeInactive_ = null;
          includeInactiveBuilder_ = null;
        }
        includeInactiveNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters build() {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters result = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters(this);
        if (includeInactiveBuilder_ == null) {
          result.includeInactive_ = includeInactive_;
        } else {
          result.includeInactive_ = includeInactiveBuilder_.build();
        }
        result.includeInactiveNull_ = includeInactiveNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasIncludeInactive()) {
          mergeIncludeInactive(other.getIncludeInactive());
        }
        if (other.getIncludeInactiveNull() != false) {
          setIncludeInactiveNull(other.getIncludeInactiveNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.BooleanValue includeInactive_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> includeInactiveBuilder_;
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public boolean hasIncludeInactive() {
        return includeInactiveBuilder_ != null || includeInactive_ != null;
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public io.dstore.values.BooleanValue getIncludeInactive() {
        if (includeInactiveBuilder_ == null) {
          return includeInactive_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : includeInactive_;
        } else {
          return includeInactiveBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public Builder setIncludeInactive(io.dstore.values.BooleanValue value) {
        if (includeInactiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includeInactive_ = value;
          onChanged();
        } else {
          includeInactiveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public Builder setIncludeInactive(
          io.dstore.values.BooleanValue.Builder builderForValue) {
        if (includeInactiveBuilder_ == null) {
          includeInactive_ = builderForValue.build();
          onChanged();
        } else {
          includeInactiveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public Builder mergeIncludeInactive(io.dstore.values.BooleanValue value) {
        if (includeInactiveBuilder_ == null) {
          if (includeInactive_ != null) {
            includeInactive_ =
              io.dstore.values.BooleanValue.newBuilder(includeInactive_).mergeFrom(value).buildPartial();
          } else {
            includeInactive_ = value;
          }
          onChanged();
        } else {
          includeInactiveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public Builder clearIncludeInactive() {
        if (includeInactiveBuilder_ == null) {
          includeInactive_ = null;
          onChanged();
        } else {
          includeInactive_ = null;
          includeInactiveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public io.dstore.values.BooleanValue.Builder getIncludeInactiveBuilder() {
        
        onChanged();
        return getIncludeInactiveFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getIncludeInactiveOrBuilder() {
        if (includeInactiveBuilder_ != null) {
          return includeInactiveBuilder_.getMessageOrBuilder();
        } else {
          return includeInactive_ == null ?
              io.dstore.values.BooleanValue.getDefaultInstance() : includeInactive_;
        }
      }
      /**
       * <code>.dstore.values.BooleanValue include_inactive = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
          getIncludeInactiveFieldBuilder() {
        if (includeInactiveBuilder_ == null) {
          includeInactiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                  getIncludeInactive(),
                  getParentForChildren(),
                  isClean());
          includeInactive_ = null;
        }
        return includeInactiveBuilder_;
      }

      private boolean includeInactiveNull_ ;
      /**
       * <code>bool include_inactive_null = 1001;</code>
       */
      public boolean getIncludeInactiveNull() {
        return includeInactiveNull_;
      }
      /**
       * <code>bool include_inactive_null = 1001;</code>
       */
      public Builder setIncludeInactiveNull(boolean value) {
        
        includeInactiveNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool include_inactive_null = 1001;</code>
       */
      public Builder clearIncludeInactiveNull() {
        
        includeInactiveNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetPageTreeNodes_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetPageTreeNodes_Ad.Parameters)
    private static final io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters();
    }

    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetPageTreeNodes_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetPageTreeNodes_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetPageTreeNodes_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      boolean hasNodeDescription();
      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      io.dstore.values.StringValue getNodeDescription();
      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      boolean hasActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      io.dstore.values.BooleanValue getActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getActiveOrBuilder();

      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      boolean hasTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      io.dstore.values.IntegerValue getTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      io.dstore.values.IntegerValue getNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      boolean hasDeleted();
      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      io.dstore.values.BooleanValue getDeleted();
      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getDeletedOrBuilder();

      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      boolean hasLevelId();
      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      io.dstore.values.IntegerValue getLevelId();
      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getLevelIdOrBuilder();

      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      boolean hasSymbolId();
      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      io.dstore.values.IntegerValue getSymbolId();
      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getSymbolIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetPageTreeNodes_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (deleted_ != null) {
                  subBuilder = deleted_.toBuilder();
                }
                deleted_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deleted_);
                  deleted_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (levelId_ != null) {
                  subBuilder = levelId_.toBuilder();
                }
                levelId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelId_);
                  levelId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (symbolId_ != null) {
                  subBuilder = symbolId_.toBuilder();
                }
                symbolId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(symbolId_);
                  symbolId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.values.StringValue nodeDescription_;
      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      public io.dstore.values.StringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der "Page"
       * </pre>
       *
       * <code>.dstore.values.StringValue node_description = 10001;</code>
       */
      public io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10002;
      private io.dstore.values.BooleanValue active_;
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      public io.dstore.values.BooleanValue getActive() {
        return active_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : active_;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue active = 10002;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10003;
      private io.dstore.values.IntegerValue treeNodeId_;
      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      public io.dstore.values.IntegerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <pre>
       * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10004;
      private io.dstore.values.IntegerValue nodeId_;
      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      public io.dstore.values.IntegerValue getNodeId() {
        return nodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
       * </pre>
       *
       * <code>.dstore.values.IntegerValue node_id = 10004;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int DELETED_FIELD_NUMBER = 10005;
      private io.dstore.values.BooleanValue deleted_;
      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      public boolean hasDeleted() {
        return deleted_ != null;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      public io.dstore.values.BooleanValue getDeleted() {
        return deleted_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : deleted_;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>.dstore.values.BooleanValue deleted = 10005;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getDeletedOrBuilder() {
        return getDeleted();
      }

      public static final int LEVEL_ID_FIELD_NUMBER = 10006;
      private io.dstore.values.IntegerValue levelId_;
      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      public boolean hasLevelId() {
        return levelId_ != null;
      }
      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      public io.dstore.values.IntegerValue getLevelId() {
        return levelId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : levelId_;
      }
      /**
       * <pre>
       * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue level_id = 10006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getLevelIdOrBuilder() {
        return getLevelId();
      }

      public static final int SYMBOL_ID_FIELD_NUMBER = 10007;
      private io.dstore.values.IntegerValue symbolId_;
      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      public boolean hasSymbolId() {
        return symbolId_ != null;
      }
      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      public io.dstore.values.IntegerValue getSymbolId() {
        return symbolId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : symbolId_;
      }
      /**
       * <pre>
       * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
       * </pre>
       *
       * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getSymbolIdOrBuilder() {
        return getSymbolId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10001, getNodeDescription());
        }
        if (active_ != null) {
          output.writeMessage(10002, getActive());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10003, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10004, getNodeId());
        }
        if (deleted_ != null) {
          output.writeMessage(10005, getDeleted());
        }
        if (levelId_ != null) {
          output.writeMessage(10006, getLevelId());
        }
        if (symbolId_ != null) {
          output.writeMessage(10007, getSymbolId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getNodeDescription());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getActive());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getNodeId());
        }
        if (deleted_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getDeleted());
        }
        if (levelId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getLevelId());
        }
        if (symbolId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getSymbolId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row other = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasNodeDescription() == other.hasNodeDescription());
        if (hasNodeDescription()) {
          result = result && getNodeDescription()
              .equals(other.getNodeDescription());
        }
        result = result && (hasActive() == other.hasActive());
        if (hasActive()) {
          result = result && getActive()
              .equals(other.getActive());
        }
        result = result && (hasTreeNodeId() == other.hasTreeNodeId());
        if (hasTreeNodeId()) {
          result = result && getTreeNodeId()
              .equals(other.getTreeNodeId());
        }
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && getNodeId()
              .equals(other.getNodeId());
        }
        result = result && (hasDeleted() == other.hasDeleted());
        if (hasDeleted()) {
          result = result && getDeleted()
              .equals(other.getDeleted());
        }
        result = result && (hasLevelId() == other.hasLevelId());
        if (hasLevelId()) {
          result = result && getLevelId()
              .equals(other.getLevelId());
        }
        result = result && (hasSymbolId() == other.hasSymbolId());
        if (hasSymbolId()) {
          result = result && getSymbolId()
              .equals(other.getSymbolId());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasNodeDescription()) {
          hash = (37 * hash) + NODE_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getNodeDescription().hashCode();
        }
        if (hasActive()) {
          hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + getActive().hashCode();
        }
        if (hasTreeNodeId()) {
          hash = (37 * hash) + TREE_NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTreeNodeId().hashCode();
        }
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId().hashCode();
        }
        if (hasDeleted()) {
          hash = (37 * hash) + DELETED_FIELD_NUMBER;
          hash = (53 * hash) + getDeleted().hashCode();
        }
        if (hasLevelId()) {
          hash = (37 * hash) + LEVEL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLevelId().hashCode();
        }
        if (hasSymbolId()) {
          hash = (37 * hash) + SYMBOL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSymbolId().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetPageTreeNodes_Ad.Response.Row)
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (deletedBuilder_ == null) {
            deleted_ = null;
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }
          if (levelIdBuilder_ == null) {
            levelId_ = null;
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }
          if (symbolIdBuilder_ == null) {
            symbolId_ = null;
          } else {
            symbolId_ = null;
            symbolIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row build() {
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row result = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (deletedBuilder_ == null) {
            result.deleted_ = deleted_;
          } else {
            result.deleted_ = deletedBuilder_.build();
          }
          if (levelIdBuilder_ == null) {
            result.levelId_ = levelId_;
          } else {
            result.levelId_ = levelIdBuilder_.build();
          }
          if (symbolIdBuilder_ == null) {
            result.symbolId_ = symbolId_;
          } else {
            result.symbolId_ = symbolIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasDeleted()) {
            mergeDeleted(other.getDeleted());
          }
          if (other.hasLevelId()) {
            mergeLevelId(other.getLevelId());
          }
          if (other.hasSymbolId()) {
            mergeSymbolId(other.getSymbolId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.StringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public io.dstore.values.StringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public Builder setNodeDescription(io.dstore.values.StringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public Builder setNodeDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public Builder mergeNodeDescription(io.dstore.values.StringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.values.StringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public io.dstore.values.StringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        public io.dstore.values.StringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der "Page"
         * </pre>
         *
         * <code>.dstore.values.StringValue node_description = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.values.BooleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> activeBuilder_;
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public io.dstore.values.BooleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public Builder setActive(io.dstore.values.BooleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public Builder setActive(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public Builder mergeActive(io.dstore.values.BooleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.values.BooleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public io.dstore.values.BooleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue active = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.values.IntegerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public io.dstore.values.IntegerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public Builder setTreeNodeId(io.dstore.values.IntegerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public Builder setTreeNodeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public Builder mergeTreeNodeId(io.dstore.values.IntegerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.values.IntegerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public io.dstore.values.IntegerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Elementes in "TreeView", das NICHT zum Artikelbaum gehört. Der Wert ist daher immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue tree_node_id = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.values.IntegerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> nodeIdBuilder_;
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public io.dstore.values.IntegerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public Builder setNodeId(io.dstore.values.IntegerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public Builder setNodeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public Builder mergeNodeId(io.dstore.values.IntegerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.values.IntegerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public io.dstore.values.IntegerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Elementes aus "dStore". Wert ist ebenfalls immer kleiner als "0"
         * </pre>
         *
         * <code>.dstore.values.IntegerValue node_id = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.values.BooleanValue deleted_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> deletedBuilder_;
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public boolean hasDeleted() {
          return deletedBuilder_ != null || deleted_ != null;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public io.dstore.values.BooleanValue getDeleted() {
          if (deletedBuilder_ == null) {
            return deleted_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : deleted_;
          } else {
            return deletedBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public Builder setDeleted(io.dstore.values.BooleanValue value) {
          if (deletedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deleted_ = value;
            onChanged();
          } else {
            deletedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public Builder setDeleted(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (deletedBuilder_ == null) {
            deleted_ = builderForValue.build();
            onChanged();
          } else {
            deletedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public Builder mergeDeleted(io.dstore.values.BooleanValue value) {
          if (deletedBuilder_ == null) {
            if (deleted_ != null) {
              deleted_ =
                io.dstore.values.BooleanValue.newBuilder(deleted_).mergeFrom(value).buildPartial();
            } else {
              deleted_ = value;
            }
            onChanged();
          } else {
            deletedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public Builder clearDeleted() {
          if (deletedBuilder_ == null) {
            deleted_ = null;
            onChanged();
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public io.dstore.values.BooleanValue.Builder getDeletedBuilder() {
          
          onChanged();
          return getDeletedFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getDeletedOrBuilder() {
          if (deletedBuilder_ != null) {
            return deletedBuilder_.getMessageOrBuilder();
          } else {
            return deleted_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : deleted_;
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" als gelöscht markiert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>.dstore.values.BooleanValue deleted = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getDeletedFieldBuilder() {
          if (deletedBuilder_ == null) {
            deletedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getDeleted(),
                    getParentForChildren(),
                    isClean());
            deleted_ = null;
          }
          return deletedBuilder_;
        }

        private io.dstore.values.IntegerValue levelId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> levelIdBuilder_;
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public boolean hasLevelId() {
          return levelIdBuilder_ != null || levelId_ != null;
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue getLevelId() {
          if (levelIdBuilder_ == null) {
            return levelId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : levelId_;
          } else {
            return levelIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public Builder setLevelId(io.dstore.values.IntegerValue value) {
          if (levelIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelId_ = value;
            onChanged();
          } else {
            levelIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public Builder setLevelId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (levelIdBuilder_ == null) {
            levelId_ = builderForValue.build();
            onChanged();
          } else {
            levelIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public Builder mergeLevelId(io.dstore.values.IntegerValue value) {
          if (levelIdBuilder_ == null) {
            if (levelId_ != null) {
              levelId_ =
                io.dstore.values.IntegerValue.newBuilder(levelId_).mergeFrom(value).buildPartial();
            } else {
              levelId_ = value;
            }
            onChanged();
          } else {
            levelIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public Builder clearLevelId() {
          if (levelIdBuilder_ == null) {
            levelId_ = null;
            onChanged();
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getLevelIdBuilder() {
          
          onChanged();
          return getLevelIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getLevelIdOrBuilder() {
          if (levelIdBuilder_ != null) {
            return levelIdBuilder_.getMessageOrBuilder();
          } else {
            return levelId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : levelId_;
          }
        }
        /**
         * <pre>
         * ID der Hierarchie; ist für "Page"s immer "0" (evtl. wird später aber auch hier eine Baumstruktur erlaubt sein)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue level_id = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getLevelIdFieldBuilder() {
          if (levelIdBuilder_ == null) {
            levelIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getLevelId(),
                    getParentForChildren(),
                    isClean());
            levelId_ = null;
          }
          return levelIdBuilder_;
        }

        private io.dstore.values.IntegerValue symbolId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> symbolIdBuilder_;
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public boolean hasSymbolId() {
          return symbolIdBuilder_ != null || symbolId_ != null;
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue getSymbolId() {
          if (symbolIdBuilder_ == null) {
            return symbolId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : symbolId_;
          } else {
            return symbolIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public Builder setSymbolId(io.dstore.values.IntegerValue value) {
          if (symbolIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            symbolId_ = value;
            onChanged();
          } else {
            symbolIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public Builder setSymbolId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (symbolIdBuilder_ == null) {
            symbolId_ = builderForValue.build();
            onChanged();
          } else {
            symbolIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public Builder mergeSymbolId(io.dstore.values.IntegerValue value) {
          if (symbolIdBuilder_ == null) {
            if (symbolId_ != null) {
              symbolId_ =
                io.dstore.values.IntegerValue.newBuilder(symbolId_).mergeFrom(value).buildPartial();
            } else {
              symbolId_ = value;
            }
            onChanged();
          } else {
            symbolIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public Builder clearSymbolId() {
          if (symbolIdBuilder_ == null) {
            symbolId_ = null;
            onChanged();
          } else {
            symbolId_ = null;
            symbolIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getSymbolIdBuilder() {
          
          onChanged();
          return getSymbolIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getSymbolIdOrBuilder() {
          if (symbolIdBuilder_ != null) {
            return symbolIdBuilder_.getMessageOrBuilder();
          } else {
            return symbolId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : symbolId_;
          }
        }
        /**
         * <pre>
         * ID eines Symbols, mit dem die Page "NodeID" dargestellt wird
         * </pre>
         *
         * <code>.dstore.values.IntegerValue symbol_id = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getSymbolIdFieldBuilder() {
          if (symbolIdBuilder_ == null) {
            symbolIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getSymbolId(),
                    getParentForChildren(),
                    isClean());
            symbolId_ = null;
          }
          return symbolIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetPageTreeNodes_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetPageTreeNodes_Ad.Response.Row)
      private static final io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response other = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetPageTreeNodes_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetPageTreeNodes_Ad.Response)
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.class, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response build() {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response buildPartial() {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response result = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response other) {
        if (other == io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetPageTreeNodes_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetPageTreeNodes_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetPageTreeNodes_Ad.Response)
    private static final io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response();
    }

    public static io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetPageTreeNodesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5dstore/engine/procedures/im_GetPageTre" +
      "eNodes_Ad.proto\022$dstore.engine.im_GetPag" +
      "eTreeNodes_Ad\032\023dstore/values.proto\032\032dsto" +
      "re/engine/engine.proto\"c\n\nParameters\0225\n\020" +
      "include_inactive\030\001 \001(\0132\033.dstore.values.B" +
      "ooleanValue\022\036\n\025include_inactive_null\030\351\007 " +
      "\001(\010\"\237\004\n\010Response\0228\n\020meta_information\030\002 \003" +
      "(\0132\036.dstore.engine.MetaInformation\022\'\n\007me" +
      "ssage\030\003 \003(\0132\026.dstore.engine.Message\022?\n\003r" +
      "ow\030\004 \003(\01322.dstore.engine.im_GetPageTreeN",
      "odes_Ad.Response.Row\032\356\002\n\003Row\022\017\n\006row_id\030\220" +
      "N \001(\005\0225\n\020node_description\030\221N \001(\0132\032.dstor" +
      "e.values.StringValue\022,\n\006active\030\222N \001(\0132\033." +
      "dstore.values.BooleanValue\0222\n\014tree_node_" +
      "id\030\223N \001(\0132\033.dstore.values.IntegerValue\022-" +
      "\n\007node_id\030\224N \001(\0132\033.dstore.values.Integer" +
      "Value\022-\n\007deleted\030\225N \001(\0132\033.dstore.values." +
      "BooleanValue\022.\n\010level_id\030\226N \001(\0132\033.dstore" +
      ".values.IntegerValue\022/\n\tsymbol_id\030\227N \001(\013" +
      "2\033.dstore.values.IntegerValueBW\n\033io.dsto",
      "re.engine.proceduresZ8gosdk.dstore.de/en" +
      "gine/procedures/im_GetPageTreeNodes_Adb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Parameters_descriptor,
        new java.lang.String[] { "IncludeInactive", "IncludeInactiveNull", });
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_GetPageTreeNodes_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "NodeDescription", "Active", "TreeNodeId", "NodeId", "Deleted", "LevelId", "SymbolId", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
