// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto

package io.dstore.engine.procedures;

public final class CoGetBinariesOfOneMemberAd {
  private CoGetBinariesOfOneMemberAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    boolean hasCommunityMemberId();
    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getCommunityMemberId();
    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCommunityMemberIdOrBuilder();

    /**
     * <code>optional bool community_member_id_null = 1001;</code>
     */
    boolean getCommunityMemberIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    boolean hasCommunityId();
    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getCommunityId();
    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCommunityIdOrBuilder();

    /**
     * <code>optional bool community_id_null = 1002;</code>
     */
    boolean getCommunityIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      communityMemberIdNull_ = false;
      communityIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (communityMemberId_ != null) {
                subBuilder = communityMemberId_.toBuilder();
              }
              communityMemberId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(communityMemberId_);
                communityMemberId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (communityId_ != null) {
                subBuilder = communityId_.toBuilder();
              }
              communityId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(communityId_);
                communityId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              communityMemberIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              communityIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.Builder.class);
    }

    public static final int COMMUNITY_MEMBER_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue communityMemberId_;
    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    public boolean hasCommunityMemberId() {
      return communityMemberId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getCommunityMemberId() {
      return communityMemberId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityMemberId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCommunityMemberIdOrBuilder() {
      return getCommunityMemberId();
    }

    public static final int COMMUNITY_MEMBER_ID_NULL_FIELD_NUMBER = 1001;
    private boolean communityMemberIdNull_;
    /**
     * <code>optional bool community_member_id_null = 1001;</code>
     */
    public boolean getCommunityMemberIdNull() {
      return communityMemberIdNull_;
    }

    public static final int COMMUNITY_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue communityId_;
    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    public boolean hasCommunityId() {
      return communityId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getCommunityId() {
      return communityId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCommunityIdOrBuilder() {
      return getCommunityId();
    }

    public static final int COMMUNITY_ID_NULL_FIELD_NUMBER = 1002;
    private boolean communityIdNull_;
    /**
     * <code>optional bool community_id_null = 1002;</code>
     */
    public boolean getCommunityIdNull() {
      return communityIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (communityMemberId_ != null) {
        output.writeMessage(1, getCommunityMemberId());
      }
      if (communityId_ != null) {
        output.writeMessage(2, getCommunityId());
      }
      if (communityMemberIdNull_ != false) {
        output.writeBool(1001, communityMemberIdNull_);
      }
      if (communityIdNull_ != false) {
        output.writeBool(1002, communityIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (communityMemberId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCommunityMemberId());
      }
      if (communityId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCommunityId());
      }
      if (communityMemberIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, communityMemberIdNull_);
      }
      if (communityIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, communityIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = null;
        } else {
          communityMemberId_ = null;
          communityMemberIdBuilder_ = null;
        }
        communityMemberIdNull_ = false;

        if (communityIdBuilder_ == null) {
          communityId_ = null;
        } else {
          communityId_ = null;
          communityIdBuilder_ = null;
        }
        communityIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters build() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters buildPartial() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters(this);
        if (communityMemberIdBuilder_ == null) {
          result.communityMemberId_ = communityMemberId_;
        } else {
          result.communityMemberId_ = communityMemberIdBuilder_.build();
        }
        result.communityMemberIdNull_ = communityMemberIdNull_;
        if (communityIdBuilder_ == null) {
          result.communityId_ = communityId_;
        } else {
          result.communityId_ = communityIdBuilder_.build();
        }
        result.communityIdNull_ = communityIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters other) {
        if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.getDefaultInstance()) return this;
        if (other.hasCommunityMemberId()) {
          mergeCommunityMemberId(other.getCommunityMemberId());
        }
        if (other.getCommunityMemberIdNull() != false) {
          setCommunityMemberIdNull(other.getCommunityMemberIdNull());
        }
        if (other.hasCommunityId()) {
          mergeCommunityId(other.getCommunityId());
        }
        if (other.getCommunityIdNull() != false) {
          setCommunityIdNull(other.getCommunityIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue communityMemberId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> communityMemberIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public boolean hasCommunityMemberId() {
        return communityMemberIdBuilder_ != null || communityMemberId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getCommunityMemberId() {
        if (communityMemberIdBuilder_ == null) {
          return communityMemberId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityMemberId_;
        } else {
          return communityMemberIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public Builder setCommunityMemberId(io.dstore.engine.Values.integerValue value) {
        if (communityMemberIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          communityMemberId_ = value;
          onChanged();
        } else {
          communityMemberIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public Builder setCommunityMemberId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = builderForValue.build();
          onChanged();
        } else {
          communityMemberIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public Builder mergeCommunityMemberId(io.dstore.engine.Values.integerValue value) {
        if (communityMemberIdBuilder_ == null) {
          if (communityMemberId_ != null) {
            communityMemberId_ =
              io.dstore.engine.Values.integerValue.newBuilder(communityMemberId_).mergeFrom(value).buildPartial();
          } else {
            communityMemberId_ = value;
          }
          onChanged();
        } else {
          communityMemberIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public Builder clearCommunityMemberId() {
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = null;
          onChanged();
        } else {
          communityMemberId_ = null;
          communityMemberIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCommunityMemberIdBuilder() {
        
        onChanged();
        return getCommunityMemberIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCommunityMemberIdOrBuilder() {
        if (communityMemberIdBuilder_ != null) {
          return communityMemberIdBuilder_.getMessageOrBuilder();
        } else {
          return communityMemberId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : communityMemberId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_member_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCommunityMemberIdFieldBuilder() {
        if (communityMemberIdBuilder_ == null) {
          communityMemberIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCommunityMemberId(),
                  getParentForChildren(),
                  isClean());
          communityMemberId_ = null;
        }
        return communityMemberIdBuilder_;
      }

      private boolean communityMemberIdNull_ ;
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public boolean getCommunityMemberIdNull() {
        return communityMemberIdNull_;
      }
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public Builder setCommunityMemberIdNull(boolean value) {
        
        communityMemberIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public Builder clearCommunityMemberIdNull() {
        
        communityMemberIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue communityId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> communityIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public boolean hasCommunityId() {
        return communityIdBuilder_ != null || communityId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getCommunityId() {
        if (communityIdBuilder_ == null) {
          return communityId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityId_;
        } else {
          return communityIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public Builder setCommunityId(io.dstore.engine.Values.integerValue value) {
        if (communityIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          communityId_ = value;
          onChanged();
        } else {
          communityIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public Builder setCommunityId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (communityIdBuilder_ == null) {
          communityId_ = builderForValue.build();
          onChanged();
        } else {
          communityIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public Builder mergeCommunityId(io.dstore.engine.Values.integerValue value) {
        if (communityIdBuilder_ == null) {
          if (communityId_ != null) {
            communityId_ =
              io.dstore.engine.Values.integerValue.newBuilder(communityId_).mergeFrom(value).buildPartial();
          } else {
            communityId_ = value;
          }
          onChanged();
        } else {
          communityIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public Builder clearCommunityId() {
        if (communityIdBuilder_ == null) {
          communityId_ = null;
          onChanged();
        } else {
          communityId_ = null;
          communityIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCommunityIdBuilder() {
        
        onChanged();
        return getCommunityIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCommunityIdOrBuilder() {
        if (communityIdBuilder_ != null) {
          return communityIdBuilder_.getMessageOrBuilder();
        } else {
          return communityId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : communityId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCommunityIdFieldBuilder() {
        if (communityIdBuilder_ == null) {
          communityIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCommunityId(),
                  getParentForChildren(),
                  isClean());
          communityId_ = null;
        }
        return communityIdBuilder_;
      }

      private boolean communityIdNull_ ;
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public boolean getCommunityIdNull() {
        return communityIdNull_;
      }
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public Builder setCommunityIdNull(boolean value) {
        
        communityIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public Builder clearCommunityIdNull() {
        
        communityIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
    private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters();
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      boolean hasBinaryId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBinaryId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBinaryIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      boolean hasBinaryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getBinaryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getBinaryDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      boolean hasInputDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getInputDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      boolean hasContentType();
      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getContentType();
      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getContentTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      boolean hasFileDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getFileDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getFileDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      boolean hasFilesizeInKB();
      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getFilesizeInKB();
      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getFilesizeInKBOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      boolean hasCommunityBinaryCategory();
      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCommunityBinaryCategory();
      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCommunityBinaryCategoryOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      boolean hasCommunityBinaryCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCommunityBinaryCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      boolean hasQuotedFileSizeInKB();
      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getQuotedFileSizeInKB();
      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getQuotedFileSizeInKBOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      boolean hasFileDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFileDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFileDateAndTimeCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      boolean hasMD5Hash();
      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      io.dstore.engine.Values.stringValue getMD5Hash();
      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getMD5HashOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      boolean hasInputDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getInputDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (binaryId_ != null) {
                  subBuilder = binaryId_.toBuilder();
                }
                binaryId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryId_);
                  binaryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (binaryDescription_ != null) {
                  subBuilder = binaryDescription_.toBuilder();
                }
                binaryDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryDescription_);
                  binaryDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (inputDateAndTime_ != null) {
                  subBuilder = inputDateAndTime_.toBuilder();
                }
                inputDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTime_);
                  inputDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (contentType_ != null) {
                  subBuilder = contentType_.toBuilder();
                }
                contentType_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(contentType_);
                  contentType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (fileDateAndTime_ != null) {
                  subBuilder = fileDateAndTime_.toBuilder();
                }
                fileDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fileDateAndTime_);
                  fileDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (filesizeInKB_ != null) {
                  subBuilder = filesizeInKB_.toBuilder();
                }
                filesizeInKB_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(filesizeInKB_);
                  filesizeInKB_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (communityBinaryCategory_ != null) {
                  subBuilder = communityBinaryCategory_.toBuilder();
                }
                communityBinaryCategory_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(communityBinaryCategory_);
                  communityBinaryCategory_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (communityBinaryCategoryId_ != null) {
                  subBuilder = communityBinaryCategoryId_.toBuilder();
                }
                communityBinaryCategoryId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(communityBinaryCategoryId_);
                  communityBinaryCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (quotedFileSizeInKB_ != null) {
                  subBuilder = quotedFileSizeInKB_.toBuilder();
                }
                quotedFileSizeInKB_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quotedFileSizeInKB_);
                  quotedFileSizeInKB_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (fileDateAndTimeChar_ != null) {
                  subBuilder = fileDateAndTimeChar_.toBuilder();
                }
                fileDateAndTimeChar_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fileDateAndTimeChar_);
                  fileDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (mD5Hash_ != null) {
                  subBuilder = mD5Hash_.toBuilder();
                }
                mD5Hash_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mD5Hash_);
                  mD5Hash_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (inputDateAndTimeChar_ != null) {
                  subBuilder = inputDateAndTimeChar_.toBuilder();
                }
                inputDateAndTimeChar_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTimeChar_);
                  inputDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int BINARY_ID_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue binaryId_;
      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      public boolean hasBinaryId() {
        return binaryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBinaryId() {
        return binaryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
       *
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBinaryIdOrBuilder() {
        return getBinaryId();
      }

      public static final int BINARY_DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue binaryDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      public boolean hasBinaryDescription() {
        return binaryDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getBinaryDescription() {
        return binaryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : binaryDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
       *
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBinaryDescriptionOrBuilder() {
        return getBinaryDescription();
      }

      public static final int INPUT_DATE_AND_TIME_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.timestampValue inputDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      public boolean hasInputDateAndTime() {
        return inputDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getInputDateAndTime() {
        return inputDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
       *
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder() {
        return getInputDateAndTime();
      }

      public static final int CONTENT_TYPE_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue contentType_;
      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      public boolean hasContentType() {
        return contentType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getContentType() {
        return contentType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : contentType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
       *
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getContentTypeOrBuilder() {
        return getContentType();
      }

      public static final int FILE_DATE_AND_TIME_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.timestampValue fileDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public boolean hasFileDateAndTime() {
        return fileDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getFileDateAndTime() {
        return fileDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fileDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
       *
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFileDateAndTimeOrBuilder() {
        return getFileDateAndTime();
      }

      public static final int FILESIZE_IN_K_B_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue filesizeInKB_;
      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      public boolean hasFilesizeInKB() {
        return filesizeInKB_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getFilesizeInKB() {
        return filesizeInKB_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : filesizeInKB_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
       *
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getFilesizeInKBOrBuilder() {
        return getFilesizeInKB();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int COMMUNITY_BINARY_CATEGORY_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.stringValue communityBinaryCategory_;
      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public boolean hasCommunityBinaryCategory() {
        return communityBinaryCategory_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCommunityBinaryCategory() {
        return communityBinaryCategory_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : communityBinaryCategory_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCommunityBinaryCategoryOrBuilder() {
        return getCommunityBinaryCategory();
      }

      public static final int COMMUNITY_BINARY_CATEGORY_ID_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue communityBinaryCategoryId_;
      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      public boolean hasCommunityBinaryCategoryId() {
        return communityBinaryCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCommunityBinaryCategoryId() {
        return communityBinaryCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityBinaryCategoryId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
       *
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder() {
        return getCommunityBinaryCategoryId();
      }

      public static final int QUOTED_FILE_SIZE_IN_K_B_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.integerValue quotedFileSizeInKB_;
      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      public boolean hasQuotedFileSizeInKB() {
        return quotedFileSizeInKB_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getQuotedFileSizeInKB() {
        return quotedFileSizeInKB_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quotedFileSizeInKB_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
       *
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getQuotedFileSizeInKBOrBuilder() {
        return getQuotedFileSizeInKB();
      }

      public static final int FILE_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.stringValue fileDateAndTimeChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public boolean hasFileDateAndTimeChar() {
        return fileDateAndTimeChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFileDateAndTimeChar() {
        return fileDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fileDateAndTimeChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
       *
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFileDateAndTimeCharOrBuilder() {
        return getFileDateAndTimeChar();
      }

      public static final int M_D5_HASH_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.stringValue mD5Hash_;
      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public boolean hasMD5Hash() {
        return mD5Hash_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getMD5Hash() {
        return mD5Hash_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : mD5Hash_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
       *
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getMD5HashOrBuilder() {
        return getMD5Hash();
      }

      public static final int INPUT_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.stringValue inputDateAndTimeChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public boolean hasInputDateAndTimeChar() {
        return inputDateAndTimeChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getInputDateAndTimeChar() {
        return inputDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
        return getInputDateAndTimeChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (binaryId_ != null) {
          output.writeMessage(10001, getBinaryId());
        }
        if (binaryDescription_ != null) {
          output.writeMessage(10002, getBinaryDescription());
        }
        if (inputDateAndTime_ != null) {
          output.writeMessage(10003, getInputDateAndTime());
        }
        if (contentType_ != null) {
          output.writeMessage(10004, getContentType());
        }
        if (fileDateAndTime_ != null) {
          output.writeMessage(10005, getFileDateAndTime());
        }
        if (filesizeInKB_ != null) {
          output.writeMessage(10006, getFilesizeInKB());
        }
        if (sortNo_ != null) {
          output.writeMessage(10007, getSortNo());
        }
        if (communityBinaryCategory_ != null) {
          output.writeMessage(10008, getCommunityBinaryCategory());
        }
        if (communityBinaryCategoryId_ != null) {
          output.writeMessage(10009, getCommunityBinaryCategoryId());
        }
        if (quotedFileSizeInKB_ != null) {
          output.writeMessage(10010, getQuotedFileSizeInKB());
        }
        if (fileDateAndTimeChar_ != null) {
          output.writeMessage(10011, getFileDateAndTimeChar());
        }
        if (mD5Hash_ != null) {
          output.writeMessage(10012, getMD5Hash());
        }
        if (inputDateAndTimeChar_ != null) {
          output.writeMessage(10013, getInputDateAndTimeChar());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (binaryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getBinaryId());
        }
        if (binaryDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getBinaryDescription());
        }
        if (inputDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getInputDateAndTime());
        }
        if (contentType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getContentType());
        }
        if (fileDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getFileDateAndTime());
        }
        if (filesizeInKB_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getFilesizeInKB());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getSortNo());
        }
        if (communityBinaryCategory_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getCommunityBinaryCategory());
        }
        if (communityBinaryCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getCommunityBinaryCategoryId());
        }
        if (quotedFileSizeInKB_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getQuotedFileSizeInKB());
        }
        if (fileDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFileDateAndTimeChar());
        }
        if (mD5Hash_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getMD5Hash());
        }
        if (inputDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getInputDateAndTimeChar());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (binaryIdBuilder_ == null) {
            binaryId_ = null;
          } else {
            binaryId_ = null;
            binaryIdBuilder_ = null;
          }
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = null;
          } else {
            binaryDescription_ = null;
            binaryDescriptionBuilder_ = null;
          }
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }
          if (contentTypeBuilder_ == null) {
            contentType_ = null;
          } else {
            contentType_ = null;
            contentTypeBuilder_ = null;
          }
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = null;
          } else {
            fileDateAndTime_ = null;
            fileDateAndTimeBuilder_ = null;
          }
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = null;
          } else {
            filesizeInKB_ = null;
            filesizeInKBBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = null;
          } else {
            communityBinaryCategory_ = null;
            communityBinaryCategoryBuilder_ = null;
          }
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = null;
          } else {
            communityBinaryCategoryId_ = null;
            communityBinaryCategoryIdBuilder_ = null;
          }
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = null;
          } else {
            quotedFileSizeInKB_ = null;
            quotedFileSizeInKBBuilder_ = null;
          }
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = null;
          } else {
            fileDateAndTimeChar_ = null;
            fileDateAndTimeCharBuilder_ = null;
          }
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = null;
          } else {
            mD5Hash_ = null;
            mD5HashBuilder_ = null;
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row build() {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (binaryIdBuilder_ == null) {
            result.binaryId_ = binaryId_;
          } else {
            result.binaryId_ = binaryIdBuilder_.build();
          }
          if (binaryDescriptionBuilder_ == null) {
            result.binaryDescription_ = binaryDescription_;
          } else {
            result.binaryDescription_ = binaryDescriptionBuilder_.build();
          }
          if (inputDateAndTimeBuilder_ == null) {
            result.inputDateAndTime_ = inputDateAndTime_;
          } else {
            result.inputDateAndTime_ = inputDateAndTimeBuilder_.build();
          }
          if (contentTypeBuilder_ == null) {
            result.contentType_ = contentType_;
          } else {
            result.contentType_ = contentTypeBuilder_.build();
          }
          if (fileDateAndTimeBuilder_ == null) {
            result.fileDateAndTime_ = fileDateAndTime_;
          } else {
            result.fileDateAndTime_ = fileDateAndTimeBuilder_.build();
          }
          if (filesizeInKBBuilder_ == null) {
            result.filesizeInKB_ = filesizeInKB_;
          } else {
            result.filesizeInKB_ = filesizeInKBBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (communityBinaryCategoryBuilder_ == null) {
            result.communityBinaryCategory_ = communityBinaryCategory_;
          } else {
            result.communityBinaryCategory_ = communityBinaryCategoryBuilder_.build();
          }
          if (communityBinaryCategoryIdBuilder_ == null) {
            result.communityBinaryCategoryId_ = communityBinaryCategoryId_;
          } else {
            result.communityBinaryCategoryId_ = communityBinaryCategoryIdBuilder_.build();
          }
          if (quotedFileSizeInKBBuilder_ == null) {
            result.quotedFileSizeInKB_ = quotedFileSizeInKB_;
          } else {
            result.quotedFileSizeInKB_ = quotedFileSizeInKBBuilder_.build();
          }
          if (fileDateAndTimeCharBuilder_ == null) {
            result.fileDateAndTimeChar_ = fileDateAndTimeChar_;
          } else {
            result.fileDateAndTimeChar_ = fileDateAndTimeCharBuilder_.build();
          }
          if (mD5HashBuilder_ == null) {
            result.mD5Hash_ = mD5Hash_;
          } else {
            result.mD5Hash_ = mD5HashBuilder_.build();
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            result.inputDateAndTimeChar_ = inputDateAndTimeChar_;
          } else {
            result.inputDateAndTimeChar_ = inputDateAndTimeCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasBinaryId()) {
            mergeBinaryId(other.getBinaryId());
          }
          if (other.hasBinaryDescription()) {
            mergeBinaryDescription(other.getBinaryDescription());
          }
          if (other.hasInputDateAndTime()) {
            mergeInputDateAndTime(other.getInputDateAndTime());
          }
          if (other.hasContentType()) {
            mergeContentType(other.getContentType());
          }
          if (other.hasFileDateAndTime()) {
            mergeFileDateAndTime(other.getFileDateAndTime());
          }
          if (other.hasFilesizeInKB()) {
            mergeFilesizeInKB(other.getFilesizeInKB());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasCommunityBinaryCategory()) {
            mergeCommunityBinaryCategory(other.getCommunityBinaryCategory());
          }
          if (other.hasCommunityBinaryCategoryId()) {
            mergeCommunityBinaryCategoryId(other.getCommunityBinaryCategoryId());
          }
          if (other.hasQuotedFileSizeInKB()) {
            mergeQuotedFileSizeInKB(other.getQuotedFileSizeInKB());
          }
          if (other.hasFileDateAndTimeChar()) {
            mergeFileDateAndTimeChar(other.getFileDateAndTimeChar());
          }
          if (other.hasMD5Hash()) {
            mergeMD5Hash(other.getMD5Hash());
          }
          if (other.hasInputDateAndTimeChar()) {
            mergeInputDateAndTimeChar(other.getInputDateAndTimeChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue binaryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> binaryIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public boolean hasBinaryId() {
          return binaryIdBuilder_ != null || binaryId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBinaryId() {
          if (binaryIdBuilder_ == null) {
            return binaryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryId_;
          } else {
            return binaryIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public Builder setBinaryId(io.dstore.engine.Values.integerValue value) {
          if (binaryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryId_ = value;
            onChanged();
          } else {
            binaryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public Builder setBinaryId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (binaryIdBuilder_ == null) {
            binaryId_ = builderForValue.build();
            onChanged();
          } else {
            binaryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public Builder mergeBinaryId(io.dstore.engine.Values.integerValue value) {
          if (binaryIdBuilder_ == null) {
            if (binaryId_ != null) {
              binaryId_ =
                io.dstore.engine.Values.integerValue.newBuilder(binaryId_).mergeFrom(value).buildPartial();
            } else {
              binaryId_ = value;
            }
            onChanged();
          } else {
            binaryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public Builder clearBinaryId() {
          if (binaryIdBuilder_ == null) {
            binaryId_ = null;
            onChanged();
          } else {
            binaryId_ = null;
            binaryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBinaryIdBuilder() {
          
          onChanged();
          return getBinaryIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBinaryIdOrBuilder() {
          if (binaryIdBuilder_ != null) {
            return binaryIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_id = 10001;</code>
         *
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBinaryIdFieldBuilder() {
          if (binaryIdBuilder_ == null) {
            binaryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBinaryId(),
                    getParentForChildren(),
                    isClean());
            binaryId_ = null;
          }
          return binaryIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue binaryDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> binaryDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public boolean hasBinaryDescription() {
          return binaryDescriptionBuilder_ != null || binaryDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getBinaryDescription() {
          if (binaryDescriptionBuilder_ == null) {
            return binaryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : binaryDescription_;
          } else {
            return binaryDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public Builder setBinaryDescription(io.dstore.engine.Values.stringValue value) {
          if (binaryDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryDescription_ = value;
            onChanged();
          } else {
            binaryDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public Builder setBinaryDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = builderForValue.build();
            onChanged();
          } else {
            binaryDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public Builder mergeBinaryDescription(io.dstore.engine.Values.stringValue value) {
          if (binaryDescriptionBuilder_ == null) {
            if (binaryDescription_ != null) {
              binaryDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(binaryDescription_).mergeFrom(value).buildPartial();
            } else {
              binaryDescription_ = value;
            }
            onChanged();
          } else {
            binaryDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public Builder clearBinaryDescription() {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = null;
            onChanged();
          } else {
            binaryDescription_ = null;
            binaryDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getBinaryDescriptionBuilder() {
          
          onChanged();
          return getBinaryDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getBinaryDescriptionOrBuilder() {
          if (binaryDescriptionBuilder_ != null) {
            return binaryDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return binaryDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : binaryDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue binary_description = 10002;</code>
         *
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getBinaryDescriptionFieldBuilder() {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getBinaryDescription(),
                    getParentForChildren(),
                    isClean());
            binaryDescription_ = null;
          }
          return binaryDescriptionBuilder_;
        }

        private io.dstore.engine.Values.timestampValue inputDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> inputDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public boolean hasInputDateAndTime() {
          return inputDateAndTimeBuilder_ != null || inputDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            return inputDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
          } else {
            return inputDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public Builder setInputDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTime_ = value;
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public Builder setInputDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public Builder mergeInputDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (inputDateAndTime_ != null) {
              inputDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(inputDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTime_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public Builder clearInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
            onChanged();
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getInputDateAndTimeBuilder() {
          
          onChanged();
          return getInputDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder() {
          if (inputDateAndTimeBuilder_ != null) {
            return inputDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10003;</code>
         *
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getInputDateAndTimeFieldBuilder() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getInputDateAndTime(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTime_ = null;
          }
          return inputDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.stringValue contentType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> contentTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public boolean hasContentType() {
          return contentTypeBuilder_ != null || contentType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getContentType() {
          if (contentTypeBuilder_ == null) {
            return contentType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : contentType_;
          } else {
            return contentTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public Builder setContentType(io.dstore.engine.Values.stringValue value) {
          if (contentTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            contentType_ = value;
            onChanged();
          } else {
            contentTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public Builder setContentType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (contentTypeBuilder_ == null) {
            contentType_ = builderForValue.build();
            onChanged();
          } else {
            contentTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public Builder mergeContentType(io.dstore.engine.Values.stringValue value) {
          if (contentTypeBuilder_ == null) {
            if (contentType_ != null) {
              contentType_ =
                io.dstore.engine.Values.stringValue.newBuilder(contentType_).mergeFrom(value).buildPartial();
            } else {
              contentType_ = value;
            }
            onChanged();
          } else {
            contentTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public Builder clearContentType() {
          if (contentTypeBuilder_ == null) {
            contentType_ = null;
            onChanged();
          } else {
            contentType_ = null;
            contentTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getContentTypeBuilder() {
          
          onChanged();
          return getContentTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getContentTypeOrBuilder() {
          if (contentTypeBuilder_ != null) {
            return contentTypeBuilder_.getMessageOrBuilder();
          } else {
            return contentType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : contentType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue content_type = 10004;</code>
         *
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getContentTypeFieldBuilder() {
          if (contentTypeBuilder_ == null) {
            contentTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getContentType(),
                    getParentForChildren(),
                    isClean());
            contentType_ = null;
          }
          return contentTypeBuilder_;
        }

        private io.dstore.engine.Values.timestampValue fileDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fileDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public boolean hasFileDateAndTime() {
          return fileDateAndTimeBuilder_ != null || fileDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getFileDateAndTime() {
          if (fileDateAndTimeBuilder_ == null) {
            return fileDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fileDateAndTime_;
          } else {
            return fileDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder setFileDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (fileDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fileDateAndTime_ = value;
            onChanged();
          } else {
            fileDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder setFileDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            fileDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder mergeFileDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (fileDateAndTimeBuilder_ == null) {
            if (fileDateAndTime_ != null) {
              fileDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(fileDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              fileDateAndTime_ = value;
            }
            onChanged();
          } else {
            fileDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder clearFileDateAndTime() {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = null;
            onChanged();
          } else {
            fileDateAndTime_ = null;
            fileDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getFileDateAndTimeBuilder() {
          
          onChanged();
          return getFileDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getFileDateAndTimeOrBuilder() {
          if (fileDateAndTimeBuilder_ != null) {
            return fileDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return fileDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : fileDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue file_date_and_time = 10005;</code>
         *
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getFileDateAndTimeFieldBuilder() {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getFileDateAndTime(),
                    getParentForChildren(),
                    isClean());
            fileDateAndTime_ = null;
          }
          return fileDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.integerValue filesizeInKB_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> filesizeInKBBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public boolean hasFilesizeInKB() {
          return filesizeInKBBuilder_ != null || filesizeInKB_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getFilesizeInKB() {
          if (filesizeInKBBuilder_ == null) {
            return filesizeInKB_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : filesizeInKB_;
          } else {
            return filesizeInKBBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public Builder setFilesizeInKB(io.dstore.engine.Values.integerValue value) {
          if (filesizeInKBBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            filesizeInKB_ = value;
            onChanged();
          } else {
            filesizeInKBBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public Builder setFilesizeInKB(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = builderForValue.build();
            onChanged();
          } else {
            filesizeInKBBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public Builder mergeFilesizeInKB(io.dstore.engine.Values.integerValue value) {
          if (filesizeInKBBuilder_ == null) {
            if (filesizeInKB_ != null) {
              filesizeInKB_ =
                io.dstore.engine.Values.integerValue.newBuilder(filesizeInKB_).mergeFrom(value).buildPartial();
            } else {
              filesizeInKB_ = value;
            }
            onChanged();
          } else {
            filesizeInKBBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public Builder clearFilesizeInKB() {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = null;
            onChanged();
          } else {
            filesizeInKB_ = null;
            filesizeInKBBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getFilesizeInKBBuilder() {
          
          onChanged();
          return getFilesizeInKBFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getFilesizeInKBOrBuilder() {
          if (filesizeInKBBuilder_ != null) {
            return filesizeInKBBuilder_.getMessageOrBuilder();
          } else {
            return filesizeInKB_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : filesizeInKB_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue filesize_in_k_b = 10006;</code>
         *
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getFilesizeInKBFieldBuilder() {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKBBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getFilesizeInKB(),
                    getParentForChildren(),
                    isClean());
            filesizeInKB_ = null;
          }
          return filesizeInKBBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10007;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.stringValue communityBinaryCategory_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> communityBinaryCategoryBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public boolean hasCommunityBinaryCategory() {
          return communityBinaryCategoryBuilder_ != null || communityBinaryCategory_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCommunityBinaryCategory() {
          if (communityBinaryCategoryBuilder_ == null) {
            return communityBinaryCategory_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : communityBinaryCategory_;
          } else {
            return communityBinaryCategoryBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder setCommunityBinaryCategory(io.dstore.engine.Values.stringValue value) {
          if (communityBinaryCategoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            communityBinaryCategory_ = value;
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder setCommunityBinaryCategory(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = builderForValue.build();
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder mergeCommunityBinaryCategory(io.dstore.engine.Values.stringValue value) {
          if (communityBinaryCategoryBuilder_ == null) {
            if (communityBinaryCategory_ != null) {
              communityBinaryCategory_ =
                io.dstore.engine.Values.stringValue.newBuilder(communityBinaryCategory_).mergeFrom(value).buildPartial();
            } else {
              communityBinaryCategory_ = value;
            }
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public Builder clearCommunityBinaryCategory() {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = null;
            onChanged();
          } else {
            communityBinaryCategory_ = null;
            communityBinaryCategoryBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCommunityBinaryCategoryBuilder() {
          
          onChanged();
          return getCommunityBinaryCategoryFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCommunityBinaryCategoryOrBuilder() {
          if (communityBinaryCategoryBuilder_ != null) {
            return communityBinaryCategoryBuilder_.getMessageOrBuilder();
          } else {
            return communityBinaryCategory_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : communityBinaryCategory_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue community_binary_category = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCommunityBinaryCategoryFieldBuilder() {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCommunityBinaryCategory(),
                    getParentForChildren(),
                    isClean());
            communityBinaryCategory_ = null;
          }
          return communityBinaryCategoryBuilder_;
        }

        private io.dstore.engine.Values.integerValue communityBinaryCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> communityBinaryCategoryIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public boolean hasCommunityBinaryCategoryId() {
          return communityBinaryCategoryIdBuilder_ != null || communityBinaryCategoryId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCommunityBinaryCategoryId() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            return communityBinaryCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : communityBinaryCategoryId_;
          } else {
            return communityBinaryCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public Builder setCommunityBinaryCategoryId(io.dstore.engine.Values.integerValue value) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            communityBinaryCategoryId_ = value;
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public Builder setCommunityBinaryCategoryId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public Builder mergeCommunityBinaryCategoryId(io.dstore.engine.Values.integerValue value) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            if (communityBinaryCategoryId_ != null) {
              communityBinaryCategoryId_ =
                io.dstore.engine.Values.integerValue.newBuilder(communityBinaryCategoryId_).mergeFrom(value).buildPartial();
            } else {
              communityBinaryCategoryId_ = value;
            }
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public Builder clearCommunityBinaryCategoryId() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = null;
            onChanged();
          } else {
            communityBinaryCategoryId_ = null;
            communityBinaryCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCommunityBinaryCategoryIdBuilder() {
          
          onChanged();
          return getCommunityBinaryCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder() {
          if (communityBinaryCategoryIdBuilder_ != null) {
            return communityBinaryCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return communityBinaryCategoryId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : communityBinaryCategoryId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue community_binary_category_id = 10009;</code>
         *
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCommunityBinaryCategoryIdFieldBuilder() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCommunityBinaryCategoryId(),
                    getParentForChildren(),
                    isClean());
            communityBinaryCategoryId_ = null;
          }
          return communityBinaryCategoryIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue quotedFileSizeInKB_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> quotedFileSizeInKBBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public boolean hasQuotedFileSizeInKB() {
          return quotedFileSizeInKBBuilder_ != null || quotedFileSizeInKB_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getQuotedFileSizeInKB() {
          if (quotedFileSizeInKBBuilder_ == null) {
            return quotedFileSizeInKB_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quotedFileSizeInKB_;
          } else {
            return quotedFileSizeInKBBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public Builder setQuotedFileSizeInKB(io.dstore.engine.Values.integerValue value) {
          if (quotedFileSizeInKBBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quotedFileSizeInKB_ = value;
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public Builder setQuotedFileSizeInKB(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = builderForValue.build();
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public Builder mergeQuotedFileSizeInKB(io.dstore.engine.Values.integerValue value) {
          if (quotedFileSizeInKBBuilder_ == null) {
            if (quotedFileSizeInKB_ != null) {
              quotedFileSizeInKB_ =
                io.dstore.engine.Values.integerValue.newBuilder(quotedFileSizeInKB_).mergeFrom(value).buildPartial();
            } else {
              quotedFileSizeInKB_ = value;
            }
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public Builder clearQuotedFileSizeInKB() {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = null;
            onChanged();
          } else {
            quotedFileSizeInKB_ = null;
            quotedFileSizeInKBBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getQuotedFileSizeInKBBuilder() {
          
          onChanged();
          return getQuotedFileSizeInKBFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getQuotedFileSizeInKBOrBuilder() {
          if (quotedFileSizeInKBBuilder_ != null) {
            return quotedFileSizeInKBBuilder_.getMessageOrBuilder();
          } else {
            return quotedFileSizeInKB_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : quotedFileSizeInKB_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quoted_file_size_in_k_b = 10010;</code>
         *
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getQuotedFileSizeInKBFieldBuilder() {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKBBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getQuotedFileSizeInKB(),
                    getParentForChildren(),
                    isClean());
            quotedFileSizeInKB_ = null;
          }
          return quotedFileSizeInKBBuilder_;
        }

        private io.dstore.engine.Values.stringValue fileDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> fileDateAndTimeCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public boolean hasFileDateAndTimeChar() {
          return fileDateAndTimeCharBuilder_ != null || fileDateAndTimeChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFileDateAndTimeChar() {
          if (fileDateAndTimeCharBuilder_ == null) {
            return fileDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fileDateAndTimeChar_;
          } else {
            return fileDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder setFileDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (fileDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fileDateAndTimeChar_ = value;
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder setFileDateAndTimeChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder mergeFileDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (fileDateAndTimeCharBuilder_ == null) {
            if (fileDateAndTimeChar_ != null) {
              fileDateAndTimeChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(fileDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              fileDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder clearFileDateAndTimeChar() {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = null;
            onChanged();
          } else {
            fileDateAndTimeChar_ = null;
            fileDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFileDateAndTimeCharBuilder() {
          
          onChanged();
          return getFileDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFileDateAndTimeCharOrBuilder() {
          if (fileDateAndTimeCharBuilder_ != null) {
            return fileDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return fileDateAndTimeChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : fileDateAndTimeChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue file_date_and_time_char = 10011;</code>
         *
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFileDateAndTimeCharFieldBuilder() {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFileDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            fileDateAndTimeChar_ = null;
          }
          return fileDateAndTimeCharBuilder_;
        }

        private io.dstore.engine.Values.stringValue mD5Hash_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> mD5HashBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public boolean hasMD5Hash() {
          return mD5HashBuilder_ != null || mD5Hash_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getMD5Hash() {
          if (mD5HashBuilder_ == null) {
            return mD5Hash_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : mD5Hash_;
          } else {
            return mD5HashBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder setMD5Hash(io.dstore.engine.Values.stringValue value) {
          if (mD5HashBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mD5Hash_ = value;
            onChanged();
          } else {
            mD5HashBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder setMD5Hash(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = builderForValue.build();
            onChanged();
          } else {
            mD5HashBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder mergeMD5Hash(io.dstore.engine.Values.stringValue value) {
          if (mD5HashBuilder_ == null) {
            if (mD5Hash_ != null) {
              mD5Hash_ =
                io.dstore.engine.Values.stringValue.newBuilder(mD5Hash_).mergeFrom(value).buildPartial();
            } else {
              mD5Hash_ = value;
            }
            onChanged();
          } else {
            mD5HashBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public Builder clearMD5Hash() {
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = null;
            onChanged();
          } else {
            mD5Hash_ = null;
            mD5HashBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getMD5HashBuilder() {
          
          onChanged();
          return getMD5HashFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getMD5HashOrBuilder() {
          if (mD5HashBuilder_ != null) {
            return mD5HashBuilder_.getMessageOrBuilder();
          } else {
            return mD5Hash_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : mD5Hash_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue m_d5_hash = 10012;</code>
         *
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getMD5HashFieldBuilder() {
          if (mD5HashBuilder_ == null) {
            mD5HashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getMD5Hash(),
                    getParentForChildren(),
                    isClean());
            mD5Hash_ = null;
          }
          return mD5HashBuilder_;
        }

        private io.dstore.engine.Values.stringValue inputDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> inputDateAndTimeCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public boolean hasInputDateAndTimeChar() {
          return inputDateAndTimeCharBuilder_ != null || inputDateAndTimeChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            return inputDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
          } else {
            return inputDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder setInputDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTimeChar_ = value;
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder setInputDateAndTimeChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder mergeInputDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (inputDateAndTimeChar_ != null) {
              inputDateAndTimeChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(inputDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public Builder clearInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
            onChanged();
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getInputDateAndTimeCharBuilder() {
          
          onChanged();
          return getInputDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
          if (inputDateAndTimeCharBuilder_ != null) {
            return inputDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTimeChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 10013;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getInputDateAndTimeCharFieldBuilder() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getInputDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTimeChar_ = null;
          }
          return inputDateAndTimeCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
      private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row();
      }

      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response build() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response buildPartial() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response other) {
        if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
    private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response();
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/co_GetBinarie" +
      "sOfOneMember_Ad.proto\022*dstore.engine.co_" +
      "GetBinariesOfOneMember_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\032#dstore/en" +
      "gine/metainformation.proto\"\306\001\n\nParameter" +
      "s\022?\n\023community_member_id\030\001 \001(\0132\".dstore." +
      "engine.values.integerValue\022!\n\030community_" +
      "member_id_null\030\351\007 \001(\010\0228\n\014community_id\030\002 " +
      "\001(\0132\".dstore.engine.values.integerValue\022",
      "\032\n\021community_id_null\030\352\007 \001(\010\"\327\010\n\010Response" +
      "\022)\n\005error\030\001 \001(\0132\032.dstore.engine.error.Er" +
      "ror\022H\n\020meta_information\030\002 \003(\0132..dstore.e" +
      "ngine.metainformation.MetaInformation\022/\n" +
      "\007message\030\003 \003(\0132\036.dstore.engine.message.M" +
      "essage\022E\n\003row\030\004 \003(\01328.dstore.engine.co_G" +
      "etBinariesOfOneMember_Ad.Response.Row\032\335\006" +
      "\n\003Row\022\017\n\006row_id\030\220N \001(\005\0226\n\tbinary_id\030\221N \001" +
      "(\0132\".dstore.engine.values.integerValue\022>" +
      "\n\022binary_description\030\222N \001(\0132!.dstore.eng",
      "ine.values.stringValue\022B\n\023input_date_and" +
      "_time\030\223N \001(\0132$.dstore.engine.values.time" +
      "stampValue\0228\n\014content_type\030\224N \001(\0132!.dsto" +
      "re.engine.values.stringValue\022A\n\022file_dat" +
      "e_and_time\030\225N \001(\0132$.dstore.engine.values" +
      ".timestampValue\022<\n\017filesize_in_k_b\030\226N \001(" +
      "\0132\".dstore.engine.values.integerValue\0224\n" +
      "\007sort_no\030\227N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\022E\n\031community_binary_category" +
      "\030\230N \001(\0132!.dstore.engine.values.stringVal",
      "ue\022I\n\034community_binary_category_id\030\231N \001(" +
      "\0132\".dstore.engine.values.integerValue\022D\n" +
      "\027quoted_file_size_in_k_b\030\232N \001(\0132\".dstore" +
      ".engine.values.integerValue\022C\n\027file_date" +
      "_and_time_char\030\233N \001(\0132!.dstore.engine.va" +
      "lues.stringValue\0225\n\tm_d5_hash\030\234N \001(\0132!.d" +
      "store.engine.values.stringValue\022D\n\030input" +
      "_date_and_time_char\030\235N \001(\0132!.dstore.engi" +
      "ne.values.stringValueB\035\n\033io.dstore.engin" +
      "e.proceduresb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor,
        new java.lang.String[] { "CommunityMemberId", "CommunityMemberIdNull", "CommunityId", "CommunityIdNull", });
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "BinaryId", "BinaryDescription", "InputDateAndTime", "ContentType", "FileDateAndTime", "FilesizeInKB", "SortNo", "CommunityBinaryCategory", "CommunityBinaryCategoryId", "QuotedFileSizeInKB", "FileDateAndTimeChar", "MD5Hash", "InputDateAndTimeChar", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
