// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto

package io.dstore.engine.procedures;

public final class CoGetBinariesOfOneMemberAd {
  private CoGetBinariesOfOneMemberAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    boolean hasCommunityMemberId();
    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    io.dstore.values.IntegerValue getCommunityMemberId();
    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getCommunityMemberIdOrBuilder();

    /**
     * <code>optional bool community_member_id_null = 1001;</code>
     */
    boolean getCommunityMemberIdNull();

    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    boolean hasCommunityId();
    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    io.dstore.values.IntegerValue getCommunityId();
    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getCommunityIdOrBuilder();

    /**
     * <code>optional bool community_id_null = 1002;</code>
     */
    boolean getCommunityIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      communityMemberIdNull_ = false;
      communityIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (communityMemberId_ != null) {
                subBuilder = communityMemberId_.toBuilder();
              }
              communityMemberId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(communityMemberId_);
                communityMemberId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (communityId_ != null) {
                subBuilder = communityId_.toBuilder();
              }
              communityId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(communityId_);
                communityId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              communityMemberIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              communityIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.Builder.class);
    }

    public static final int COMMUNITY_MEMBER_ID_FIELD_NUMBER = 1;
    private io.dstore.values.IntegerValue communityMemberId_;
    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    public boolean hasCommunityMemberId() {
      return communityMemberId_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    public io.dstore.values.IntegerValue getCommunityMemberId() {
      return communityMemberId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityMemberId_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getCommunityMemberIdOrBuilder() {
      return getCommunityMemberId();
    }

    public static final int COMMUNITY_MEMBER_ID_NULL_FIELD_NUMBER = 1001;
    private boolean communityMemberIdNull_;
    /**
     * <code>optional bool community_member_id_null = 1001;</code>
     */
    public boolean getCommunityMemberIdNull() {
      return communityMemberIdNull_;
    }

    public static final int COMMUNITY_ID_FIELD_NUMBER = 2;
    private io.dstore.values.IntegerValue communityId_;
    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    public boolean hasCommunityId() {
      return communityId_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    public io.dstore.values.IntegerValue getCommunityId() {
      return communityId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityId_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getCommunityIdOrBuilder() {
      return getCommunityId();
    }

    public static final int COMMUNITY_ID_NULL_FIELD_NUMBER = 1002;
    private boolean communityIdNull_;
    /**
     * <code>optional bool community_id_null = 1002;</code>
     */
    public boolean getCommunityIdNull() {
      return communityIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (communityMemberId_ != null) {
        output.writeMessage(1, getCommunityMemberId());
      }
      if (communityId_ != null) {
        output.writeMessage(2, getCommunityId());
      }
      if (communityMemberIdNull_ != false) {
        output.writeBool(1001, communityMemberIdNull_);
      }
      if (communityIdNull_ != false) {
        output.writeBool(1002, communityIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (communityMemberId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCommunityMemberId());
      }
      if (communityId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCommunityId());
      }
      if (communityMemberIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, communityMemberIdNull_);
      }
      if (communityIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, communityIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters other = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters) obj;

      boolean result = true;
      result = result && (hasCommunityMemberId() == other.hasCommunityMemberId());
      if (hasCommunityMemberId()) {
        result = result && getCommunityMemberId()
            .equals(other.getCommunityMemberId());
      }
      result = result && (getCommunityMemberIdNull()
          == other.getCommunityMemberIdNull());
      result = result && (hasCommunityId() == other.hasCommunityId());
      if (hasCommunityId()) {
        result = result && getCommunityId()
            .equals(other.getCommunityId());
      }
      result = result && (getCommunityIdNull()
          == other.getCommunityIdNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCommunityMemberId()) {
        hash = (37 * hash) + COMMUNITY_MEMBER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCommunityMemberId().hashCode();
      }
      hash = (37 * hash) + COMMUNITY_MEMBER_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCommunityMemberIdNull());
      if (hasCommunityId()) {
        hash = (37 * hash) + COMMUNITY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCommunityId().hashCode();
      }
      hash = (37 * hash) + COMMUNITY_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCommunityIdNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = null;
        } else {
          communityMemberId_ = null;
          communityMemberIdBuilder_ = null;
        }
        communityMemberIdNull_ = false;

        if (communityIdBuilder_ == null) {
          communityId_ = null;
        } else {
          communityId_ = null;
          communityIdBuilder_ = null;
        }
        communityIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters build() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters buildPartial() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters(this);
        if (communityMemberIdBuilder_ == null) {
          result.communityMemberId_ = communityMemberId_;
        } else {
          result.communityMemberId_ = communityMemberIdBuilder_.build();
        }
        result.communityMemberIdNull_ = communityMemberIdNull_;
        if (communityIdBuilder_ == null) {
          result.communityId_ = communityId_;
        } else {
          result.communityId_ = communityIdBuilder_.build();
        }
        result.communityIdNull_ = communityIdNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters other) {
        if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters.getDefaultInstance()) return this;
        if (other.hasCommunityMemberId()) {
          mergeCommunityMemberId(other.getCommunityMemberId());
        }
        if (other.getCommunityMemberIdNull() != false) {
          setCommunityMemberIdNull(other.getCommunityMemberIdNull());
        }
        if (other.hasCommunityId()) {
          mergeCommunityId(other.getCommunityId());
        }
        if (other.getCommunityIdNull() != false) {
          setCommunityIdNull(other.getCommunityIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.IntegerValue communityMemberId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> communityMemberIdBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public boolean hasCommunityMemberId() {
        return communityMemberIdBuilder_ != null || communityMemberId_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public io.dstore.values.IntegerValue getCommunityMemberId() {
        if (communityMemberIdBuilder_ == null) {
          return communityMemberId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityMemberId_;
        } else {
          return communityMemberIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public Builder setCommunityMemberId(io.dstore.values.IntegerValue value) {
        if (communityMemberIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          communityMemberId_ = value;
          onChanged();
        } else {
          communityMemberIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public Builder setCommunityMemberId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = builderForValue.build();
          onChanged();
        } else {
          communityMemberIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public Builder mergeCommunityMemberId(io.dstore.values.IntegerValue value) {
        if (communityMemberIdBuilder_ == null) {
          if (communityMemberId_ != null) {
            communityMemberId_ =
              io.dstore.values.IntegerValue.newBuilder(communityMemberId_).mergeFrom(value).buildPartial();
          } else {
            communityMemberId_ = value;
          }
          onChanged();
        } else {
          communityMemberIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public Builder clearCommunityMemberId() {
        if (communityMemberIdBuilder_ == null) {
          communityMemberId_ = null;
          onChanged();
        } else {
          communityMemberId_ = null;
          communityMemberIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public io.dstore.values.IntegerValue.Builder getCommunityMemberIdBuilder() {
        
        onChanged();
        return getCommunityMemberIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getCommunityMemberIdOrBuilder() {
        if (communityMemberIdBuilder_ != null) {
          return communityMemberIdBuilder_.getMessageOrBuilder();
        } else {
          return communityMemberId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : communityMemberId_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_member_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getCommunityMemberIdFieldBuilder() {
        if (communityMemberIdBuilder_ == null) {
          communityMemberIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getCommunityMemberId(),
                  getParentForChildren(),
                  isClean());
          communityMemberId_ = null;
        }
        return communityMemberIdBuilder_;
      }

      private boolean communityMemberIdNull_ ;
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public boolean getCommunityMemberIdNull() {
        return communityMemberIdNull_;
      }
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public Builder setCommunityMemberIdNull(boolean value) {
        
        communityMemberIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool community_member_id_null = 1001;</code>
       */
      public Builder clearCommunityMemberIdNull() {
        
        communityMemberIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.IntegerValue communityId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> communityIdBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public boolean hasCommunityId() {
        return communityIdBuilder_ != null || communityId_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public io.dstore.values.IntegerValue getCommunityId() {
        if (communityIdBuilder_ == null) {
          return communityId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityId_;
        } else {
          return communityIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public Builder setCommunityId(io.dstore.values.IntegerValue value) {
        if (communityIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          communityId_ = value;
          onChanged();
        } else {
          communityIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public Builder setCommunityId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (communityIdBuilder_ == null) {
          communityId_ = builderForValue.build();
          onChanged();
        } else {
          communityIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public Builder mergeCommunityId(io.dstore.values.IntegerValue value) {
        if (communityIdBuilder_ == null) {
          if (communityId_ != null) {
            communityId_ =
              io.dstore.values.IntegerValue.newBuilder(communityId_).mergeFrom(value).buildPartial();
          } else {
            communityId_ = value;
          }
          onChanged();
        } else {
          communityIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public Builder clearCommunityId() {
        if (communityIdBuilder_ == null) {
          communityId_ = null;
          onChanged();
        } else {
          communityId_ = null;
          communityIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public io.dstore.values.IntegerValue.Builder getCommunityIdBuilder() {
        
        onChanged();
        return getCommunityIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getCommunityIdOrBuilder() {
        if (communityIdBuilder_ != null) {
          return communityIdBuilder_.getMessageOrBuilder();
        } else {
          return communityId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : communityId_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue community_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getCommunityIdFieldBuilder() {
        if (communityIdBuilder_ == null) {
          communityIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getCommunityId(),
                  getParentForChildren(),
                  isClean());
          communityId_ = null;
        }
        return communityIdBuilder_;
      }

      private boolean communityIdNull_ ;
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public boolean getCommunityIdNull() {
        return communityIdNull_;
      }
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public Builder setCommunityIdNull(boolean value) {
        
        communityIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool community_id_null = 1002;</code>
       */
      public Builder clearCommunityIdNull() {
        
        communityIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters)
    private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters();
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      boolean hasBinaryId();
      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      io.dstore.values.IntegerValue getBinaryId();
      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getBinaryIdOrBuilder();

      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      boolean hasBinaryDescription();
      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      io.dstore.values.StringValue getBinaryDescription();
      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      io.dstore.values.StringValueOrBuilder getBinaryDescriptionOrBuilder();

      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      boolean hasInputDateAndTime();
      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      io.dstore.values.TimestampValue getInputDateAndTime();
      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      io.dstore.values.TimestampValueOrBuilder getInputDateAndTimeOrBuilder();

      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      boolean hasContentType();
      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      io.dstore.values.StringValue getContentType();
      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      io.dstore.values.StringValueOrBuilder getContentTypeOrBuilder();

      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      boolean hasFileDateAndTime();
      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      io.dstore.values.TimestampValue getFileDateAndTime();
      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      io.dstore.values.TimestampValueOrBuilder getFileDateAndTimeOrBuilder();

      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      boolean hasFilesizeInKB();
      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      io.dstore.values.IntegerValue getFilesizeInKB();
      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getFilesizeInKBOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      boolean hasSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      io.dstore.values.IntegerValue getSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      boolean hasCommunityBinaryCategory();
      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      io.dstore.values.StringValue getCommunityBinaryCategory();
      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      io.dstore.values.StringValueOrBuilder getCommunityBinaryCategoryOrBuilder();

      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      boolean hasCommunityBinaryCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      io.dstore.values.IntegerValue getCommunityBinaryCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder();

      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      boolean hasQuotedFileSizeInKB();
      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      io.dstore.values.IntegerValue getQuotedFileSizeInKB();
      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getQuotedFileSizeInKBOrBuilder();

      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      boolean hasFileDateAndTimeChar();
      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      io.dstore.values.StringValue getFileDateAndTimeChar();
      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      io.dstore.values.StringValueOrBuilder getFileDateAndTimeCharOrBuilder();

      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      boolean hasMD5Hash();
      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      io.dstore.values.StringValue getMD5Hash();
      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      io.dstore.values.StringValueOrBuilder getMD5HashOrBuilder();

      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      boolean hasInputDateAndTimeChar();
      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      io.dstore.values.StringValue getInputDateAndTimeChar();
      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      io.dstore.values.StringValueOrBuilder getInputDateAndTimeCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (binaryId_ != null) {
                  subBuilder = binaryId_.toBuilder();
                }
                binaryId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryId_);
                  binaryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (binaryDescription_ != null) {
                  subBuilder = binaryDescription_.toBuilder();
                }
                binaryDescription_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryDescription_);
                  binaryDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.TimestampValue.Builder subBuilder = null;
                if (inputDateAndTime_ != null) {
                  subBuilder = inputDateAndTime_.toBuilder();
                }
                inputDateAndTime_ = input.readMessage(io.dstore.values.TimestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTime_);
                  inputDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (contentType_ != null) {
                  subBuilder = contentType_.toBuilder();
                }
                contentType_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(contentType_);
                  contentType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.TimestampValue.Builder subBuilder = null;
                if (fileDateAndTime_ != null) {
                  subBuilder = fileDateAndTime_.toBuilder();
                }
                fileDateAndTime_ = input.readMessage(io.dstore.values.TimestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fileDateAndTime_);
                  fileDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (filesizeInKB_ != null) {
                  subBuilder = filesizeInKB_.toBuilder();
                }
                filesizeInKB_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(filesizeInKB_);
                  filesizeInKB_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (communityBinaryCategory_ != null) {
                  subBuilder = communityBinaryCategory_.toBuilder();
                }
                communityBinaryCategory_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(communityBinaryCategory_);
                  communityBinaryCategory_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (communityBinaryCategoryId_ != null) {
                  subBuilder = communityBinaryCategoryId_.toBuilder();
                }
                communityBinaryCategoryId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(communityBinaryCategoryId_);
                  communityBinaryCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (quotedFileSizeInKB_ != null) {
                  subBuilder = quotedFileSizeInKB_.toBuilder();
                }
                quotedFileSizeInKB_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quotedFileSizeInKB_);
                  quotedFileSizeInKB_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (fileDateAndTimeChar_ != null) {
                  subBuilder = fileDateAndTimeChar_.toBuilder();
                }
                fileDateAndTimeChar_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fileDateAndTimeChar_);
                  fileDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (mD5Hash_ != null) {
                  subBuilder = mD5Hash_.toBuilder();
                }
                mD5Hash_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mD5Hash_);
                  mD5Hash_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (inputDateAndTimeChar_ != null) {
                  subBuilder = inputDateAndTimeChar_.toBuilder();
                }
                inputDateAndTimeChar_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTimeChar_);
                  inputDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int BINARY_ID_FIELD_NUMBER = 10001;
      private io.dstore.values.IntegerValue binaryId_;
      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      public boolean hasBinaryId() {
        return binaryId_ != null;
      }
      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      public io.dstore.values.IntegerValue getBinaryId() {
        return binaryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : binaryId_;
      }
      /**
       * <pre>
       * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getBinaryIdOrBuilder() {
        return getBinaryId();
      }

      public static final int BINARY_DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.values.StringValue binaryDescription_;
      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      public boolean hasBinaryDescription() {
        return binaryDescription_ != null;
      }
      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      public io.dstore.values.StringValue getBinaryDescription() {
        return binaryDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : binaryDescription_;
      }
      /**
       * <pre>
       * Beschreibung des Binärobjektes "BinaryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
       */
      public io.dstore.values.StringValueOrBuilder getBinaryDescriptionOrBuilder() {
        return getBinaryDescription();
      }

      public static final int INPUT_DATE_AND_TIME_FIELD_NUMBER = 10003;
      private io.dstore.values.TimestampValue inputDateAndTime_;
      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      public boolean hasInputDateAndTime() {
        return inputDateAndTime_ != null;
      }
      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      public io.dstore.values.TimestampValue getInputDateAndTime() {
        return inputDateAndTime_ == null ? io.dstore.values.TimestampValue.getDefaultInstance() : inputDateAndTime_;
      }
      /**
       * <pre>
       * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
       */
      public io.dstore.values.TimestampValueOrBuilder getInputDateAndTimeOrBuilder() {
        return getInputDateAndTime();
      }

      public static final int CONTENT_TYPE_FIELD_NUMBER = 10004;
      private io.dstore.values.StringValue contentType_;
      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      public boolean hasContentType() {
        return contentType_ != null;
      }
      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      public io.dstore.values.StringValue getContentType() {
        return contentType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : contentType_;
      }
      /**
       * <pre>
       * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue content_type = 10004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getContentTypeOrBuilder() {
        return getContentType();
      }

      public static final int FILE_DATE_AND_TIME_FIELD_NUMBER = 10005;
      private io.dstore.values.TimestampValue fileDateAndTime_;
      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      public boolean hasFileDateAndTime() {
        return fileDateAndTime_ != null;
      }
      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      public io.dstore.values.TimestampValue getFileDateAndTime() {
        return fileDateAndTime_ == null ? io.dstore.values.TimestampValue.getDefaultInstance() : fileDateAndTime_;
      }
      /**
       * <pre>
       * Erstellungsdatum der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
       */
      public io.dstore.values.TimestampValueOrBuilder getFileDateAndTimeOrBuilder() {
        return getFileDateAndTime();
      }

      public static final int FILESIZE_IN_K_B_FIELD_NUMBER = 10006;
      private io.dstore.values.IntegerValue filesizeInKB_;
      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      public boolean hasFilesizeInKB() {
        return filesizeInKB_ != null;
      }
      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      public io.dstore.values.IntegerValue getFilesizeInKB() {
        return filesizeInKB_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : filesizeInKB_;
      }
      /**
       * <pre>
       * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getFilesizeInKBOrBuilder() {
        return getFilesizeInKB();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10007;
      private io.dstore.values.IntegerValue sortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      public io.dstore.values.IntegerValue getSortNo() {
        return sortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int COMMUNITY_BINARY_CATEGORY_FIELD_NUMBER = 10008;
      private io.dstore.values.StringValue communityBinaryCategory_;
      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      public boolean hasCommunityBinaryCategory() {
        return communityBinaryCategory_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      public io.dstore.values.StringValue getCommunityBinaryCategory() {
        return communityBinaryCategory_ == null ? io.dstore.values.StringValue.getDefaultInstance() : communityBinaryCategory_;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
       */
      public io.dstore.values.StringValueOrBuilder getCommunityBinaryCategoryOrBuilder() {
        return getCommunityBinaryCategory();
      }

      public static final int COMMUNITY_BINARY_CATEGORY_ID_FIELD_NUMBER = 10009;
      private io.dstore.values.IntegerValue communityBinaryCategoryId_;
      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      public boolean hasCommunityBinaryCategoryId() {
        return communityBinaryCategoryId_ != null;
      }
      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      public io.dstore.values.IntegerValue getCommunityBinaryCategoryId() {
        return communityBinaryCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityBinaryCategoryId_;
      }
      /**
       * <pre>
       * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder() {
        return getCommunityBinaryCategoryId();
      }

      public static final int QUOTED_FILE_SIZE_IN_K_B_FIELD_NUMBER = 10010;
      private io.dstore.values.IntegerValue quotedFileSizeInKB_;
      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      public boolean hasQuotedFileSizeInKB() {
        return quotedFileSizeInKB_ != null;
      }
      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      public io.dstore.values.IntegerValue getQuotedFileSizeInKB() {
        return quotedFileSizeInKB_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : quotedFileSizeInKB_;
      }
      /**
       * <pre>
       * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getQuotedFileSizeInKBOrBuilder() {
        return getQuotedFileSizeInKB();
      }

      public static final int FILE_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10011;
      private io.dstore.values.StringValue fileDateAndTimeChar_;
      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      public boolean hasFileDateAndTimeChar() {
        return fileDateAndTimeChar_ != null;
      }
      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      public io.dstore.values.StringValue getFileDateAndTimeChar() {
        return fileDateAndTimeChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : fileDateAndTimeChar_;
      }
      /**
       * <pre>
       * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
       */
      public io.dstore.values.StringValueOrBuilder getFileDateAndTimeCharOrBuilder() {
        return getFileDateAndTimeChar();
      }

      public static final int M_D5_HASH_FIELD_NUMBER = 10012;
      private io.dstore.values.StringValue mD5Hash_;
      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      public boolean hasMD5Hash() {
        return mD5Hash_ != null;
      }
      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      public io.dstore.values.StringValue getMD5Hash() {
        return mD5Hash_ == null ? io.dstore.values.StringValue.getDefaultInstance() : mD5Hash_;
      }
      /**
       * <pre>
       * "MD5-Hash" der durch "BinaryID" referenzierten Datei
       * </pre>
       *
       * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
       */
      public io.dstore.values.StringValueOrBuilder getMD5HashOrBuilder() {
        return getMD5Hash();
      }

      public static final int INPUT_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10013;
      private io.dstore.values.StringValue inputDateAndTimeChar_;
      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      public boolean hasInputDateAndTimeChar() {
        return inputDateAndTimeChar_ != null;
      }
      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      public io.dstore.values.StringValue getInputDateAndTimeChar() {
        return inputDateAndTimeChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : inputDateAndTimeChar_;
      }
      /**
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
       */
      public io.dstore.values.StringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
        return getInputDateAndTimeChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (binaryId_ != null) {
          output.writeMessage(10001, getBinaryId());
        }
        if (binaryDescription_ != null) {
          output.writeMessage(10002, getBinaryDescription());
        }
        if (inputDateAndTime_ != null) {
          output.writeMessage(10003, getInputDateAndTime());
        }
        if (contentType_ != null) {
          output.writeMessage(10004, getContentType());
        }
        if (fileDateAndTime_ != null) {
          output.writeMessage(10005, getFileDateAndTime());
        }
        if (filesizeInKB_ != null) {
          output.writeMessage(10006, getFilesizeInKB());
        }
        if (sortNo_ != null) {
          output.writeMessage(10007, getSortNo());
        }
        if (communityBinaryCategory_ != null) {
          output.writeMessage(10008, getCommunityBinaryCategory());
        }
        if (communityBinaryCategoryId_ != null) {
          output.writeMessage(10009, getCommunityBinaryCategoryId());
        }
        if (quotedFileSizeInKB_ != null) {
          output.writeMessage(10010, getQuotedFileSizeInKB());
        }
        if (fileDateAndTimeChar_ != null) {
          output.writeMessage(10011, getFileDateAndTimeChar());
        }
        if (mD5Hash_ != null) {
          output.writeMessage(10012, getMD5Hash());
        }
        if (inputDateAndTimeChar_ != null) {
          output.writeMessage(10013, getInputDateAndTimeChar());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (binaryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getBinaryId());
        }
        if (binaryDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getBinaryDescription());
        }
        if (inputDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getInputDateAndTime());
        }
        if (contentType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getContentType());
        }
        if (fileDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getFileDateAndTime());
        }
        if (filesizeInKB_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getFilesizeInKB());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getSortNo());
        }
        if (communityBinaryCategory_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getCommunityBinaryCategory());
        }
        if (communityBinaryCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getCommunityBinaryCategoryId());
        }
        if (quotedFileSizeInKB_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getQuotedFileSizeInKB());
        }
        if (fileDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFileDateAndTimeChar());
        }
        if (mD5Hash_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getMD5Hash());
        }
        if (inputDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getInputDateAndTimeChar());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row other = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasBinaryId() == other.hasBinaryId());
        if (hasBinaryId()) {
          result = result && getBinaryId()
              .equals(other.getBinaryId());
        }
        result = result && (hasBinaryDescription() == other.hasBinaryDescription());
        if (hasBinaryDescription()) {
          result = result && getBinaryDescription()
              .equals(other.getBinaryDescription());
        }
        result = result && (hasInputDateAndTime() == other.hasInputDateAndTime());
        if (hasInputDateAndTime()) {
          result = result && getInputDateAndTime()
              .equals(other.getInputDateAndTime());
        }
        result = result && (hasContentType() == other.hasContentType());
        if (hasContentType()) {
          result = result && getContentType()
              .equals(other.getContentType());
        }
        result = result && (hasFileDateAndTime() == other.hasFileDateAndTime());
        if (hasFileDateAndTime()) {
          result = result && getFileDateAndTime()
              .equals(other.getFileDateAndTime());
        }
        result = result && (hasFilesizeInKB() == other.hasFilesizeInKB());
        if (hasFilesizeInKB()) {
          result = result && getFilesizeInKB()
              .equals(other.getFilesizeInKB());
        }
        result = result && (hasSortNo() == other.hasSortNo());
        if (hasSortNo()) {
          result = result && getSortNo()
              .equals(other.getSortNo());
        }
        result = result && (hasCommunityBinaryCategory() == other.hasCommunityBinaryCategory());
        if (hasCommunityBinaryCategory()) {
          result = result && getCommunityBinaryCategory()
              .equals(other.getCommunityBinaryCategory());
        }
        result = result && (hasCommunityBinaryCategoryId() == other.hasCommunityBinaryCategoryId());
        if (hasCommunityBinaryCategoryId()) {
          result = result && getCommunityBinaryCategoryId()
              .equals(other.getCommunityBinaryCategoryId());
        }
        result = result && (hasQuotedFileSizeInKB() == other.hasQuotedFileSizeInKB());
        if (hasQuotedFileSizeInKB()) {
          result = result && getQuotedFileSizeInKB()
              .equals(other.getQuotedFileSizeInKB());
        }
        result = result && (hasFileDateAndTimeChar() == other.hasFileDateAndTimeChar());
        if (hasFileDateAndTimeChar()) {
          result = result && getFileDateAndTimeChar()
              .equals(other.getFileDateAndTimeChar());
        }
        result = result && (hasMD5Hash() == other.hasMD5Hash());
        if (hasMD5Hash()) {
          result = result && getMD5Hash()
              .equals(other.getMD5Hash());
        }
        result = result && (hasInputDateAndTimeChar() == other.hasInputDateAndTimeChar());
        if (hasInputDateAndTimeChar()) {
          result = result && getInputDateAndTimeChar()
              .equals(other.getInputDateAndTimeChar());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasBinaryId()) {
          hash = (37 * hash) + BINARY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBinaryId().hashCode();
        }
        if (hasBinaryDescription()) {
          hash = (37 * hash) + BINARY_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getBinaryDescription().hashCode();
        }
        if (hasInputDateAndTime()) {
          hash = (37 * hash) + INPUT_DATE_AND_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getInputDateAndTime().hashCode();
        }
        if (hasContentType()) {
          hash = (37 * hash) + CONTENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getContentType().hashCode();
        }
        if (hasFileDateAndTime()) {
          hash = (37 * hash) + FILE_DATE_AND_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getFileDateAndTime().hashCode();
        }
        if (hasFilesizeInKB()) {
          hash = (37 * hash) + FILESIZE_IN_K_B_FIELD_NUMBER;
          hash = (53 * hash) + getFilesizeInKB().hashCode();
        }
        if (hasSortNo()) {
          hash = (37 * hash) + SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getSortNo().hashCode();
        }
        if (hasCommunityBinaryCategory()) {
          hash = (37 * hash) + COMMUNITY_BINARY_CATEGORY_FIELD_NUMBER;
          hash = (53 * hash) + getCommunityBinaryCategory().hashCode();
        }
        if (hasCommunityBinaryCategoryId()) {
          hash = (37 * hash) + COMMUNITY_BINARY_CATEGORY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getCommunityBinaryCategoryId().hashCode();
        }
        if (hasQuotedFileSizeInKB()) {
          hash = (37 * hash) + QUOTED_FILE_SIZE_IN_K_B_FIELD_NUMBER;
          hash = (53 * hash) + getQuotedFileSizeInKB().hashCode();
        }
        if (hasFileDateAndTimeChar()) {
          hash = (37 * hash) + FILE_DATE_AND_TIME_CHAR_FIELD_NUMBER;
          hash = (53 * hash) + getFileDateAndTimeChar().hashCode();
        }
        if (hasMD5Hash()) {
          hash = (37 * hash) + M_D5_HASH_FIELD_NUMBER;
          hash = (53 * hash) + getMD5Hash().hashCode();
        }
        if (hasInputDateAndTimeChar()) {
          hash = (37 * hash) + INPUT_DATE_AND_TIME_CHAR_FIELD_NUMBER;
          hash = (53 * hash) + getInputDateAndTimeChar().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (binaryIdBuilder_ == null) {
            binaryId_ = null;
          } else {
            binaryId_ = null;
            binaryIdBuilder_ = null;
          }
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = null;
          } else {
            binaryDescription_ = null;
            binaryDescriptionBuilder_ = null;
          }
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }
          if (contentTypeBuilder_ == null) {
            contentType_ = null;
          } else {
            contentType_ = null;
            contentTypeBuilder_ = null;
          }
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = null;
          } else {
            fileDateAndTime_ = null;
            fileDateAndTimeBuilder_ = null;
          }
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = null;
          } else {
            filesizeInKB_ = null;
            filesizeInKBBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = null;
          } else {
            communityBinaryCategory_ = null;
            communityBinaryCategoryBuilder_ = null;
          }
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = null;
          } else {
            communityBinaryCategoryId_ = null;
            communityBinaryCategoryIdBuilder_ = null;
          }
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = null;
          } else {
            quotedFileSizeInKB_ = null;
            quotedFileSizeInKBBuilder_ = null;
          }
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = null;
          } else {
            fileDateAndTimeChar_ = null;
            fileDateAndTimeCharBuilder_ = null;
          }
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = null;
          } else {
            mD5Hash_ = null;
            mD5HashBuilder_ = null;
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row build() {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (binaryIdBuilder_ == null) {
            result.binaryId_ = binaryId_;
          } else {
            result.binaryId_ = binaryIdBuilder_.build();
          }
          if (binaryDescriptionBuilder_ == null) {
            result.binaryDescription_ = binaryDescription_;
          } else {
            result.binaryDescription_ = binaryDescriptionBuilder_.build();
          }
          if (inputDateAndTimeBuilder_ == null) {
            result.inputDateAndTime_ = inputDateAndTime_;
          } else {
            result.inputDateAndTime_ = inputDateAndTimeBuilder_.build();
          }
          if (contentTypeBuilder_ == null) {
            result.contentType_ = contentType_;
          } else {
            result.contentType_ = contentTypeBuilder_.build();
          }
          if (fileDateAndTimeBuilder_ == null) {
            result.fileDateAndTime_ = fileDateAndTime_;
          } else {
            result.fileDateAndTime_ = fileDateAndTimeBuilder_.build();
          }
          if (filesizeInKBBuilder_ == null) {
            result.filesizeInKB_ = filesizeInKB_;
          } else {
            result.filesizeInKB_ = filesizeInKBBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (communityBinaryCategoryBuilder_ == null) {
            result.communityBinaryCategory_ = communityBinaryCategory_;
          } else {
            result.communityBinaryCategory_ = communityBinaryCategoryBuilder_.build();
          }
          if (communityBinaryCategoryIdBuilder_ == null) {
            result.communityBinaryCategoryId_ = communityBinaryCategoryId_;
          } else {
            result.communityBinaryCategoryId_ = communityBinaryCategoryIdBuilder_.build();
          }
          if (quotedFileSizeInKBBuilder_ == null) {
            result.quotedFileSizeInKB_ = quotedFileSizeInKB_;
          } else {
            result.quotedFileSizeInKB_ = quotedFileSizeInKBBuilder_.build();
          }
          if (fileDateAndTimeCharBuilder_ == null) {
            result.fileDateAndTimeChar_ = fileDateAndTimeChar_;
          } else {
            result.fileDateAndTimeChar_ = fileDateAndTimeCharBuilder_.build();
          }
          if (mD5HashBuilder_ == null) {
            result.mD5Hash_ = mD5Hash_;
          } else {
            result.mD5Hash_ = mD5HashBuilder_.build();
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            result.inputDateAndTimeChar_ = inputDateAndTimeChar_;
          } else {
            result.inputDateAndTimeChar_ = inputDateAndTimeCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasBinaryId()) {
            mergeBinaryId(other.getBinaryId());
          }
          if (other.hasBinaryDescription()) {
            mergeBinaryDescription(other.getBinaryDescription());
          }
          if (other.hasInputDateAndTime()) {
            mergeInputDateAndTime(other.getInputDateAndTime());
          }
          if (other.hasContentType()) {
            mergeContentType(other.getContentType());
          }
          if (other.hasFileDateAndTime()) {
            mergeFileDateAndTime(other.getFileDateAndTime());
          }
          if (other.hasFilesizeInKB()) {
            mergeFilesizeInKB(other.getFilesizeInKB());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasCommunityBinaryCategory()) {
            mergeCommunityBinaryCategory(other.getCommunityBinaryCategory());
          }
          if (other.hasCommunityBinaryCategoryId()) {
            mergeCommunityBinaryCategoryId(other.getCommunityBinaryCategoryId());
          }
          if (other.hasQuotedFileSizeInKB()) {
            mergeQuotedFileSizeInKB(other.getQuotedFileSizeInKB());
          }
          if (other.hasFileDateAndTimeChar()) {
            mergeFileDateAndTimeChar(other.getFileDateAndTimeChar());
          }
          if (other.hasMD5Hash()) {
            mergeMD5Hash(other.getMD5Hash());
          }
          if (other.hasInputDateAndTimeChar()) {
            mergeInputDateAndTimeChar(other.getInputDateAndTimeChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.IntegerValue binaryId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> binaryIdBuilder_;
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public boolean hasBinaryId() {
          return binaryIdBuilder_ != null || binaryId_ != null;
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public io.dstore.values.IntegerValue getBinaryId() {
          if (binaryIdBuilder_ == null) {
            return binaryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : binaryId_;
          } else {
            return binaryIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public Builder setBinaryId(io.dstore.values.IntegerValue value) {
          if (binaryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryId_ = value;
            onChanged();
          } else {
            binaryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public Builder setBinaryId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (binaryIdBuilder_ == null) {
            binaryId_ = builderForValue.build();
            onChanged();
          } else {
            binaryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public Builder mergeBinaryId(io.dstore.values.IntegerValue value) {
          if (binaryIdBuilder_ == null) {
            if (binaryId_ != null) {
              binaryId_ =
                io.dstore.values.IntegerValue.newBuilder(binaryId_).mergeFrom(value).buildPartial();
            } else {
              binaryId_ = value;
            }
            onChanged();
          } else {
            binaryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public Builder clearBinaryId() {
          if (binaryIdBuilder_ == null) {
            binaryId_ = null;
            onChanged();
          } else {
            binaryId_ = null;
            binaryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public io.dstore.values.IntegerValue.Builder getBinaryIdBuilder() {
          
          onChanged();
          return getBinaryIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getBinaryIdOrBuilder() {
          if (binaryIdBuilder_ != null) {
            return binaryIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : binaryId_;
          }
        }
        /**
         * <pre>
         * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue binary_id = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getBinaryIdFieldBuilder() {
          if (binaryIdBuilder_ == null) {
            binaryIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getBinaryId(),
                    getParentForChildren(),
                    isClean());
            binaryId_ = null;
          }
          return binaryIdBuilder_;
        }

        private io.dstore.values.StringValue binaryDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> binaryDescriptionBuilder_;
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public boolean hasBinaryDescription() {
          return binaryDescriptionBuilder_ != null || binaryDescription_ != null;
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public io.dstore.values.StringValue getBinaryDescription() {
          if (binaryDescriptionBuilder_ == null) {
            return binaryDescription_ == null ? io.dstore.values.StringValue.getDefaultInstance() : binaryDescription_;
          } else {
            return binaryDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public Builder setBinaryDescription(io.dstore.values.StringValue value) {
          if (binaryDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryDescription_ = value;
            onChanged();
          } else {
            binaryDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public Builder setBinaryDescription(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = builderForValue.build();
            onChanged();
          } else {
            binaryDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public Builder mergeBinaryDescription(io.dstore.values.StringValue value) {
          if (binaryDescriptionBuilder_ == null) {
            if (binaryDescription_ != null) {
              binaryDescription_ =
                io.dstore.values.StringValue.newBuilder(binaryDescription_).mergeFrom(value).buildPartial();
            } else {
              binaryDescription_ = value;
            }
            onChanged();
          } else {
            binaryDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public Builder clearBinaryDescription() {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescription_ = null;
            onChanged();
          } else {
            binaryDescription_ = null;
            binaryDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public io.dstore.values.StringValue.Builder getBinaryDescriptionBuilder() {
          
          onChanged();
          return getBinaryDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        public io.dstore.values.StringValueOrBuilder getBinaryDescriptionOrBuilder() {
          if (binaryDescriptionBuilder_ != null) {
            return binaryDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return binaryDescription_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : binaryDescription_;
          }
        }
        /**
         * <pre>
         * Beschreibung des Binärobjektes "BinaryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue binary_description = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getBinaryDescriptionFieldBuilder() {
          if (binaryDescriptionBuilder_ == null) {
            binaryDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getBinaryDescription(),
                    getParentForChildren(),
                    isClean());
            binaryDescription_ = null;
          }
          return binaryDescriptionBuilder_;
        }

        private io.dstore.values.TimestampValue inputDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder> inputDateAndTimeBuilder_;
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public boolean hasInputDateAndTime() {
          return inputDateAndTimeBuilder_ != null || inputDateAndTime_ != null;
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public io.dstore.values.TimestampValue getInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            return inputDateAndTime_ == null ? io.dstore.values.TimestampValue.getDefaultInstance() : inputDateAndTime_;
          } else {
            return inputDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public Builder setInputDateAndTime(io.dstore.values.TimestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTime_ = value;
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public Builder setInputDateAndTime(
            io.dstore.values.TimestampValue.Builder builderForValue) {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public Builder mergeInputDateAndTime(io.dstore.values.TimestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (inputDateAndTime_ != null) {
              inputDateAndTime_ =
                io.dstore.values.TimestampValue.newBuilder(inputDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTime_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public Builder clearInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
            onChanged();
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public io.dstore.values.TimestampValue.Builder getInputDateAndTimeBuilder() {
          
          onChanged();
          return getInputDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        public io.dstore.values.TimestampValueOrBuilder getInputDateAndTimeOrBuilder() {
          if (inputDateAndTimeBuilder_ != null) {
            return inputDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTime_ == null ?
                io.dstore.values.TimestampValue.getDefaultInstance() : inputDateAndTime_;
          }
        }
        /**
         * <pre>
         * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue input_date_and_time = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder> 
            getInputDateAndTimeFieldBuilder() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder>(
                    getInputDateAndTime(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTime_ = null;
          }
          return inputDateAndTimeBuilder_;
        }

        private io.dstore.values.StringValue contentType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> contentTypeBuilder_;
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public boolean hasContentType() {
          return contentTypeBuilder_ != null || contentType_ != null;
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public io.dstore.values.StringValue getContentType() {
          if (contentTypeBuilder_ == null) {
            return contentType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : contentType_;
          } else {
            return contentTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public Builder setContentType(io.dstore.values.StringValue value) {
          if (contentTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            contentType_ = value;
            onChanged();
          } else {
            contentTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public Builder setContentType(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (contentTypeBuilder_ == null) {
            contentType_ = builderForValue.build();
            onChanged();
          } else {
            contentTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public Builder mergeContentType(io.dstore.values.StringValue value) {
          if (contentTypeBuilder_ == null) {
            if (contentType_ != null) {
              contentType_ =
                io.dstore.values.StringValue.newBuilder(contentType_).mergeFrom(value).buildPartial();
            } else {
              contentType_ = value;
            }
            onChanged();
          } else {
            contentTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public Builder clearContentType() {
          if (contentTypeBuilder_ == null) {
            contentType_ = null;
            onChanged();
          } else {
            contentType_ = null;
            contentTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public io.dstore.values.StringValue.Builder getContentTypeBuilder() {
          
          onChanged();
          return getContentTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getContentTypeOrBuilder() {
          if (contentTypeBuilder_ != null) {
            return contentTypeBuilder_.getMessageOrBuilder();
          } else {
            return contentType_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : contentType_;
          }
        }
        /**
         * <pre>
         * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue content_type = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getContentTypeFieldBuilder() {
          if (contentTypeBuilder_ == null) {
            contentTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getContentType(),
                    getParentForChildren(),
                    isClean());
            contentType_ = null;
          }
          return contentTypeBuilder_;
        }

        private io.dstore.values.TimestampValue fileDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder> fileDateAndTimeBuilder_;
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public boolean hasFileDateAndTime() {
          return fileDateAndTimeBuilder_ != null || fileDateAndTime_ != null;
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public io.dstore.values.TimestampValue getFileDateAndTime() {
          if (fileDateAndTimeBuilder_ == null) {
            return fileDateAndTime_ == null ? io.dstore.values.TimestampValue.getDefaultInstance() : fileDateAndTime_;
          } else {
            return fileDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public Builder setFileDateAndTime(io.dstore.values.TimestampValue value) {
          if (fileDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fileDateAndTime_ = value;
            onChanged();
          } else {
            fileDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public Builder setFileDateAndTime(
            io.dstore.values.TimestampValue.Builder builderForValue) {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            fileDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public Builder mergeFileDateAndTime(io.dstore.values.TimestampValue value) {
          if (fileDateAndTimeBuilder_ == null) {
            if (fileDateAndTime_ != null) {
              fileDateAndTime_ =
                io.dstore.values.TimestampValue.newBuilder(fileDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              fileDateAndTime_ = value;
            }
            onChanged();
          } else {
            fileDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public Builder clearFileDateAndTime() {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTime_ = null;
            onChanged();
          } else {
            fileDateAndTime_ = null;
            fileDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public io.dstore.values.TimestampValue.Builder getFileDateAndTimeBuilder() {
          
          onChanged();
          return getFileDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        public io.dstore.values.TimestampValueOrBuilder getFileDateAndTimeOrBuilder() {
          if (fileDateAndTimeBuilder_ != null) {
            return fileDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return fileDateAndTime_ == null ?
                io.dstore.values.TimestampValue.getDefaultInstance() : fileDateAndTime_;
          }
        }
        /**
         * <pre>
         * Erstellungsdatum der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.TimestampValue file_date_and_time = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder> 
            getFileDateAndTimeFieldBuilder() {
          if (fileDateAndTimeBuilder_ == null) {
            fileDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.TimestampValue, io.dstore.values.TimestampValue.Builder, io.dstore.values.TimestampValueOrBuilder>(
                    getFileDateAndTime(),
                    getParentForChildren(),
                    isClean());
            fileDateAndTime_ = null;
          }
          return fileDateAndTimeBuilder_;
        }

        private io.dstore.values.IntegerValue filesizeInKB_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> filesizeInKBBuilder_;
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public boolean hasFilesizeInKB() {
          return filesizeInKBBuilder_ != null || filesizeInKB_ != null;
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public io.dstore.values.IntegerValue getFilesizeInKB() {
          if (filesizeInKBBuilder_ == null) {
            return filesizeInKB_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : filesizeInKB_;
          } else {
            return filesizeInKBBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public Builder setFilesizeInKB(io.dstore.values.IntegerValue value) {
          if (filesizeInKBBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            filesizeInKB_ = value;
            onChanged();
          } else {
            filesizeInKBBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public Builder setFilesizeInKB(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = builderForValue.build();
            onChanged();
          } else {
            filesizeInKBBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public Builder mergeFilesizeInKB(io.dstore.values.IntegerValue value) {
          if (filesizeInKBBuilder_ == null) {
            if (filesizeInKB_ != null) {
              filesizeInKB_ =
                io.dstore.values.IntegerValue.newBuilder(filesizeInKB_).mergeFrom(value).buildPartial();
            } else {
              filesizeInKB_ = value;
            }
            onChanged();
          } else {
            filesizeInKBBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public Builder clearFilesizeInKB() {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKB_ = null;
            onChanged();
          } else {
            filesizeInKB_ = null;
            filesizeInKBBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getFilesizeInKBBuilder() {
          
          onChanged();
          return getFilesizeInKBFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getFilesizeInKBOrBuilder() {
          if (filesizeInKBBuilder_ != null) {
            return filesizeInKBBuilder_.getMessageOrBuilder();
          } else {
            return filesizeInKB_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : filesizeInKB_;
          }
        }
        /**
         * <pre>
         * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getFilesizeInKBFieldBuilder() {
          if (filesizeInKBBuilder_ == null) {
            filesizeInKBBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getFilesizeInKB(),
                    getParentForChildren(),
                    isClean());
            filesizeInKB_ = null;
          }
          return filesizeInKBBuilder_;
        }

        private io.dstore.values.IntegerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> sortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public io.dstore.values.IntegerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public Builder setSortNo(io.dstore.values.IntegerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public Builder setSortNo(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public Builder mergeSortNo(io.dstore.values.IntegerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.values.IntegerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue sort_no = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.values.StringValue communityBinaryCategory_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> communityBinaryCategoryBuilder_;
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public boolean hasCommunityBinaryCategory() {
          return communityBinaryCategoryBuilder_ != null || communityBinaryCategory_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public io.dstore.values.StringValue getCommunityBinaryCategory() {
          if (communityBinaryCategoryBuilder_ == null) {
            return communityBinaryCategory_ == null ? io.dstore.values.StringValue.getDefaultInstance() : communityBinaryCategory_;
          } else {
            return communityBinaryCategoryBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public Builder setCommunityBinaryCategory(io.dstore.values.StringValue value) {
          if (communityBinaryCategoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            communityBinaryCategory_ = value;
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public Builder setCommunityBinaryCategory(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = builderForValue.build();
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public Builder mergeCommunityBinaryCategory(io.dstore.values.StringValue value) {
          if (communityBinaryCategoryBuilder_ == null) {
            if (communityBinaryCategory_ != null) {
              communityBinaryCategory_ =
                io.dstore.values.StringValue.newBuilder(communityBinaryCategory_).mergeFrom(value).buildPartial();
            } else {
              communityBinaryCategory_ = value;
            }
            onChanged();
          } else {
            communityBinaryCategoryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public Builder clearCommunityBinaryCategory() {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategory_ = null;
            onChanged();
          } else {
            communityBinaryCategory_ = null;
            communityBinaryCategoryBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public io.dstore.values.StringValue.Builder getCommunityBinaryCategoryBuilder() {
          
          onChanged();
          return getCommunityBinaryCategoryFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        public io.dstore.values.StringValueOrBuilder getCommunityBinaryCategoryOrBuilder() {
          if (communityBinaryCategoryBuilder_ != null) {
            return communityBinaryCategoryBuilder_.getMessageOrBuilder();
          } else {
            return communityBinaryCategory_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : communityBinaryCategory_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue community_binary_category = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getCommunityBinaryCategoryFieldBuilder() {
          if (communityBinaryCategoryBuilder_ == null) {
            communityBinaryCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getCommunityBinaryCategory(),
                    getParentForChildren(),
                    isClean());
            communityBinaryCategory_ = null;
          }
          return communityBinaryCategoryBuilder_;
        }

        private io.dstore.values.IntegerValue communityBinaryCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> communityBinaryCategoryIdBuilder_;
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public boolean hasCommunityBinaryCategoryId() {
          return communityBinaryCategoryIdBuilder_ != null || communityBinaryCategoryId_ != null;
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public io.dstore.values.IntegerValue getCommunityBinaryCategoryId() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            return communityBinaryCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : communityBinaryCategoryId_;
          } else {
            return communityBinaryCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public Builder setCommunityBinaryCategoryId(io.dstore.values.IntegerValue value) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            communityBinaryCategoryId_ = value;
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public Builder setCommunityBinaryCategoryId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public Builder mergeCommunityBinaryCategoryId(io.dstore.values.IntegerValue value) {
          if (communityBinaryCategoryIdBuilder_ == null) {
            if (communityBinaryCategoryId_ != null) {
              communityBinaryCategoryId_ =
                io.dstore.values.IntegerValue.newBuilder(communityBinaryCategoryId_).mergeFrom(value).buildPartial();
            } else {
              communityBinaryCategoryId_ = value;
            }
            onChanged();
          } else {
            communityBinaryCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public Builder clearCommunityBinaryCategoryId() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryId_ = null;
            onChanged();
          } else {
            communityBinaryCategoryId_ = null;
            communityBinaryCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public io.dstore.values.IntegerValue.Builder getCommunityBinaryCategoryIdBuilder() {
          
          onChanged();
          return getCommunityBinaryCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getCommunityBinaryCategoryIdOrBuilder() {
          if (communityBinaryCategoryIdBuilder_ != null) {
            return communityBinaryCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return communityBinaryCategoryId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : communityBinaryCategoryId_;
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue community_binary_category_id = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getCommunityBinaryCategoryIdFieldBuilder() {
          if (communityBinaryCategoryIdBuilder_ == null) {
            communityBinaryCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getCommunityBinaryCategoryId(),
                    getParentForChildren(),
                    isClean());
            communityBinaryCategoryId_ = null;
          }
          return communityBinaryCategoryIdBuilder_;
        }

        private io.dstore.values.IntegerValue quotedFileSizeInKB_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> quotedFileSizeInKBBuilder_;
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public boolean hasQuotedFileSizeInKB() {
          return quotedFileSizeInKBBuilder_ != null || quotedFileSizeInKB_ != null;
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public io.dstore.values.IntegerValue getQuotedFileSizeInKB() {
          if (quotedFileSizeInKBBuilder_ == null) {
            return quotedFileSizeInKB_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : quotedFileSizeInKB_;
          } else {
            return quotedFileSizeInKBBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public Builder setQuotedFileSizeInKB(io.dstore.values.IntegerValue value) {
          if (quotedFileSizeInKBBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quotedFileSizeInKB_ = value;
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public Builder setQuotedFileSizeInKB(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = builderForValue.build();
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public Builder mergeQuotedFileSizeInKB(io.dstore.values.IntegerValue value) {
          if (quotedFileSizeInKBBuilder_ == null) {
            if (quotedFileSizeInKB_ != null) {
              quotedFileSizeInKB_ =
                io.dstore.values.IntegerValue.newBuilder(quotedFileSizeInKB_).mergeFrom(value).buildPartial();
            } else {
              quotedFileSizeInKB_ = value;
            }
            onChanged();
          } else {
            quotedFileSizeInKBBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public Builder clearQuotedFileSizeInKB() {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKB_ = null;
            onChanged();
          } else {
            quotedFileSizeInKB_ = null;
            quotedFileSizeInKBBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public io.dstore.values.IntegerValue.Builder getQuotedFileSizeInKBBuilder() {
          
          onChanged();
          return getQuotedFileSizeInKBFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getQuotedFileSizeInKBOrBuilder() {
          if (quotedFileSizeInKBBuilder_ != null) {
            return quotedFileSizeInKBBuilder_.getMessageOrBuilder();
          } else {
            return quotedFileSizeInKB_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : quotedFileSizeInKB_;
          }
        }
        /**
         * <pre>
         * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getQuotedFileSizeInKBFieldBuilder() {
          if (quotedFileSizeInKBBuilder_ == null) {
            quotedFileSizeInKBBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getQuotedFileSizeInKB(),
                    getParentForChildren(),
                    isClean());
            quotedFileSizeInKB_ = null;
          }
          return quotedFileSizeInKBBuilder_;
        }

        private io.dstore.values.StringValue fileDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> fileDateAndTimeCharBuilder_;
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public boolean hasFileDateAndTimeChar() {
          return fileDateAndTimeCharBuilder_ != null || fileDateAndTimeChar_ != null;
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public io.dstore.values.StringValue getFileDateAndTimeChar() {
          if (fileDateAndTimeCharBuilder_ == null) {
            return fileDateAndTimeChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : fileDateAndTimeChar_;
          } else {
            return fileDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public Builder setFileDateAndTimeChar(io.dstore.values.StringValue value) {
          if (fileDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fileDateAndTimeChar_ = value;
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public Builder setFileDateAndTimeChar(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public Builder mergeFileDateAndTimeChar(io.dstore.values.StringValue value) {
          if (fileDateAndTimeCharBuilder_ == null) {
            if (fileDateAndTimeChar_ != null) {
              fileDateAndTimeChar_ =
                io.dstore.values.StringValue.newBuilder(fileDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              fileDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            fileDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public Builder clearFileDateAndTimeChar() {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeChar_ = null;
            onChanged();
          } else {
            fileDateAndTimeChar_ = null;
            fileDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public io.dstore.values.StringValue.Builder getFileDateAndTimeCharBuilder() {
          
          onChanged();
          return getFileDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        public io.dstore.values.StringValueOrBuilder getFileDateAndTimeCharOrBuilder() {
          if (fileDateAndTimeCharBuilder_ != null) {
            return fileDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return fileDateAndTimeChar_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : fileDateAndTimeChar_;
          }
        }
        /**
         * <pre>
         * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue file_date_and_time_char = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getFileDateAndTimeCharFieldBuilder() {
          if (fileDateAndTimeCharBuilder_ == null) {
            fileDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getFileDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            fileDateAndTimeChar_ = null;
          }
          return fileDateAndTimeCharBuilder_;
        }

        private io.dstore.values.StringValue mD5Hash_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> mD5HashBuilder_;
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public boolean hasMD5Hash() {
          return mD5HashBuilder_ != null || mD5Hash_ != null;
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public io.dstore.values.StringValue getMD5Hash() {
          if (mD5HashBuilder_ == null) {
            return mD5Hash_ == null ? io.dstore.values.StringValue.getDefaultInstance() : mD5Hash_;
          } else {
            return mD5HashBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public Builder setMD5Hash(io.dstore.values.StringValue value) {
          if (mD5HashBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mD5Hash_ = value;
            onChanged();
          } else {
            mD5HashBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public Builder setMD5Hash(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = builderForValue.build();
            onChanged();
          } else {
            mD5HashBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public Builder mergeMD5Hash(io.dstore.values.StringValue value) {
          if (mD5HashBuilder_ == null) {
            if (mD5Hash_ != null) {
              mD5Hash_ =
                io.dstore.values.StringValue.newBuilder(mD5Hash_).mergeFrom(value).buildPartial();
            } else {
              mD5Hash_ = value;
            }
            onChanged();
          } else {
            mD5HashBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public Builder clearMD5Hash() {
          if (mD5HashBuilder_ == null) {
            mD5Hash_ = null;
            onChanged();
          } else {
            mD5Hash_ = null;
            mD5HashBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public io.dstore.values.StringValue.Builder getMD5HashBuilder() {
          
          onChanged();
          return getMD5HashFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        public io.dstore.values.StringValueOrBuilder getMD5HashOrBuilder() {
          if (mD5HashBuilder_ != null) {
            return mD5HashBuilder_.getMessageOrBuilder();
          } else {
            return mD5Hash_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : mD5Hash_;
          }
        }
        /**
         * <pre>
         * "MD5-Hash" der durch "BinaryID" referenzierten Datei
         * </pre>
         *
         * <code>optional .dstore.values.StringValue m_d5_hash = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getMD5HashFieldBuilder() {
          if (mD5HashBuilder_ == null) {
            mD5HashBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getMD5Hash(),
                    getParentForChildren(),
                    isClean());
            mD5Hash_ = null;
          }
          return mD5HashBuilder_;
        }

        private io.dstore.values.StringValue inputDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> inputDateAndTimeCharBuilder_;
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public boolean hasInputDateAndTimeChar() {
          return inputDateAndTimeCharBuilder_ != null || inputDateAndTimeChar_ != null;
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public io.dstore.values.StringValue getInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            return inputDateAndTimeChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : inputDateAndTimeChar_;
          } else {
            return inputDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public Builder setInputDateAndTimeChar(io.dstore.values.StringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTimeChar_ = value;
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public Builder setInputDateAndTimeChar(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public Builder mergeInputDateAndTimeChar(io.dstore.values.StringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (inputDateAndTimeChar_ != null) {
              inputDateAndTimeChar_ =
                io.dstore.values.StringValue.newBuilder(inputDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public Builder clearInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
            onChanged();
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public io.dstore.values.StringValue.Builder getInputDateAndTimeCharBuilder() {
          
          onChanged();
          return getInputDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        public io.dstore.values.StringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
          if (inputDateAndTimeCharBuilder_ != null) {
            return inputDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTimeChar_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : inputDateAndTimeChar_;
          }
        }
        /**
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue input_date_and_time_char = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getInputDateAndTimeCharFieldBuilder() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getInputDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTimeChar_ = null;
          }
          return inputDateAndTimeCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row)
      private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row();
      }

      public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response other = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.co_GetBinariesOfOneMember_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.class, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response build() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response buildPartial() {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response result = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response other) {
        if (other == io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.Row.Builder, io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.co_GetBinariesOfOneMember_Ad.Response)
    private static final io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response();
    }

    public static io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.CoGetBinariesOfOneMemberAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/co_GetBinarie" +
      "sOfOneMember_Ad.proto\022*dstore.engine.co_" +
      "GetBinariesOfOneMember_Ad\032\023dstore/values" +
      ".proto\032\032dstore/engine/engine.proto\"\270\001\n\nP" +
      "arameters\0228\n\023community_member_id\030\001 \001(\0132\033" +
      ".dstore.values.IntegerValue\022!\n\030community" +
      "_member_id_null\030\351\007 \001(\010\0221\n\014community_id\030\002" +
      " \001(\0132\033.dstore.values.IntegerValue\022\032\n\021com" +
      "munity_id_null\030\352\007 \001(\010\"\271\007\n\010Response\0228\n\020me" +
      "ta_information\030\002 \003(\0132\036.dstore.engine.Met",
      "aInformation\022\'\n\007message\030\003 \003(\0132\026.dstore.e" +
      "ngine.Message\022E\n\003row\030\004 \003(\01328.dstore.engi" +
      "ne.co_GetBinariesOfOneMember_Ad.Response" +
      ".Row\032\202\006\n\003Row\022\017\n\006row_id\030\220N \001(\005\022/\n\tbinary_" +
      "id\030\221N \001(\0132\033.dstore.values.IntegerValue\0227" +
      "\n\022binary_description\030\222N \001(\0132\032.dstore.val" +
      "ues.StringValue\022;\n\023input_date_and_time\030\223" +
      "N \001(\0132\035.dstore.values.TimestampValue\0221\n\014" +
      "content_type\030\224N \001(\0132\032.dstore.values.Stri" +
      "ngValue\022:\n\022file_date_and_time\030\225N \001(\0132\035.d",
      "store.values.TimestampValue\0225\n\017filesize_" +
      "in_k_b\030\226N \001(\0132\033.dstore.values.IntegerVal" +
      "ue\022-\n\007sort_no\030\227N \001(\0132\033.dstore.values.Int" +
      "egerValue\022>\n\031community_binary_category\030\230" +
      "N \001(\0132\032.dstore.values.StringValue\022B\n\034com" +
      "munity_binary_category_id\030\231N \001(\0132\033.dstor" +
      "e.values.IntegerValue\022=\n\027quoted_file_siz" +
      "e_in_k_b\030\232N \001(\0132\033.dstore.values.IntegerV" +
      "alue\022<\n\027file_date_and_time_char\030\233N \001(\0132\032" +
      ".dstore.values.StringValue\022.\n\tm_d5_hash\030",
      "\234N \001(\0132\032.dstore.values.StringValue\022=\n\030in" +
      "put_date_and_time_char\030\235N \001(\0132\032.dstore.v" +
      "alues.StringValueB]\n\033io.dstore.engine.pr" +
      "oceduresZ>gosdk.dstore.de/engine/procedu" +
      "res/co_GetBinariesOfOneMember_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Parameters_descriptor,
        new java.lang.String[] { "CommunityMemberId", "CommunityMemberIdNull", "CommunityId", "CommunityIdNull", });
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_co_GetBinariesOfOneMember_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "BinaryId", "BinaryDescription", "InputDateAndTime", "ContentType", "FileDateAndTime", "FilesizeInKB", "SortNo", "CommunityBinaryCategory", "CommunityBinaryCategoryId", "QuotedFileSizeInKB", "FileDateAndTimeChar", "MD5Hash", "InputDateAndTimeChar", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
