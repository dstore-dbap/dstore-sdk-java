// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetCurrentLocks_Ad.proto

package io.dstore.engine.procedures;

public final class MiGetCurrentLocksAd {
  private MiGetCurrentLocksAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetCurrentLocks_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    boolean hasServerProcessId();
    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    io.dstore.values.IntegerValue getServerProcessId();
    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder();

    /**
     * <code>optional bool server_process_id_null = 1001;</code>
     */
    boolean getServerProcessIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetCurrentLocks_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      serverProcessIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (serverProcessId_ != null) {
                subBuilder = serverProcessId_.toBuilder();
              }
              serverProcessId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverProcessId_);
                serverProcessId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              serverProcessIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.Builder.class);
    }

    public static final int SERVER_PROCESS_ID_FIELD_NUMBER = 1;
    private io.dstore.values.IntegerValue serverProcessId_;
    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    public boolean hasServerProcessId() {
      return serverProcessId_ != null;
    }
    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    public io.dstore.values.IntegerValue getServerProcessId() {
      return serverProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
    }
    /**
     * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder() {
      return getServerProcessId();
    }

    public static final int SERVER_PROCESS_ID_NULL_FIELD_NUMBER = 1001;
    private boolean serverProcessIdNull_;
    /**
     * <code>optional bool server_process_id_null = 1001;</code>
     */
    public boolean getServerProcessIdNull() {
      return serverProcessIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serverProcessId_ != null) {
        output.writeMessage(1, getServerProcessId());
      }
      if (serverProcessIdNull_ != false) {
        output.writeBool(1001, serverProcessIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serverProcessId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getServerProcessId());
      }
      if (serverProcessIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, serverProcessIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters other = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters) obj;

      boolean result = true;
      result = result && (hasServerProcessId() == other.hasServerProcessId());
      if (hasServerProcessId()) {
        result = result && getServerProcessId()
            .equals(other.getServerProcessId());
      }
      result = result && (getServerProcessIdNull()
          == other.getServerProcessIdNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasServerProcessId()) {
        hash = (37 * hash) + SERVER_PROCESS_ID_FIELD_NUMBER;
        hash = (53 * hash) + getServerProcessId().hashCode();
      }
      hash = (37 * hash) + SERVER_PROCESS_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getServerProcessIdNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetCurrentLocks_Ad.Parameters)
        io.dstore.engine.procedures.MiGetCurrentLocksAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (serverProcessIdBuilder_ == null) {
          serverProcessId_ = null;
        } else {
          serverProcessId_ = null;
          serverProcessIdBuilder_ = null;
        }
        serverProcessIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters build() {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters buildPartial() {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters result = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters(this);
        if (serverProcessIdBuilder_ == null) {
          result.serverProcessId_ = serverProcessId_;
        } else {
          result.serverProcessId_ = serverProcessIdBuilder_.build();
        }
        result.serverProcessIdNull_ = serverProcessIdNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters other) {
        if (other == io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters.getDefaultInstance()) return this;
        if (other.hasServerProcessId()) {
          mergeServerProcessId(other.getServerProcessId());
        }
        if (other.getServerProcessIdNull() != false) {
          setServerProcessIdNull(other.getServerProcessIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.IntegerValue serverProcessId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> serverProcessIdBuilder_;
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public boolean hasServerProcessId() {
        return serverProcessIdBuilder_ != null || serverProcessId_ != null;
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public io.dstore.values.IntegerValue getServerProcessId() {
        if (serverProcessIdBuilder_ == null) {
          return serverProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
        } else {
          return serverProcessIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public Builder setServerProcessId(io.dstore.values.IntegerValue value) {
        if (serverProcessIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverProcessId_ = value;
          onChanged();
        } else {
          serverProcessIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public Builder setServerProcessId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (serverProcessIdBuilder_ == null) {
          serverProcessId_ = builderForValue.build();
          onChanged();
        } else {
          serverProcessIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public Builder mergeServerProcessId(io.dstore.values.IntegerValue value) {
        if (serverProcessIdBuilder_ == null) {
          if (serverProcessId_ != null) {
            serverProcessId_ =
              io.dstore.values.IntegerValue.newBuilder(serverProcessId_).mergeFrom(value).buildPartial();
          } else {
            serverProcessId_ = value;
          }
          onChanged();
        } else {
          serverProcessIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public Builder clearServerProcessId() {
        if (serverProcessIdBuilder_ == null) {
          serverProcessId_ = null;
          onChanged();
        } else {
          serverProcessId_ = null;
          serverProcessIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public io.dstore.values.IntegerValue.Builder getServerProcessIdBuilder() {
        
        onChanged();
        return getServerProcessIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder() {
        if (serverProcessIdBuilder_ != null) {
          return serverProcessIdBuilder_.getMessageOrBuilder();
        } else {
          return serverProcessId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
        }
      }
      /**
       * <code>optional .dstore.values.IntegerValue server_process_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getServerProcessIdFieldBuilder() {
        if (serverProcessIdBuilder_ == null) {
          serverProcessIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getServerProcessId(),
                  getParentForChildren(),
                  isClean());
          serverProcessId_ = null;
        }
        return serverProcessIdBuilder_;
      }

      private boolean serverProcessIdNull_ ;
      /**
       * <code>optional bool server_process_id_null = 1001;</code>
       */
      public boolean getServerProcessIdNull() {
        return serverProcessIdNull_;
      }
      /**
       * <code>optional bool server_process_id_null = 1001;</code>
       */
      public Builder setServerProcessIdNull(boolean value) {
        
        serverProcessIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool server_process_id_null = 1001;</code>
       */
      public Builder clearServerProcessIdNull() {
        
        serverProcessIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetCurrentLocks_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetCurrentLocks_Ad.Parameters)
    private static final io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters();
    }

    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetCurrentLocksAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetCurrentLocks_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetCurrentLocks_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetCurrentLocks_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      boolean hasPageId();
      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      io.dstore.values.IntegerValue getPageId();
      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getPageIdOrBuilder();

      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      boolean hasLoginName();
      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      io.dstore.values.StringValue getLoginName();
      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      io.dstore.values.StringValueOrBuilder getLoginNameOrBuilder();

      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      boolean hasTableName();
      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      io.dstore.values.StringValue getTableName();
      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      io.dstore.values.StringValueOrBuilder getTableNameOrBuilder();

      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      boolean hasProcessStatus();
      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      io.dstore.values.StringValue getProcessStatus();
      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      io.dstore.values.StringValueOrBuilder getProcessStatusOrBuilder();

      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      boolean hasCommand();
      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      io.dstore.values.StringValue getCommand();
      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      io.dstore.values.StringValueOrBuilder getCommandOrBuilder();

      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      boolean hasBlockingProcessId();
      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      io.dstore.values.IntegerValue getBlockingProcessId();
      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getBlockingProcessIdOrBuilder();

      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      boolean hasServerProcessId();
      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      io.dstore.values.IntegerValue getServerProcessId();
      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder();

      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      boolean hasDatabaseName();
      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      io.dstore.values.StringValue getDatabaseName();
      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder();

      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      boolean hasLockClass();
      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      io.dstore.values.StringValue getLockClass();
      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      io.dstore.values.StringValueOrBuilder getLockClassOrBuilder();

      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      boolean hasLockType();
      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      io.dstore.values.StringValue getLockType();
      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      io.dstore.values.StringValueOrBuilder getLockTypeOrBuilder();

      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      boolean hasHostName();
      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      io.dstore.values.StringValue getHostName();
      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      io.dstore.values.StringValueOrBuilder getHostNameOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetCurrentLocks_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (pageId_ != null) {
                  subBuilder = pageId_.toBuilder();
                }
                pageId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(pageId_);
                  pageId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (loginName_ != null) {
                  subBuilder = loginName_.toBuilder();
                }
                loginName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(loginName_);
                  loginName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (tableName_ != null) {
                  subBuilder = tableName_.toBuilder();
                }
                tableName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(tableName_);
                  tableName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (processStatus_ != null) {
                  subBuilder = processStatus_.toBuilder();
                }
                processStatus_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(processStatus_);
                  processStatus_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (command_ != null) {
                  subBuilder = command_.toBuilder();
                }
                command_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(command_);
                  command_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (blockingProcessId_ != null) {
                  subBuilder = blockingProcessId_.toBuilder();
                }
                blockingProcessId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(blockingProcessId_);
                  blockingProcessId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (serverProcessId_ != null) {
                  subBuilder = serverProcessId_.toBuilder();
                }
                serverProcessId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(serverProcessId_);
                  serverProcessId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (databaseName_ != null) {
                  subBuilder = databaseName_.toBuilder();
                }
                databaseName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(databaseName_);
                  databaseName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (lockClass_ != null) {
                  subBuilder = lockClass_.toBuilder();
                }
                lockClass_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lockClass_);
                  lockClass_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (lockType_ != null) {
                  subBuilder = lockType_.toBuilder();
                }
                lockType_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lockType_);
                  lockType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (hostName_ != null) {
                  subBuilder = hostName_.toBuilder();
                }
                hostName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hostName_);
                  hostName_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PAGE_ID_FIELD_NUMBER = 10001;
      private io.dstore.values.IntegerValue pageId_;
      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      public boolean hasPageId() {
        return pageId_ != null;
      }
      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      public io.dstore.values.IntegerValue getPageId() {
        return pageId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : pageId_;
      }
      /**
       * <pre>
       * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getPageIdOrBuilder() {
        return getPageId();
      }

      public static final int LOGIN_NAME_FIELD_NUMBER = 10002;
      private io.dstore.values.StringValue loginName_;
      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      public boolean hasLoginName() {
        return loginName_ != null;
      }
      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      public io.dstore.values.StringValue getLoginName() {
        return loginName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : loginName_;
      }
      /**
       * <pre>
       * Unter welchem "login" wurde der Prozeß eröffnet
       * </pre>
       *
       * <code>optional .dstore.values.StringValue login_name = 10002;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLoginNameOrBuilder() {
        return getLoginName();
      }

      public static final int TABLE_NAME_FIELD_NUMBER = 10003;
      private io.dstore.values.StringValue tableName_;
      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      public boolean hasTableName() {
        return tableName_ != null;
      }
      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      public io.dstore.values.StringValue getTableName() {
        return tableName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : tableName_;
      }
      /**
       * <pre>
       * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
       * </pre>
       *
       * <code>optional .dstore.values.StringValue table_name = 10003;</code>
       */
      public io.dstore.values.StringValueOrBuilder getTableNameOrBuilder() {
        return getTableName();
      }

      public static final int PROCESS_STATUS_FIELD_NUMBER = 10004;
      private io.dstore.values.StringValue processStatus_;
      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      public boolean hasProcessStatus() {
        return processStatus_ != null;
      }
      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      public io.dstore.values.StringValue getProcessStatus() {
        return processStatus_ == null ? io.dstore.values.StringValue.getDefaultInstance() : processStatus_;
      }
      /**
       * <pre>
       * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue process_status = 10004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcessStatusOrBuilder() {
        return getProcessStatus();
      }

      public static final int COMMAND_FIELD_NUMBER = 10005;
      private io.dstore.values.StringValue command_;
      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      public boolean hasCommand() {
        return command_ != null;
      }
      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      public io.dstore.values.StringValue getCommand() {
        return command_ == null ? io.dstore.values.StringValue.getDefaultInstance() : command_;
      }
      /**
       * <pre>
       * Was für eine Art von Kommando wird gerade ausgeführt
       * </pre>
       *
       * <code>optional .dstore.values.StringValue command = 10005;</code>
       */
      public io.dstore.values.StringValueOrBuilder getCommandOrBuilder() {
        return getCommand();
      }

      public static final int BLOCKING_PROCESS_ID_FIELD_NUMBER = 10006;
      private io.dstore.values.IntegerValue blockingProcessId_;
      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      public boolean hasBlockingProcessId() {
        return blockingProcessId_ != null;
      }
      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      public io.dstore.values.IntegerValue getBlockingProcessId() {
        return blockingProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : blockingProcessId_;
      }
      /**
       * <pre>
       * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getBlockingProcessIdOrBuilder() {
        return getBlockingProcessId();
      }

      public static final int SERVER_PROCESS_ID_FIELD_NUMBER = 10007;
      private io.dstore.values.IntegerValue serverProcessId_;
      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      public boolean hasServerProcessId() {
        return serverProcessId_ != null;
      }
      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      public io.dstore.values.IntegerValue getServerProcessId() {
        return serverProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
      }
      /**
       * <pre>
       * Die Server-Prozeß-ID
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder() {
        return getServerProcessId();
      }

      public static final int DATABASE_NAME_FIELD_NUMBER = 10008;
      private io.dstore.values.StringValue databaseName_;
      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      public boolean hasDatabaseName() {
        return databaseName_ != null;
      }
      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      public io.dstore.values.StringValue getDatabaseName() {
        return databaseName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
      }
      /**
       * <pre>
       * Name der Datenbank, auf der der Prozeß gerade aktiv ist
       * </pre>
       *
       * <code>optional .dstore.values.StringValue database_name = 10008;</code>
       */
      public io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder() {
        return getDatabaseName();
      }

      public static final int LOCK_CLASS_FIELD_NUMBER = 10009;
      private io.dstore.values.StringValue lockClass_;
      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      public boolean hasLockClass() {
        return lockClass_ != null;
      }
      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      public io.dstore.values.StringValue getLockClass() {
        return lockClass_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lockClass_;
      }
      /**
       * <pre>
       * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLockClassOrBuilder() {
        return getLockClass();
      }

      public static final int LOCK_TYPE_FIELD_NUMBER = 10010;
      private io.dstore.values.StringValue lockType_;
      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      public boolean hasLockType() {
        return lockType_ != null;
      }
      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      public io.dstore.values.StringValue getLockType() {
        return lockType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lockType_;
      }
      /**
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLockTypeOrBuilder() {
        return getLockType();
      }

      public static final int HOST_NAME_FIELD_NUMBER = 10011;
      private io.dstore.values.StringValue hostName_;
      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      public boolean hasHostName() {
        return hostName_ != null;
      }
      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      public io.dstore.values.StringValue getHostName() {
        return hostName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : hostName_;
      }
      /**
       * <pre>
       * Name des Host-Rechners, der den Prozeß gestartet hat
       * </pre>
       *
       * <code>optional .dstore.values.StringValue host_name = 10011;</code>
       */
      public io.dstore.values.StringValueOrBuilder getHostNameOrBuilder() {
        return getHostName();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (pageId_ != null) {
          output.writeMessage(10001, getPageId());
        }
        if (loginName_ != null) {
          output.writeMessage(10002, getLoginName());
        }
        if (tableName_ != null) {
          output.writeMessage(10003, getTableName());
        }
        if (processStatus_ != null) {
          output.writeMessage(10004, getProcessStatus());
        }
        if (command_ != null) {
          output.writeMessage(10005, getCommand());
        }
        if (blockingProcessId_ != null) {
          output.writeMessage(10006, getBlockingProcessId());
        }
        if (serverProcessId_ != null) {
          output.writeMessage(10007, getServerProcessId());
        }
        if (databaseName_ != null) {
          output.writeMessage(10008, getDatabaseName());
        }
        if (lockClass_ != null) {
          output.writeMessage(10009, getLockClass());
        }
        if (lockType_ != null) {
          output.writeMessage(10010, getLockType());
        }
        if (hostName_ != null) {
          output.writeMessage(10011, getHostName());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (pageId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getPageId());
        }
        if (loginName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getLoginName());
        }
        if (tableName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getTableName());
        }
        if (processStatus_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getProcessStatus());
        }
        if (command_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getCommand());
        }
        if (blockingProcessId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getBlockingProcessId());
        }
        if (serverProcessId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getServerProcessId());
        }
        if (databaseName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getDatabaseName());
        }
        if (lockClass_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getLockClass());
        }
        if (lockType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getLockType());
        }
        if (hostName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getHostName());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row other = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasPageId() == other.hasPageId());
        if (hasPageId()) {
          result = result && getPageId()
              .equals(other.getPageId());
        }
        result = result && (hasLoginName() == other.hasLoginName());
        if (hasLoginName()) {
          result = result && getLoginName()
              .equals(other.getLoginName());
        }
        result = result && (hasTableName() == other.hasTableName());
        if (hasTableName()) {
          result = result && getTableName()
              .equals(other.getTableName());
        }
        result = result && (hasProcessStatus() == other.hasProcessStatus());
        if (hasProcessStatus()) {
          result = result && getProcessStatus()
              .equals(other.getProcessStatus());
        }
        result = result && (hasCommand() == other.hasCommand());
        if (hasCommand()) {
          result = result && getCommand()
              .equals(other.getCommand());
        }
        result = result && (hasBlockingProcessId() == other.hasBlockingProcessId());
        if (hasBlockingProcessId()) {
          result = result && getBlockingProcessId()
              .equals(other.getBlockingProcessId());
        }
        result = result && (hasServerProcessId() == other.hasServerProcessId());
        if (hasServerProcessId()) {
          result = result && getServerProcessId()
              .equals(other.getServerProcessId());
        }
        result = result && (hasDatabaseName() == other.hasDatabaseName());
        if (hasDatabaseName()) {
          result = result && getDatabaseName()
              .equals(other.getDatabaseName());
        }
        result = result && (hasLockClass() == other.hasLockClass());
        if (hasLockClass()) {
          result = result && getLockClass()
              .equals(other.getLockClass());
        }
        result = result && (hasLockType() == other.hasLockType());
        if (hasLockType()) {
          result = result && getLockType()
              .equals(other.getLockType());
        }
        result = result && (hasHostName() == other.hasHostName());
        if (hasHostName()) {
          result = result && getHostName()
              .equals(other.getHostName());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasPageId()) {
          hash = (37 * hash) + PAGE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPageId().hashCode();
        }
        if (hasLoginName()) {
          hash = (37 * hash) + LOGIN_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getLoginName().hashCode();
        }
        if (hasTableName()) {
          hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getTableName().hashCode();
        }
        if (hasProcessStatus()) {
          hash = (37 * hash) + PROCESS_STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getProcessStatus().hashCode();
        }
        if (hasCommand()) {
          hash = (37 * hash) + COMMAND_FIELD_NUMBER;
          hash = (53 * hash) + getCommand().hashCode();
        }
        if (hasBlockingProcessId()) {
          hash = (37 * hash) + BLOCKING_PROCESS_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBlockingProcessId().hashCode();
        }
        if (hasServerProcessId()) {
          hash = (37 * hash) + SERVER_PROCESS_ID_FIELD_NUMBER;
          hash = (53 * hash) + getServerProcessId().hashCode();
        }
        if (hasDatabaseName()) {
          hash = (37 * hash) + DATABASE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getDatabaseName().hashCode();
        }
        if (hasLockClass()) {
          hash = (37 * hash) + LOCK_CLASS_FIELD_NUMBER;
          hash = (53 * hash) + getLockClass().hashCode();
        }
        if (hasLockType()) {
          hash = (37 * hash) + LOCK_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLockType().hashCode();
        }
        if (hasHostName()) {
          hash = (37 * hash) + HOST_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getHostName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetCurrentLocks_Ad.Response.Row)
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (pageIdBuilder_ == null) {
            pageId_ = null;
          } else {
            pageId_ = null;
            pageIdBuilder_ = null;
          }
          if (loginNameBuilder_ == null) {
            loginName_ = null;
          } else {
            loginName_ = null;
            loginNameBuilder_ = null;
          }
          if (tableNameBuilder_ == null) {
            tableName_ = null;
          } else {
            tableName_ = null;
            tableNameBuilder_ = null;
          }
          if (processStatusBuilder_ == null) {
            processStatus_ = null;
          } else {
            processStatus_ = null;
            processStatusBuilder_ = null;
          }
          if (commandBuilder_ == null) {
            command_ = null;
          } else {
            command_ = null;
            commandBuilder_ = null;
          }
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = null;
          } else {
            blockingProcessId_ = null;
            blockingProcessIdBuilder_ = null;
          }
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = null;
          } else {
            serverProcessId_ = null;
            serverProcessIdBuilder_ = null;
          }
          if (databaseNameBuilder_ == null) {
            databaseName_ = null;
          } else {
            databaseName_ = null;
            databaseNameBuilder_ = null;
          }
          if (lockClassBuilder_ == null) {
            lockClass_ = null;
          } else {
            lockClass_ = null;
            lockClassBuilder_ = null;
          }
          if (lockTypeBuilder_ == null) {
            lockType_ = null;
          } else {
            lockType_ = null;
            lockTypeBuilder_ = null;
          }
          if (hostNameBuilder_ == null) {
            hostName_ = null;
          } else {
            hostName_ = null;
            hostNameBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row build() {
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row result = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (pageIdBuilder_ == null) {
            result.pageId_ = pageId_;
          } else {
            result.pageId_ = pageIdBuilder_.build();
          }
          if (loginNameBuilder_ == null) {
            result.loginName_ = loginName_;
          } else {
            result.loginName_ = loginNameBuilder_.build();
          }
          if (tableNameBuilder_ == null) {
            result.tableName_ = tableName_;
          } else {
            result.tableName_ = tableNameBuilder_.build();
          }
          if (processStatusBuilder_ == null) {
            result.processStatus_ = processStatus_;
          } else {
            result.processStatus_ = processStatusBuilder_.build();
          }
          if (commandBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = commandBuilder_.build();
          }
          if (blockingProcessIdBuilder_ == null) {
            result.blockingProcessId_ = blockingProcessId_;
          } else {
            result.blockingProcessId_ = blockingProcessIdBuilder_.build();
          }
          if (serverProcessIdBuilder_ == null) {
            result.serverProcessId_ = serverProcessId_;
          } else {
            result.serverProcessId_ = serverProcessIdBuilder_.build();
          }
          if (databaseNameBuilder_ == null) {
            result.databaseName_ = databaseName_;
          } else {
            result.databaseName_ = databaseNameBuilder_.build();
          }
          if (lockClassBuilder_ == null) {
            result.lockClass_ = lockClass_;
          } else {
            result.lockClass_ = lockClassBuilder_.build();
          }
          if (lockTypeBuilder_ == null) {
            result.lockType_ = lockType_;
          } else {
            result.lockType_ = lockTypeBuilder_.build();
          }
          if (hostNameBuilder_ == null) {
            result.hostName_ = hostName_;
          } else {
            result.hostName_ = hostNameBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasPageId()) {
            mergePageId(other.getPageId());
          }
          if (other.hasLoginName()) {
            mergeLoginName(other.getLoginName());
          }
          if (other.hasTableName()) {
            mergeTableName(other.getTableName());
          }
          if (other.hasProcessStatus()) {
            mergeProcessStatus(other.getProcessStatus());
          }
          if (other.hasCommand()) {
            mergeCommand(other.getCommand());
          }
          if (other.hasBlockingProcessId()) {
            mergeBlockingProcessId(other.getBlockingProcessId());
          }
          if (other.hasServerProcessId()) {
            mergeServerProcessId(other.getServerProcessId());
          }
          if (other.hasDatabaseName()) {
            mergeDatabaseName(other.getDatabaseName());
          }
          if (other.hasLockClass()) {
            mergeLockClass(other.getLockClass());
          }
          if (other.hasLockType()) {
            mergeLockType(other.getLockType());
          }
          if (other.hasHostName()) {
            mergeHostName(other.getHostName());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.IntegerValue pageId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> pageIdBuilder_;
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public boolean hasPageId() {
          return pageIdBuilder_ != null || pageId_ != null;
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public io.dstore.values.IntegerValue getPageId() {
          if (pageIdBuilder_ == null) {
            return pageId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : pageId_;
          } else {
            return pageIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public Builder setPageId(io.dstore.values.IntegerValue value) {
          if (pageIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pageId_ = value;
            onChanged();
          } else {
            pageIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public Builder setPageId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (pageIdBuilder_ == null) {
            pageId_ = builderForValue.build();
            onChanged();
          } else {
            pageIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public Builder mergePageId(io.dstore.values.IntegerValue value) {
          if (pageIdBuilder_ == null) {
            if (pageId_ != null) {
              pageId_ =
                io.dstore.values.IntegerValue.newBuilder(pageId_).mergeFrom(value).buildPartial();
            } else {
              pageId_ = value;
            }
            onChanged();
          } else {
            pageIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public Builder clearPageId() {
          if (pageIdBuilder_ == null) {
            pageId_ = null;
            onChanged();
          } else {
            pageId_ = null;
            pageIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public io.dstore.values.IntegerValue.Builder getPageIdBuilder() {
          
          onChanged();
          return getPageIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getPageIdOrBuilder() {
          if (pageIdBuilder_ != null) {
            return pageIdBuilder_.getMessageOrBuilder();
          } else {
            return pageId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : pageId_;
          }
        }
        /**
         * <pre>
         * ID der Page (der Tabelle "TableName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue page_id = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getPageIdFieldBuilder() {
          if (pageIdBuilder_ == null) {
            pageIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getPageId(),
                    getParentForChildren(),
                    isClean());
            pageId_ = null;
          }
          return pageIdBuilder_;
        }

        private io.dstore.values.StringValue loginName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> loginNameBuilder_;
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public boolean hasLoginName() {
          return loginNameBuilder_ != null || loginName_ != null;
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public io.dstore.values.StringValue getLoginName() {
          if (loginNameBuilder_ == null) {
            return loginName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : loginName_;
          } else {
            return loginNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public Builder setLoginName(io.dstore.values.StringValue value) {
          if (loginNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            loginName_ = value;
            onChanged();
          } else {
            loginNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public Builder setLoginName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (loginNameBuilder_ == null) {
            loginName_ = builderForValue.build();
            onChanged();
          } else {
            loginNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public Builder mergeLoginName(io.dstore.values.StringValue value) {
          if (loginNameBuilder_ == null) {
            if (loginName_ != null) {
              loginName_ =
                io.dstore.values.StringValue.newBuilder(loginName_).mergeFrom(value).buildPartial();
            } else {
              loginName_ = value;
            }
            onChanged();
          } else {
            loginNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public Builder clearLoginName() {
          if (loginNameBuilder_ == null) {
            loginName_ = null;
            onChanged();
          } else {
            loginName_ = null;
            loginNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public io.dstore.values.StringValue.Builder getLoginNameBuilder() {
          
          onChanged();
          return getLoginNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLoginNameOrBuilder() {
          if (loginNameBuilder_ != null) {
            return loginNameBuilder_.getMessageOrBuilder();
          } else {
            return loginName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : loginName_;
          }
        }
        /**
         * <pre>
         * Unter welchem "login" wurde der Prozeß eröffnet
         * </pre>
         *
         * <code>optional .dstore.values.StringValue login_name = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLoginNameFieldBuilder() {
          if (loginNameBuilder_ == null) {
            loginNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLoginName(),
                    getParentForChildren(),
                    isClean());
            loginName_ = null;
          }
          return loginNameBuilder_;
        }

        private io.dstore.values.StringValue tableName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> tableNameBuilder_;
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public boolean hasTableName() {
          return tableNameBuilder_ != null || tableName_ != null;
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public io.dstore.values.StringValue getTableName() {
          if (tableNameBuilder_ == null) {
            return tableName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : tableName_;
          } else {
            return tableNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public Builder setTableName(io.dstore.values.StringValue value) {
          if (tableNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            tableName_ = value;
            onChanged();
          } else {
            tableNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public Builder setTableName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (tableNameBuilder_ == null) {
            tableName_ = builderForValue.build();
            onChanged();
          } else {
            tableNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public Builder mergeTableName(io.dstore.values.StringValue value) {
          if (tableNameBuilder_ == null) {
            if (tableName_ != null) {
              tableName_ =
                io.dstore.values.StringValue.newBuilder(tableName_).mergeFrom(value).buildPartial();
            } else {
              tableName_ = value;
            }
            onChanged();
          } else {
            tableNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public Builder clearTableName() {
          if (tableNameBuilder_ == null) {
            tableName_ = null;
            onChanged();
          } else {
            tableName_ = null;
            tableNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public io.dstore.values.StringValue.Builder getTableNameBuilder() {
          
          onChanged();
          return getTableNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        public io.dstore.values.StringValueOrBuilder getTableNameOrBuilder() {
          if (tableNameBuilder_ != null) {
            return tableNameBuilder_.getMessageOrBuilder();
          } else {
            return tableName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : tableName_;
          }
        }
        /**
         * <pre>
         * Name der Tabelle (in der Datenbank "DatabaseName"), die gerade ge"locked" ist/wird
         * </pre>
         *
         * <code>optional .dstore.values.StringValue table_name = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getTableNameFieldBuilder() {
          if (tableNameBuilder_ == null) {
            tableNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getTableName(),
                    getParentForChildren(),
                    isClean());
            tableName_ = null;
          }
          return tableNameBuilder_;
        }

        private io.dstore.values.StringValue processStatus_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> processStatusBuilder_;
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public boolean hasProcessStatus() {
          return processStatusBuilder_ != null || processStatus_ != null;
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public io.dstore.values.StringValue getProcessStatus() {
          if (processStatusBuilder_ == null) {
            return processStatus_ == null ? io.dstore.values.StringValue.getDefaultInstance() : processStatus_;
          } else {
            return processStatusBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public Builder setProcessStatus(io.dstore.values.StringValue value) {
          if (processStatusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            processStatus_ = value;
            onChanged();
          } else {
            processStatusBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public Builder setProcessStatus(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (processStatusBuilder_ == null) {
            processStatus_ = builderForValue.build();
            onChanged();
          } else {
            processStatusBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public Builder mergeProcessStatus(io.dstore.values.StringValue value) {
          if (processStatusBuilder_ == null) {
            if (processStatus_ != null) {
              processStatus_ =
                io.dstore.values.StringValue.newBuilder(processStatus_).mergeFrom(value).buildPartial();
            } else {
              processStatus_ = value;
            }
            onChanged();
          } else {
            processStatusBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public Builder clearProcessStatus() {
          if (processStatusBuilder_ == null) {
            processStatus_ = null;
            onChanged();
          } else {
            processStatus_ = null;
            processStatusBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public io.dstore.values.StringValue.Builder getProcessStatusBuilder() {
          
          onChanged();
          return getProcessStatusFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getProcessStatusOrBuilder() {
          if (processStatusBuilder_ != null) {
            return processStatusBuilder_.getMessageOrBuilder();
          } else {
            return processStatus_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : processStatus_;
          }
        }
        /**
         * <pre>
         * Was macht der Prozeß gerade ("running", "lock sleep", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue process_status = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getProcessStatusFieldBuilder() {
          if (processStatusBuilder_ == null) {
            processStatusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getProcessStatus(),
                    getParentForChildren(),
                    isClean());
            processStatus_ = null;
          }
          return processStatusBuilder_;
        }

        private io.dstore.values.StringValue command_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> commandBuilder_;
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public boolean hasCommand() {
          return commandBuilder_ != null || command_ != null;
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public io.dstore.values.StringValue getCommand() {
          if (commandBuilder_ == null) {
            return command_ == null ? io.dstore.values.StringValue.getDefaultInstance() : command_;
          } else {
            return commandBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public Builder setCommand(io.dstore.values.StringValue value) {
          if (commandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            command_ = value;
            onChanged();
          } else {
            commandBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public Builder setCommand(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (commandBuilder_ == null) {
            command_ = builderForValue.build();
            onChanged();
          } else {
            commandBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public Builder mergeCommand(io.dstore.values.StringValue value) {
          if (commandBuilder_ == null) {
            if (command_ != null) {
              command_ =
                io.dstore.values.StringValue.newBuilder(command_).mergeFrom(value).buildPartial();
            } else {
              command_ = value;
            }
            onChanged();
          } else {
            commandBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public Builder clearCommand() {
          if (commandBuilder_ == null) {
            command_ = null;
            onChanged();
          } else {
            command_ = null;
            commandBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public io.dstore.values.StringValue.Builder getCommandBuilder() {
          
          onChanged();
          return getCommandFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        public io.dstore.values.StringValueOrBuilder getCommandOrBuilder() {
          if (commandBuilder_ != null) {
            return commandBuilder_.getMessageOrBuilder();
          } else {
            return command_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : command_;
          }
        }
        /**
         * <pre>
         * Was für eine Art von Kommando wird gerade ausgeführt
         * </pre>
         *
         * <code>optional .dstore.values.StringValue command = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getCommandFieldBuilder() {
          if (commandBuilder_ == null) {
            commandBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getCommand(),
                    getParentForChildren(),
                    isClean());
            command_ = null;
          }
          return commandBuilder_;
        }

        private io.dstore.values.IntegerValue blockingProcessId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> blockingProcessIdBuilder_;
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public boolean hasBlockingProcessId() {
          return blockingProcessIdBuilder_ != null || blockingProcessId_ != null;
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue getBlockingProcessId() {
          if (blockingProcessIdBuilder_ == null) {
            return blockingProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : blockingProcessId_;
          } else {
            return blockingProcessIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public Builder setBlockingProcessId(io.dstore.values.IntegerValue value) {
          if (blockingProcessIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            blockingProcessId_ = value;
            onChanged();
          } else {
            blockingProcessIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public Builder setBlockingProcessId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = builderForValue.build();
            onChanged();
          } else {
            blockingProcessIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public Builder mergeBlockingProcessId(io.dstore.values.IntegerValue value) {
          if (blockingProcessIdBuilder_ == null) {
            if (blockingProcessId_ != null) {
              blockingProcessId_ =
                io.dstore.values.IntegerValue.newBuilder(blockingProcessId_).mergeFrom(value).buildPartial();
            } else {
              blockingProcessId_ = value;
            }
            onChanged();
          } else {
            blockingProcessIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public Builder clearBlockingProcessId() {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = null;
            onChanged();
          } else {
            blockingProcessId_ = null;
            blockingProcessIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getBlockingProcessIdBuilder() {
          
          onChanged();
          return getBlockingProcessIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getBlockingProcessIdOrBuilder() {
          if (blockingProcessIdBuilder_ != null) {
            return blockingProcessIdBuilder_.getMessageOrBuilder();
          } else {
            return blockingProcessId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : blockingProcessId_;
          }
        }
        /**
         * <pre>
         * ID eines anderen Prozesses, durch den dieser Prozeß ge"blocked" wird. Ein Wert von "0" bedeutet, daß der Prozess NICHT blockiert wird.
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue blocking_process_id = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getBlockingProcessIdFieldBuilder() {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getBlockingProcessId(),
                    getParentForChildren(),
                    isClean());
            blockingProcessId_ = null;
          }
          return blockingProcessIdBuilder_;
        }

        private io.dstore.values.IntegerValue serverProcessId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> serverProcessIdBuilder_;
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public boolean hasServerProcessId() {
          return serverProcessIdBuilder_ != null || serverProcessId_ != null;
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue getServerProcessId() {
          if (serverProcessIdBuilder_ == null) {
            return serverProcessId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
          } else {
            return serverProcessIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public Builder setServerProcessId(io.dstore.values.IntegerValue value) {
          if (serverProcessIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            serverProcessId_ = value;
            onChanged();
          } else {
            serverProcessIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public Builder setServerProcessId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = builderForValue.build();
            onChanged();
          } else {
            serverProcessIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public Builder mergeServerProcessId(io.dstore.values.IntegerValue value) {
          if (serverProcessIdBuilder_ == null) {
            if (serverProcessId_ != null) {
              serverProcessId_ =
                io.dstore.values.IntegerValue.newBuilder(serverProcessId_).mergeFrom(value).buildPartial();
            } else {
              serverProcessId_ = value;
            }
            onChanged();
          } else {
            serverProcessIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public Builder clearServerProcessId() {
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = null;
            onChanged();
          } else {
            serverProcessId_ = null;
            serverProcessIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getServerProcessIdBuilder() {
          
          onChanged();
          return getServerProcessIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getServerProcessIdOrBuilder() {
          if (serverProcessIdBuilder_ != null) {
            return serverProcessIdBuilder_.getMessageOrBuilder();
          } else {
            return serverProcessId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : serverProcessId_;
          }
        }
        /**
         * <pre>
         * Die Server-Prozeß-ID
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue server_process_id = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getServerProcessIdFieldBuilder() {
          if (serverProcessIdBuilder_ == null) {
            serverProcessIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getServerProcessId(),
                    getParentForChildren(),
                    isClean());
            serverProcessId_ = null;
          }
          return serverProcessIdBuilder_;
        }

        private io.dstore.values.StringValue databaseName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> databaseNameBuilder_;
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public boolean hasDatabaseName() {
          return databaseNameBuilder_ != null || databaseName_ != null;
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public io.dstore.values.StringValue getDatabaseName() {
          if (databaseNameBuilder_ == null) {
            return databaseName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
          } else {
            return databaseNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public Builder setDatabaseName(io.dstore.values.StringValue value) {
          if (databaseNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            databaseName_ = value;
            onChanged();
          } else {
            databaseNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public Builder setDatabaseName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (databaseNameBuilder_ == null) {
            databaseName_ = builderForValue.build();
            onChanged();
          } else {
            databaseNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public Builder mergeDatabaseName(io.dstore.values.StringValue value) {
          if (databaseNameBuilder_ == null) {
            if (databaseName_ != null) {
              databaseName_ =
                io.dstore.values.StringValue.newBuilder(databaseName_).mergeFrom(value).buildPartial();
            } else {
              databaseName_ = value;
            }
            onChanged();
          } else {
            databaseNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public Builder clearDatabaseName() {
          if (databaseNameBuilder_ == null) {
            databaseName_ = null;
            onChanged();
          } else {
            databaseName_ = null;
            databaseNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public io.dstore.values.StringValue.Builder getDatabaseNameBuilder() {
          
          onChanged();
          return getDatabaseNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        public io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder() {
          if (databaseNameBuilder_ != null) {
            return databaseNameBuilder_.getMessageOrBuilder();
          } else {
            return databaseName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
          }
        }
        /**
         * <pre>
         * Name der Datenbank, auf der der Prozeß gerade aktiv ist
         * </pre>
         *
         * <code>optional .dstore.values.StringValue database_name = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getDatabaseNameFieldBuilder() {
          if (databaseNameBuilder_ == null) {
            databaseNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getDatabaseName(),
                    getParentForChildren(),
                    isClean());
            databaseName_ = null;
          }
          return databaseNameBuilder_;
        }

        private io.dstore.values.StringValue lockClass_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> lockClassBuilder_;
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public boolean hasLockClass() {
          return lockClassBuilder_ != null || lockClass_ != null;
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public io.dstore.values.StringValue getLockClass() {
          if (lockClassBuilder_ == null) {
            return lockClass_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lockClass_;
          } else {
            return lockClassBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public Builder setLockClass(io.dstore.values.StringValue value) {
          if (lockClassBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lockClass_ = value;
            onChanged();
          } else {
            lockClassBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public Builder setLockClass(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (lockClassBuilder_ == null) {
            lockClass_ = builderForValue.build();
            onChanged();
          } else {
            lockClassBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public Builder mergeLockClass(io.dstore.values.StringValue value) {
          if (lockClassBuilder_ == null) {
            if (lockClass_ != null) {
              lockClass_ =
                io.dstore.values.StringValue.newBuilder(lockClass_).mergeFrom(value).buildPartial();
            } else {
              lockClass_ = value;
            }
            onChanged();
          } else {
            lockClassBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public Builder clearLockClass() {
          if (lockClassBuilder_ == null) {
            lockClass_ = null;
            onChanged();
          } else {
            lockClass_ = null;
            lockClassBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public io.dstore.values.StringValue.Builder getLockClassBuilder() {
          
          onChanged();
          return getLockClassFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLockClassOrBuilder() {
          if (lockClassBuilder_ != null) {
            return lockClassBuilder_.getMessageOrBuilder();
          } else {
            return lockClass_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : lockClass_;
          }
        }
        /**
         * <pre>
         * Durch was wurde der Lock verursacht (Cursor, Non Cursor etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_class = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLockClassFieldBuilder() {
          if (lockClassBuilder_ == null) {
            lockClassBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLockClass(),
                    getParentForChildren(),
                    isClean());
            lockClass_ = null;
          }
          return lockClassBuilder_;
        }

        private io.dstore.values.StringValue lockType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> lockTypeBuilder_;
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public boolean hasLockType() {
          return lockTypeBuilder_ != null || lockType_ != null;
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public io.dstore.values.StringValue getLockType() {
          if (lockTypeBuilder_ == null) {
            return lockType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lockType_;
          } else {
            return lockTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public Builder setLockType(io.dstore.values.StringValue value) {
          if (lockTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lockType_ = value;
            onChanged();
          } else {
            lockTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public Builder setLockType(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (lockTypeBuilder_ == null) {
            lockType_ = builderForValue.build();
            onChanged();
          } else {
            lockTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public Builder mergeLockType(io.dstore.values.StringValue value) {
          if (lockTypeBuilder_ == null) {
            if (lockType_ != null) {
              lockType_ =
                io.dstore.values.StringValue.newBuilder(lockType_).mergeFrom(value).buildPartial();
            } else {
              lockType_ = value;
            }
            onChanged();
          } else {
            lockTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public Builder clearLockType() {
          if (lockTypeBuilder_ == null) {
            lockType_ = null;
            onChanged();
          } else {
            lockType_ = null;
            lockTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public io.dstore.values.StringValue.Builder getLockTypeBuilder() {
          
          onChanged();
          return getLockTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLockTypeOrBuilder() {
          if (lockTypeBuilder_ != null) {
            return lockTypeBuilder_.getMessageOrBuilder();
          } else {
            return lockType_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : lockType_;
          }
        }
        /**
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.StringValue lock_type = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLockTypeFieldBuilder() {
          if (lockTypeBuilder_ == null) {
            lockTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLockType(),
                    getParentForChildren(),
                    isClean());
            lockType_ = null;
          }
          return lockTypeBuilder_;
        }

        private io.dstore.values.StringValue hostName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> hostNameBuilder_;
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public boolean hasHostName() {
          return hostNameBuilder_ != null || hostName_ != null;
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public io.dstore.values.StringValue getHostName() {
          if (hostNameBuilder_ == null) {
            return hostName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : hostName_;
          } else {
            return hostNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public Builder setHostName(io.dstore.values.StringValue value) {
          if (hostNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hostName_ = value;
            onChanged();
          } else {
            hostNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public Builder setHostName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (hostNameBuilder_ == null) {
            hostName_ = builderForValue.build();
            onChanged();
          } else {
            hostNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public Builder mergeHostName(io.dstore.values.StringValue value) {
          if (hostNameBuilder_ == null) {
            if (hostName_ != null) {
              hostName_ =
                io.dstore.values.StringValue.newBuilder(hostName_).mergeFrom(value).buildPartial();
            } else {
              hostName_ = value;
            }
            onChanged();
          } else {
            hostNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public Builder clearHostName() {
          if (hostNameBuilder_ == null) {
            hostName_ = null;
            onChanged();
          } else {
            hostName_ = null;
            hostNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public io.dstore.values.StringValue.Builder getHostNameBuilder() {
          
          onChanged();
          return getHostNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        public io.dstore.values.StringValueOrBuilder getHostNameOrBuilder() {
          if (hostNameBuilder_ != null) {
            return hostNameBuilder_.getMessageOrBuilder();
          } else {
            return hostName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : hostName_;
          }
        }
        /**
         * <pre>
         * Name des Host-Rechners, der den Prozeß gestartet hat
         * </pre>
         *
         * <code>optional .dstore.values.StringValue host_name = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getHostNameFieldBuilder() {
          if (hostNameBuilder_ == null) {
            hostNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getHostName(),
                    getParentForChildren(),
                    isClean());
            hostName_ = null;
          }
          return hostNameBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetCurrentLocks_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetCurrentLocks_Ad.Response.Row)
      private static final io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row();
      }

      public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetCurrentLocksAd.Response other = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetCurrentLocks_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetCurrentLocks_Ad.Response)
        io.dstore.engine.procedures.MiGetCurrentLocksAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.class, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response build() {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response buildPartial() {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Response result = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetCurrentLocksAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.MiGetCurrentLocksAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response other) {
        if (other == io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetCurrentLocksAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetCurrentLocksAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetCurrentLocks_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetCurrentLocksAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetCurrentLocks_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetCurrentLocks_Ad.Response)
    private static final io.dstore.engine.procedures.MiGetCurrentLocksAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetCurrentLocksAd.Response();
    }

    public static io.dstore.engine.procedures.MiGetCurrentLocksAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetCurrentLocksAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4dstore/engine/procedures/mi_GetCurrent" +
      "Locks_Ad.proto\022#dstore.engine.mi_GetCurr" +
      "entLocks_Ad\032\023dstore/values.proto\032\032dstore" +
      "/engine/engine.proto\"e\n\nParameters\0226\n\021se" +
      "rver_process_id\030\001 \001(\0132\033.dstore.values.In" +
      "tegerValue\022\037\n\026server_process_id_null\030\351\007 " +
      "\001(\010\"\363\005\n\010Response\0228\n\020meta_information\030\002 \003" +
      "(\0132\036.dstore.engine.MetaInformation\022\'\n\007me" +
      "ssage\030\003 \003(\0132\026.dstore.engine.Message\022>\n\003r" +
      "ow\030\004 \003(\01321.dstore.engine.mi_GetCurrentLo",
      "cks_Ad.Response.Row\032\303\004\n\003Row\022\017\n\006row_id\030\220N" +
      " \001(\005\022-\n\007page_id\030\221N \001(\0132\033.dstore.values.I" +
      "ntegerValue\022/\n\nlogin_name\030\222N \001(\0132\032.dstor" +
      "e.values.StringValue\022/\n\ntable_name\030\223N \001(" +
      "\0132\032.dstore.values.StringValue\0223\n\016process" +
      "_status\030\224N \001(\0132\032.dstore.values.StringVal" +
      "ue\022,\n\007command\030\225N \001(\0132\032.dstore.values.Str" +
      "ingValue\0229\n\023blocking_process_id\030\226N \001(\0132\033" +
      ".dstore.values.IntegerValue\0227\n\021server_pr" +
      "ocess_id\030\227N \001(\0132\033.dstore.values.IntegerV",
      "alue\0222\n\rdatabase_name\030\230N \001(\0132\032.dstore.va" +
      "lues.StringValue\022/\n\nlock_class\030\231N \001(\0132\032." +
      "dstore.values.StringValue\022.\n\tlock_type\030\232" +
      "N \001(\0132\032.dstore.values.StringValue\022.\n\thos" +
      "t_name\030\233N \001(\0132\032.dstore.values.StringValu" +
      "eBV\n\033io.dstore.engine.proceduresZ7gosdk." +
      "dstore.de/engine/procedures/mi_GetCurren" +
      "tLocks_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Parameters_descriptor,
        new java.lang.String[] { "ServerProcessId", "ServerProcessIdNull", });
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetCurrentLocks_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "PageId", "LoginName", "TableName", "ProcessStatus", "Command", "BlockingProcessId", "ServerProcessId", "DatabaseName", "LockClass", "LockType", "HostName", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
