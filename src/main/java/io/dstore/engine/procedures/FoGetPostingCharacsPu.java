// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/fo_GetPostingCharacs_Pu.proto

package io.dstore.engine.procedures;

public final class FoGetPostingCharacsPu {
  private FoGetPostingCharacsPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    boolean hasPersonIdentificationValues();
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.Values.stringValue getPersonIdentificationValues();
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder();

    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    boolean getPersonIdentificationValuesNull();

    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    boolean hasUniqueId();
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    io.dstore.Values.stringValue getUniqueId();
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder();

    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    boolean getUniqueIdNull();

    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    boolean hasForumId();
    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    io.dstore.Values.integerValue getForumId();
    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder();

    /**
     * <code>optional bool forum_id_null = 1004;</code>
     */
    boolean getForumIdNull();

    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    boolean hasCharacteristicIdList();
    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    io.dstore.Values.stringValue getCharacteristicIdList();
    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    io.dstore.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder();

    /**
     * <code>optional bool characteristic_id_list_null = 1005;</code>
     */
    boolean getCharacteristicIdListNull();

    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    boolean hasSeparatorInIdentVals();
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    io.dstore.Values.stringValue getSeparatorInIdentVals();
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder();

    /**
     * <code>optional bool separator_in_ident_vals_null = 1006;</code>
     */
    boolean getSeparatorInIdentValsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      personIdentificationValuesNull_ = false;
      personTypeIdNull_ = false;
      uniqueIdNull_ = false;
      forumIdNull_ = false;
      characteristicIdListNull_ = false;
      separatorInIdentValsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (personIdentificationValues_ != null) {
                subBuilder = personIdentificationValues_.toBuilder();
              }
              personIdentificationValues_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personIdentificationValues_);
                personIdentificationValues_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (uniqueId_ != null) {
                subBuilder = uniqueId_.toBuilder();
              }
              uniqueId_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uniqueId_);
                uniqueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (forumId_ != null) {
                subBuilder = forumId_.toBuilder();
              }
              forumId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forumId_);
                forumId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (characteristicIdList_ != null) {
                subBuilder = characteristicIdList_.toBuilder();
              }
              characteristicIdList_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characteristicIdList_);
                characteristicIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (separatorInIdentVals_ != null) {
                subBuilder = separatorInIdentVals_.toBuilder();
              }
              separatorInIdentVals_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(separatorInIdentVals_);
                separatorInIdentVals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personIdentificationValuesNull_ = input.readBool();
              break;
            }
            case 8016: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              uniqueIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              forumIdNull_ = input.readBool();
              break;
            }
            case 8040: {

              characteristicIdListNull_ = input.readBool();
              break;
            }
            case 8048: {

              separatorInIdentValsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.Builder.class);
    }

    public static final int PERSON_IDENTIFICATION_VALUES_FIELD_NUMBER = 1;
    private io.dstore.Values.stringValue personIdentificationValues_;
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public boolean hasPersonIdentificationValues() {
      return personIdentificationValues_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.Values.stringValue getPersonIdentificationValues() {
      return personIdentificationValues_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
    }
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
      return getPersonIdentificationValues();
    }

    public static final int PERSON_IDENTIFICATION_VALUES_NULL_FIELD_NUMBER = 1001;
    private boolean personIdentificationValuesNull_;
    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    public boolean getPersonIdentificationValuesNull() {
      return personIdentificationValuesNull_;
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 3;
    private io.dstore.Values.stringValue uniqueId_;
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public boolean hasUniqueId() {
      return uniqueId_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.Values.stringValue getUniqueId() {
      return uniqueId_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
    }
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
      return getUniqueId();
    }

    public static final int UNIQUE_ID_NULL_FIELD_NUMBER = 1003;
    private boolean uniqueIdNull_;
    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    public boolean getUniqueIdNull() {
      return uniqueIdNull_;
    }

    public static final int FORUM_ID_FIELD_NUMBER = 4;
    private io.dstore.Values.integerValue forumId_;
    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    public boolean hasForumId() {
      return forumId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    public io.dstore.Values.integerValue getForumId() {
      return forumId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
    }
    /**
     * <code>optional .dstore.values.integerValue forum_id = 4;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder() {
      return getForumId();
    }

    public static final int FORUM_ID_NULL_FIELD_NUMBER = 1004;
    private boolean forumIdNull_;
    /**
     * <code>optional bool forum_id_null = 1004;</code>
     */
    public boolean getForumIdNull() {
      return forumIdNull_;
    }

    public static final int CHARACTERISTIC_ID_LIST_FIELD_NUMBER = 5;
    private io.dstore.Values.stringValue characteristicIdList_;
    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    public boolean hasCharacteristicIdList() {
      return characteristicIdList_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    public io.dstore.Values.stringValue getCharacteristicIdList() {
      return characteristicIdList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : characteristicIdList_;
    }
    /**
     * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
      return getCharacteristicIdList();
    }

    public static final int CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER = 1005;
    private boolean characteristicIdListNull_;
    /**
     * <code>optional bool characteristic_id_list_null = 1005;</code>
     */
    public boolean getCharacteristicIdListNull() {
      return characteristicIdListNull_;
    }

    public static final int SEPARATOR_IN_IDENT_VALS_FIELD_NUMBER = 6;
    private io.dstore.Values.stringValue separatorInIdentVals_;
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public boolean hasSeparatorInIdentVals() {
      return separatorInIdentVals_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public io.dstore.Values.stringValue getSeparatorInIdentVals() {
      return separatorInIdentVals_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
    }
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
      return getSeparatorInIdentVals();
    }

    public static final int SEPARATOR_IN_IDENT_VALS_NULL_FIELD_NUMBER = 1006;
    private boolean separatorInIdentValsNull_;
    /**
     * <code>optional bool separator_in_ident_vals_null = 1006;</code>
     */
    public boolean getSeparatorInIdentValsNull() {
      return separatorInIdentValsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personIdentificationValues_ != null) {
        output.writeMessage(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        output.writeMessage(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        output.writeMessage(3, getUniqueId());
      }
      if (forumId_ != null) {
        output.writeMessage(4, getForumId());
      }
      if (characteristicIdList_ != null) {
        output.writeMessage(5, getCharacteristicIdList());
      }
      if (separatorInIdentVals_ != null) {
        output.writeMessage(6, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        output.writeBool(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        output.writeBool(1003, uniqueIdNull_);
      }
      if (forumIdNull_ != false) {
        output.writeBool(1004, forumIdNull_);
      }
      if (characteristicIdListNull_ != false) {
        output.writeBool(1005, characteristicIdListNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        output.writeBool(1006, separatorInIdentValsNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (personIdentificationValues_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUniqueId());
      }
      if (forumId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getForumId());
      }
      if (characteristicIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCharacteristicIdList());
      }
      if (separatorInIdentVals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, uniqueIdNull_);
      }
      if (forumIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, forumIdNull_);
      }
      if (characteristicIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, characteristicIdListNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, separatorInIdentValsNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters other = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters) obj;

      boolean result = true;
      result = result && (hasPersonIdentificationValues() == other.hasPersonIdentificationValues());
      if (hasPersonIdentificationValues()) {
        result = result && getPersonIdentificationValues()
            .equals(other.getPersonIdentificationValues());
      }
      result = result && (getPersonIdentificationValuesNull()
          == other.getPersonIdentificationValuesNull());
      result = result && (hasPersonTypeId() == other.hasPersonTypeId());
      if (hasPersonTypeId()) {
        result = result && getPersonTypeId()
            .equals(other.getPersonTypeId());
      }
      result = result && (getPersonTypeIdNull()
          == other.getPersonTypeIdNull());
      result = result && (hasUniqueId() == other.hasUniqueId());
      if (hasUniqueId()) {
        result = result && getUniqueId()
            .equals(other.getUniqueId());
      }
      result = result && (getUniqueIdNull()
          == other.getUniqueIdNull());
      result = result && (hasForumId() == other.hasForumId());
      if (hasForumId()) {
        result = result && getForumId()
            .equals(other.getForumId());
      }
      result = result && (getForumIdNull()
          == other.getForumIdNull());
      result = result && (hasCharacteristicIdList() == other.hasCharacteristicIdList());
      if (hasCharacteristicIdList()) {
        result = result && getCharacteristicIdList()
            .equals(other.getCharacteristicIdList());
      }
      result = result && (getCharacteristicIdListNull()
          == other.getCharacteristicIdListNull());
      result = result && (hasSeparatorInIdentVals() == other.hasSeparatorInIdentVals());
      if (hasSeparatorInIdentVals()) {
        result = result && getSeparatorInIdentVals()
            .equals(other.getSeparatorInIdentVals());
      }
      result = result && (getSeparatorInIdentValsNull()
          == other.getSeparatorInIdentValsNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPersonIdentificationValues()) {
        hash = (37 * hash) + PERSON_IDENTIFICATION_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getPersonIdentificationValues().hashCode();
      }
      hash = (37 * hash) + PERSON_IDENTIFICATION_VALUES_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPersonIdentificationValuesNull());
      if (hasPersonTypeId()) {
        hash = (37 * hash) + PERSON_TYPE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPersonTypeId().hashCode();
      }
      hash = (37 * hash) + PERSON_TYPE_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPersonTypeIdNull());
      if (hasUniqueId()) {
        hash = (37 * hash) + UNIQUE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getUniqueId().hashCode();
      }
      hash = (37 * hash) + UNIQUE_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUniqueIdNull());
      if (hasForumId()) {
        hash = (37 * hash) + FORUM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getForumId().hashCode();
      }
      hash = (37 * hash) + FORUM_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getForumIdNull());
      if (hasCharacteristicIdList()) {
        hash = (37 * hash) + CHARACTERISTIC_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCharacteristicIdList().hashCode();
      }
      hash = (37 * hash) + CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCharacteristicIdListNull());
      if (hasSeparatorInIdentVals()) {
        hash = (37 * hash) + SEPARATOR_IN_IDENT_VALS_FIELD_NUMBER;
        hash = (53 * hash) + getSeparatorInIdentVals().hashCode();
      }
      hash = (37 * hash) + SEPARATOR_IN_IDENT_VALS_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSeparatorInIdentValsNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Pu.Parameters)
        io.dstore.engine.procedures.FoGetPostingCharacsPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }
        personIdentificationValuesNull_ = false;

        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }
        uniqueIdNull_ = false;

        if (forumIdBuilder_ == null) {
          forumId_ = null;
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }
        forumIdNull_ = false;

        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }
        characteristicIdListNull_ = false;

        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }
        separatorInIdentValsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters build() {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters buildPartial() {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters result = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters(this);
        if (personIdentificationValuesBuilder_ == null) {
          result.personIdentificationValues_ = personIdentificationValues_;
        } else {
          result.personIdentificationValues_ = personIdentificationValuesBuilder_.build();
        }
        result.personIdentificationValuesNull_ = personIdentificationValuesNull_;
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (uniqueIdBuilder_ == null) {
          result.uniqueId_ = uniqueId_;
        } else {
          result.uniqueId_ = uniqueIdBuilder_.build();
        }
        result.uniqueIdNull_ = uniqueIdNull_;
        if (forumIdBuilder_ == null) {
          result.forumId_ = forumId_;
        } else {
          result.forumId_ = forumIdBuilder_.build();
        }
        result.forumIdNull_ = forumIdNull_;
        if (characteristicIdListBuilder_ == null) {
          result.characteristicIdList_ = characteristicIdList_;
        } else {
          result.characteristicIdList_ = characteristicIdListBuilder_.build();
        }
        result.characteristicIdListNull_ = characteristicIdListNull_;
        if (separatorInIdentValsBuilder_ == null) {
          result.separatorInIdentVals_ = separatorInIdentVals_;
        } else {
          result.separatorInIdentVals_ = separatorInIdentValsBuilder_.build();
        }
        result.separatorInIdentValsNull_ = separatorInIdentValsNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters other) {
        if (other == io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonIdentificationValues()) {
          mergePersonIdentificationValues(other.getPersonIdentificationValues());
        }
        if (other.getPersonIdentificationValuesNull() != false) {
          setPersonIdentificationValuesNull(other.getPersonIdentificationValuesNull());
        }
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasUniqueId()) {
          mergeUniqueId(other.getUniqueId());
        }
        if (other.getUniqueIdNull() != false) {
          setUniqueIdNull(other.getUniqueIdNull());
        }
        if (other.hasForumId()) {
          mergeForumId(other.getForumId());
        }
        if (other.getForumIdNull() != false) {
          setForumIdNull(other.getForumIdNull());
        }
        if (other.hasCharacteristicIdList()) {
          mergeCharacteristicIdList(other.getCharacteristicIdList());
        }
        if (other.getCharacteristicIdListNull() != false) {
          setCharacteristicIdListNull(other.getCharacteristicIdListNull());
        }
        if (other.hasSeparatorInIdentVals()) {
          mergeSeparatorInIdentVals(other.getSeparatorInIdentVals());
        }
        if (other.getSeparatorInIdentValsNull() != false) {
          setSeparatorInIdentValsNull(other.getSeparatorInIdentValsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.stringValue personIdentificationValues_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> personIdentificationValuesBuilder_;
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public boolean hasPersonIdentificationValues() {
        return personIdentificationValuesBuilder_ != null || personIdentificationValues_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValue getPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          return personIdentificationValues_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        } else {
          return personIdentificationValuesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(io.dstore.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personIdentificationValues_ = value;
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = builderForValue.build();
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder mergePersonIdentificationValues(io.dstore.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (personIdentificationValues_ != null) {
            personIdentificationValues_ =
              io.dstore.Values.stringValue.newBuilder(personIdentificationValues_).mergeFrom(value).buildPartial();
          } else {
            personIdentificationValues_ = value;
          }
          onChanged();
        } else {
          personIdentificationValuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder clearPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
          onChanged();
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValue.Builder getPersonIdentificationValuesBuilder() {
        
        onChanged();
        return getPersonIdentificationValuesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
        if (personIdentificationValuesBuilder_ != null) {
          return personIdentificationValuesBuilder_.getMessageOrBuilder();
        } else {
          return personIdentificationValues_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getPersonIdentificationValuesFieldBuilder() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getPersonIdentificationValues(),
                  getParentForChildren(),
                  isClean());
          personIdentificationValues_ = null;
        }
        return personIdentificationValuesBuilder_;
      }

      private boolean personIdentificationValuesNull_ ;
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public boolean getPersonIdentificationValuesNull() {
        return personIdentificationValuesNull_;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder setPersonIdentificationValuesNull(boolean value) {
        
        personIdentificationValuesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder clearPersonIdentificationValuesNull() {
        
        personIdentificationValuesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder mergePersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue uniqueId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> uniqueIdBuilder_;
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public boolean hasUniqueId() {
        return uniqueIdBuilder_ != null || uniqueId_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValue getUniqueId() {
        if (uniqueIdBuilder_ == null) {
          return uniqueId_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
        } else {
          return uniqueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(io.dstore.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uniqueId_ = value;
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = builderForValue.build();
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder mergeUniqueId(io.dstore.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (uniqueId_ != null) {
            uniqueId_ =
              io.dstore.Values.stringValue.newBuilder(uniqueId_).mergeFrom(value).buildPartial();
          } else {
            uniqueId_ = value;
          }
          onChanged();
        } else {
          uniqueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder clearUniqueId() {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
          onChanged();
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValue.Builder getUniqueIdBuilder() {
        
        onChanged();
        return getUniqueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
        if (uniqueIdBuilder_ != null) {
          return uniqueIdBuilder_.getMessageOrBuilder();
        } else {
          return uniqueId_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getUniqueIdFieldBuilder() {
        if (uniqueIdBuilder_ == null) {
          uniqueIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getUniqueId(),
                  getParentForChildren(),
                  isClean());
          uniqueId_ = null;
        }
        return uniqueIdBuilder_;
      }

      private boolean uniqueIdNull_ ;
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public boolean getUniqueIdNull() {
        return uniqueIdNull_;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder setUniqueIdNull(boolean value) {
        
        uniqueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder clearUniqueIdNull() {
        
        uniqueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue forumId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> forumIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public boolean hasForumId() {
        return forumIdBuilder_ != null || forumId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.Values.integerValue getForumId() {
        if (forumIdBuilder_ == null) {
          return forumId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
        } else {
          return forumIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public Builder setForumId(io.dstore.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forumId_ = value;
          onChanged();
        } else {
          forumIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public Builder setForumId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (forumIdBuilder_ == null) {
          forumId_ = builderForValue.build();
          onChanged();
        } else {
          forumIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public Builder mergeForumId(io.dstore.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (forumId_ != null) {
            forumId_ =
              io.dstore.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
          } else {
            forumId_ = value;
          }
          onChanged();
        } else {
          forumIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public Builder clearForumId() {
        if (forumIdBuilder_ == null) {
          forumId_ = null;
          onChanged();
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.Values.integerValue.Builder getForumIdBuilder() {
        
        onChanged();
        return getForumIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder() {
        if (forumIdBuilder_ != null) {
          return forumIdBuilder_.getMessageOrBuilder();
        } else {
          return forumId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getForumIdFieldBuilder() {
        if (forumIdBuilder_ == null) {
          forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getForumId(),
                  getParentForChildren(),
                  isClean());
          forumId_ = null;
        }
        return forumIdBuilder_;
      }

      private boolean forumIdNull_ ;
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public boolean getForumIdNull() {
        return forumIdNull_;
      }
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public Builder setForumIdNull(boolean value) {
        
        forumIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public Builder clearForumIdNull() {
        
        forumIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue characteristicIdList_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> characteristicIdListBuilder_;
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public boolean hasCharacteristicIdList() {
        return characteristicIdListBuilder_ != null || characteristicIdList_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.Values.stringValue getCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          return characteristicIdList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        } else {
          return characteristicIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder setCharacteristicIdList(io.dstore.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characteristicIdList_ = value;
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder setCharacteristicIdList(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = builderForValue.build();
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder mergeCharacteristicIdList(io.dstore.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (characteristicIdList_ != null) {
            characteristicIdList_ =
              io.dstore.Values.stringValue.newBuilder(characteristicIdList_).mergeFrom(value).buildPartial();
          } else {
            characteristicIdList_ = value;
          }
          onChanged();
        } else {
          characteristicIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder clearCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
          onChanged();
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.Values.stringValue.Builder getCharacteristicIdListBuilder() {
        
        onChanged();
        return getCharacteristicIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
        if (characteristicIdListBuilder_ != null) {
          return characteristicIdListBuilder_.getMessageOrBuilder();
        } else {
          return characteristicIdList_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue characteristic_id_list = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getCharacteristicIdListFieldBuilder() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdListBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getCharacteristicIdList(),
                  getParentForChildren(),
                  isClean());
          characteristicIdList_ = null;
        }
        return characteristicIdListBuilder_;
      }

      private boolean characteristicIdListNull_ ;
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public boolean getCharacteristicIdListNull() {
        return characteristicIdListNull_;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public Builder setCharacteristicIdListNull(boolean value) {
        
        characteristicIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public Builder clearCharacteristicIdListNull() {
        
        characteristicIdListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue separatorInIdentVals_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> separatorInIdentValsBuilder_;
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public boolean hasSeparatorInIdentVals() {
        return separatorInIdentValsBuilder_ != null || separatorInIdentVals_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValue getSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          return separatorInIdentVals_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        } else {
          return separatorInIdentValsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder setSeparatorInIdentVals(io.dstore.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          separatorInIdentVals_ = value;
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder setSeparatorInIdentVals(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = builderForValue.build();
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder mergeSeparatorInIdentVals(io.dstore.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (separatorInIdentVals_ != null) {
            separatorInIdentVals_ =
              io.dstore.Values.stringValue.newBuilder(separatorInIdentVals_).mergeFrom(value).buildPartial();
          } else {
            separatorInIdentVals_ = value;
          }
          onChanged();
        } else {
          separatorInIdentValsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder clearSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
          onChanged();
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValue.Builder getSeparatorInIdentValsBuilder() {
        
        onChanged();
        return getSeparatorInIdentValsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
        if (separatorInIdentValsBuilder_ != null) {
          return separatorInIdentValsBuilder_.getMessageOrBuilder();
        } else {
          return separatorInIdentVals_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getSeparatorInIdentValsFieldBuilder() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentValsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getSeparatorInIdentVals(),
                  getParentForChildren(),
                  isClean());
          separatorInIdentVals_ = null;
        }
        return separatorInIdentValsBuilder_;
      }

      private boolean separatorInIdentValsNull_ ;
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public boolean getSeparatorInIdentValsNull() {
        return separatorInIdentValsNull_;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public Builder setSeparatorInIdentValsNull(boolean value) {
        
        separatorInIdentValsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public Builder clearSeparatorInIdentValsNull() {
        
        separatorInIdentValsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Pu.Parameters)
    private static final io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters();
    }

    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.FoGetPostingCharacsPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      boolean hasCharacteristicDescription();
      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      io.dstore.Values.stringValue getCharacteristicDescription();
      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      io.dstore.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder();

      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      boolean hasFieldTypeId();
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      io.dstore.Values.integerValue getFieldTypeId();
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder();

      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      boolean hasPostingCharacteristicId();
      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      io.dstore.Values.integerValue getPostingCharacteristicId();
      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder();

      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      boolean hasPrecisionValue();
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      io.dstore.Values.integerValue getPrecisionValue();
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      boolean hasCommonCharacteristic();
      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      io.dstore.Values.integerValue getCommonCharacteristic();
      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      io.dstore.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder();

      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      boolean hasMaxLength();
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      io.dstore.Values.integerValue getMaxLength();
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder();

      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      boolean hasPredefinedValues();
      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      io.dstore.Values.booleanValue getPredefinedValues();
      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder();

      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      boolean hasCheckPostingVisibility();
      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      io.dstore.Values.booleanValue getCheckPostingVisibility();
      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder();

      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      boolean hasFormat();
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      io.dstore.Values.stringValue getFormat();
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      io.dstore.Values.stringValueOrBuilder getFormatOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      boolean hasBasicFieldType();
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      io.dstore.Values.stringValue getBasicFieldType();
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      boolean hasFieldTypeDescription();
      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      io.dstore.Values.stringValue getFieldTypeDescription();
      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder();

      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      boolean hasBasicFieldTypeId();
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      io.dstore.Values.integerValue getBasicFieldTypeId();
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder();

      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      boolean hasPropertyModificationAllowed();
      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      io.dstore.Values.integerValue getPropertyModificationAllowed();
      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder();

      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      boolean hasMaxNumberOfProperties();
      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      io.dstore.Values.integerValue getMaxNumberOfProperties();
      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      io.dstore.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (characteristicDescription_ != null) {
                  subBuilder = characteristicDescription_.toBuilder();
                }
                characteristicDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(characteristicDescription_);
                  characteristicDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (fieldTypeId_ != null) {
                  subBuilder = fieldTypeId_.toBuilder();
                }
                fieldTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeId_);
                  fieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (postingCharacteristicId_ != null) {
                  subBuilder = postingCharacteristicId_.toBuilder();
                }
                postingCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postingCharacteristicId_);
                  postingCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (commonCharacteristic_ != null) {
                  subBuilder = commonCharacteristic_.toBuilder();
                }
                commonCharacteristic_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(commonCharacteristic_);
                  commonCharacteristic_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (maxLength_ != null) {
                  subBuilder = maxLength_.toBuilder();
                }
                maxLength_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxLength_);
                  maxLength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (predefinedValues_ != null) {
                  subBuilder = predefinedValues_.toBuilder();
                }
                predefinedValues_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predefinedValues_);
                  predefinedValues_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (checkPostingVisibility_ != null) {
                  subBuilder = checkPostingVisibility_.toBuilder();
                }
                checkPostingVisibility_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(checkPostingVisibility_);
                  checkPostingVisibility_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (format_ != null) {
                  subBuilder = format_.toBuilder();
                }
                format_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(format_);
                  format_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (basicFieldType_ != null) {
                  subBuilder = basicFieldType_.toBuilder();
                }
                basicFieldType_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldType_);
                  basicFieldType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (fieldTypeDescription_ != null) {
                  subBuilder = fieldTypeDescription_.toBuilder();
                }
                fieldTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeDescription_);
                  fieldTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (basicFieldTypeId_ != null) {
                  subBuilder = basicFieldTypeId_.toBuilder();
                }
                basicFieldTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldTypeId_);
                  basicFieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (propertyModificationAllowed_ != null) {
                  subBuilder = propertyModificationAllowed_.toBuilder();
                }
                propertyModificationAllowed_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(propertyModificationAllowed_);
                  propertyModificationAllowed_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (maxNumberOfProperties_ != null) {
                  subBuilder = maxNumberOfProperties_.toBuilder();
                }
                maxNumberOfProperties_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxNumberOfProperties_);
                  maxNumberOfProperties_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int CHARACTERISTIC_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue characteristicDescription_;
      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      public boolean hasCharacteristicDescription() {
        return characteristicDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      public io.dstore.Values.stringValue getCharacteristicDescription() {
        return characteristicDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : characteristicDescription_;
      }
      /**
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
        return getCharacteristicDescription();
      }

      public static final int FIELD_TYPE_ID_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue fieldTypeId_;
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public boolean hasFieldTypeId() {
        return fieldTypeId_ != null;
      }
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public io.dstore.Values.integerValue getFieldTypeId() {
        return fieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
      }
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
        return getFieldTypeId();
      }

      public static final int POSTING_CHARACTERISTIC_ID_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue postingCharacteristicId_;
      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      public boolean hasPostingCharacteristicId() {
        return postingCharacteristicId_ != null;
      }
      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      public io.dstore.Values.integerValue getPostingCharacteristicId() {
        return postingCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
      }
      /**
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       *
       * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
        return getPostingCharacteristicId();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue precisionValue_;
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public io.dstore.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int COMMON_CHARACTERISTIC_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue commonCharacteristic_;
      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      public boolean hasCommonCharacteristic() {
        return commonCharacteristic_ != null;
      }
      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      public io.dstore.Values.integerValue getCommonCharacteristic() {
        return commonCharacteristic_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
      }
      /**
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder() {
        return getCommonCharacteristic();
      }

      public static final int MAX_LENGTH_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue maxLength_;
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public boolean hasMaxLength() {
        return maxLength_ != null;
      }
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public io.dstore.Values.integerValue getMaxLength() {
        return maxLength_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
      }
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
        return getMaxLength();
      }

      public static final int PREDEFINED_VALUES_FIELD_NUMBER = 10007;
      private io.dstore.Values.booleanValue predefinedValues_;
      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      public boolean hasPredefinedValues() {
        return predefinedValues_ != null;
      }
      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      public io.dstore.Values.booleanValue getPredefinedValues() {
        return predefinedValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
      }
      /**
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
        return getPredefinedValues();
      }

      public static final int CHECK_POSTING_VISIBILITY_FIELD_NUMBER = 10008;
      private io.dstore.Values.booleanValue checkPostingVisibility_;
      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      public boolean hasCheckPostingVisibility() {
        return checkPostingVisibility_ != null;
      }
      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      public io.dstore.Values.booleanValue getCheckPostingVisibility() {
        return checkPostingVisibility_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
      }
      /**
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder() {
        return getCheckPostingVisibility();
      }

      public static final int FORMAT_FIELD_NUMBER = 10009;
      private io.dstore.Values.stringValue format_;
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      public boolean hasFormat() {
        return format_ != null;
      }
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      public io.dstore.Values.stringValue getFormat() {
        return format_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : format_;
      }
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10009;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getFormatOrBuilder() {
        return getFormat();
      }

      public static final int BASIC_FIELD_TYPE_FIELD_NUMBER = 10010;
      private io.dstore.Values.stringValue basicFieldType_;
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      public boolean hasBasicFieldType() {
        return basicFieldType_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      public io.dstore.Values.stringValue getBasicFieldType() {
        return basicFieldType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
      }
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
        return getBasicFieldType();
      }

      public static final int FIELD_TYPE_DESCRIPTION_FIELD_NUMBER = 10011;
      private io.dstore.Values.stringValue fieldTypeDescription_;
      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      public boolean hasFieldTypeDescription() {
        return fieldTypeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      public io.dstore.Values.stringValue getFieldTypeDescription() {
        return fieldTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
        return getFieldTypeDescription();
      }

      public static final int BASIC_FIELD_TYPE_ID_FIELD_NUMBER = 10012;
      private io.dstore.Values.integerValue basicFieldTypeId_;
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      public boolean hasBasicFieldTypeId() {
        return basicFieldTypeId_ != null;
      }
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      public io.dstore.Values.integerValue getBasicFieldTypeId() {
        return basicFieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
      }
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
        return getBasicFieldTypeId();
      }

      public static final int PROPERTY_MODIFICATION_ALLOWED_FIELD_NUMBER = 10013;
      private io.dstore.Values.integerValue propertyModificationAllowed_;
      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      public boolean hasPropertyModificationAllowed() {
        return propertyModificationAllowed_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      public io.dstore.Values.integerValue getPropertyModificationAllowed() {
        return propertyModificationAllowed_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
      }
      /**
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       *
       * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder() {
        return getPropertyModificationAllowed();
      }

      public static final int MAX_NUMBER_OF_PROPERTIES_FIELD_NUMBER = 10014;
      private io.dstore.Values.integerValue maxNumberOfProperties_;
      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      public boolean hasMaxNumberOfProperties() {
        return maxNumberOfProperties_ != null;
      }
      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      public io.dstore.Values.integerValue getMaxNumberOfProperties() {
        return maxNumberOfProperties_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
      }
      /**
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder() {
        return getMaxNumberOfProperties();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (characteristicDescription_ != null) {
          output.writeMessage(10001, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          output.writeMessage(10002, getFieldTypeId());
        }
        if (postingCharacteristicId_ != null) {
          output.writeMessage(10003, getPostingCharacteristicId());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10004, getPrecisionValue());
        }
        if (commonCharacteristic_ != null) {
          output.writeMessage(10005, getCommonCharacteristic());
        }
        if (maxLength_ != null) {
          output.writeMessage(10006, getMaxLength());
        }
        if (predefinedValues_ != null) {
          output.writeMessage(10007, getPredefinedValues());
        }
        if (checkPostingVisibility_ != null) {
          output.writeMessage(10008, getCheckPostingVisibility());
        }
        if (format_ != null) {
          output.writeMessage(10009, getFormat());
        }
        if (basicFieldType_ != null) {
          output.writeMessage(10010, getBasicFieldType());
        }
        if (fieldTypeDescription_ != null) {
          output.writeMessage(10011, getFieldTypeDescription());
        }
        if (basicFieldTypeId_ != null) {
          output.writeMessage(10012, getBasicFieldTypeId());
        }
        if (propertyModificationAllowed_ != null) {
          output.writeMessage(10013, getPropertyModificationAllowed());
        }
        if (maxNumberOfProperties_ != null) {
          output.writeMessage(10014, getMaxNumberOfProperties());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (characteristicDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getFieldTypeId());
        }
        if (postingCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPostingCharacteristicId());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPrecisionValue());
        }
        if (commonCharacteristic_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getCommonCharacteristic());
        }
        if (maxLength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getMaxLength());
        }
        if (predefinedValues_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getPredefinedValues());
        }
        if (checkPostingVisibility_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getCheckPostingVisibility());
        }
        if (format_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getFormat());
        }
        if (basicFieldType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getBasicFieldType());
        }
        if (fieldTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFieldTypeDescription());
        }
        if (basicFieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getBasicFieldTypeId());
        }
        if (propertyModificationAllowed_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getPropertyModificationAllowed());
        }
        if (maxNumberOfProperties_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getMaxNumberOfProperties());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row other = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasCharacteristicDescription() == other.hasCharacteristicDescription());
        if (hasCharacteristicDescription()) {
          result = result && getCharacteristicDescription()
              .equals(other.getCharacteristicDescription());
        }
        result = result && (hasFieldTypeId() == other.hasFieldTypeId());
        if (hasFieldTypeId()) {
          result = result && getFieldTypeId()
              .equals(other.getFieldTypeId());
        }
        result = result && (hasPostingCharacteristicId() == other.hasPostingCharacteristicId());
        if (hasPostingCharacteristicId()) {
          result = result && getPostingCharacteristicId()
              .equals(other.getPostingCharacteristicId());
        }
        result = result && (hasPrecisionValue() == other.hasPrecisionValue());
        if (hasPrecisionValue()) {
          result = result && getPrecisionValue()
              .equals(other.getPrecisionValue());
        }
        result = result && (hasCommonCharacteristic() == other.hasCommonCharacteristic());
        if (hasCommonCharacteristic()) {
          result = result && getCommonCharacteristic()
              .equals(other.getCommonCharacteristic());
        }
        result = result && (hasMaxLength() == other.hasMaxLength());
        if (hasMaxLength()) {
          result = result && getMaxLength()
              .equals(other.getMaxLength());
        }
        result = result && (hasPredefinedValues() == other.hasPredefinedValues());
        if (hasPredefinedValues()) {
          result = result && getPredefinedValues()
              .equals(other.getPredefinedValues());
        }
        result = result && (hasCheckPostingVisibility() == other.hasCheckPostingVisibility());
        if (hasCheckPostingVisibility()) {
          result = result && getCheckPostingVisibility()
              .equals(other.getCheckPostingVisibility());
        }
        result = result && (hasFormat() == other.hasFormat());
        if (hasFormat()) {
          result = result && getFormat()
              .equals(other.getFormat());
        }
        result = result && (hasBasicFieldType() == other.hasBasicFieldType());
        if (hasBasicFieldType()) {
          result = result && getBasicFieldType()
              .equals(other.getBasicFieldType());
        }
        result = result && (hasFieldTypeDescription() == other.hasFieldTypeDescription());
        if (hasFieldTypeDescription()) {
          result = result && getFieldTypeDescription()
              .equals(other.getFieldTypeDescription());
        }
        result = result && (hasBasicFieldTypeId() == other.hasBasicFieldTypeId());
        if (hasBasicFieldTypeId()) {
          result = result && getBasicFieldTypeId()
              .equals(other.getBasicFieldTypeId());
        }
        result = result && (hasPropertyModificationAllowed() == other.hasPropertyModificationAllowed());
        if (hasPropertyModificationAllowed()) {
          result = result && getPropertyModificationAllowed()
              .equals(other.getPropertyModificationAllowed());
        }
        result = result && (hasMaxNumberOfProperties() == other.hasMaxNumberOfProperties());
        if (hasMaxNumberOfProperties()) {
          result = result && getMaxNumberOfProperties()
              .equals(other.getMaxNumberOfProperties());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasCharacteristicDescription()) {
          hash = (37 * hash) + CHARACTERISTIC_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getCharacteristicDescription().hashCode();
        }
        if (hasFieldTypeId()) {
          hash = (37 * hash) + FIELD_TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getFieldTypeId().hashCode();
        }
        if (hasPostingCharacteristicId()) {
          hash = (37 * hash) + POSTING_CHARACTERISTIC_ID_FIELD_NUMBER;
          hash = (53 * hash) + getPostingCharacteristicId().hashCode();
        }
        if (hasPrecisionValue()) {
          hash = (37 * hash) + PRECISION_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getPrecisionValue().hashCode();
        }
        if (hasCommonCharacteristic()) {
          hash = (37 * hash) + COMMON_CHARACTERISTIC_FIELD_NUMBER;
          hash = (53 * hash) + getCommonCharacteristic().hashCode();
        }
        if (hasMaxLength()) {
          hash = (37 * hash) + MAX_LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getMaxLength().hashCode();
        }
        if (hasPredefinedValues()) {
          hash = (37 * hash) + PREDEFINED_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getPredefinedValues().hashCode();
        }
        if (hasCheckPostingVisibility()) {
          hash = (37 * hash) + CHECK_POSTING_VISIBILITY_FIELD_NUMBER;
          hash = (53 * hash) + getCheckPostingVisibility().hashCode();
        }
        if (hasFormat()) {
          hash = (37 * hash) + FORMAT_FIELD_NUMBER;
          hash = (53 * hash) + getFormat().hashCode();
        }
        if (hasBasicFieldType()) {
          hash = (37 * hash) + BASIC_FIELD_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getBasicFieldType().hashCode();
        }
        if (hasFieldTypeDescription()) {
          hash = (37 * hash) + FIELD_TYPE_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getFieldTypeDescription().hashCode();
        }
        if (hasBasicFieldTypeId()) {
          hash = (37 * hash) + BASIC_FIELD_TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBasicFieldTypeId().hashCode();
        }
        if (hasPropertyModificationAllowed()) {
          hash = (37 * hash) + PROPERTY_MODIFICATION_ALLOWED_FIELD_NUMBER;
          hash = (53 * hash) + getPropertyModificationAllowed().hashCode();
        }
        if (hasMaxNumberOfProperties()) {
          hash = (37 * hash) + MAX_NUMBER_OF_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getMaxNumberOfProperties().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Pu.Response.Row)
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = null;
          } else {
            postingCharacteristicId_ = null;
            postingCharacteristicIdBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = null;
          } else {
            commonCharacteristic_ = null;
            commonCharacteristicBuilder_ = null;
          }
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = null;
          } else {
            checkPostingVisibility_ = null;
            checkPostingVisibilityBuilder_ = null;
          }
          if (formatBuilder_ == null) {
            format_ = null;
          } else {
            format_ = null;
            formatBuilder_ = null;
          }
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = null;
          } else {
            propertyModificationAllowed_ = null;
            propertyModificationAllowedBuilder_ = null;
          }
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = null;
          } else {
            maxNumberOfProperties_ = null;
            maxNumberOfPropertiesBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row build() {
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row buildPartial() {
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row result = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (characteristicDescriptionBuilder_ == null) {
            result.characteristicDescription_ = characteristicDescription_;
          } else {
            result.characteristicDescription_ = characteristicDescriptionBuilder_.build();
          }
          if (fieldTypeIdBuilder_ == null) {
            result.fieldTypeId_ = fieldTypeId_;
          } else {
            result.fieldTypeId_ = fieldTypeIdBuilder_.build();
          }
          if (postingCharacteristicIdBuilder_ == null) {
            result.postingCharacteristicId_ = postingCharacteristicId_;
          } else {
            result.postingCharacteristicId_ = postingCharacteristicIdBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (commonCharacteristicBuilder_ == null) {
            result.commonCharacteristic_ = commonCharacteristic_;
          } else {
            result.commonCharacteristic_ = commonCharacteristicBuilder_.build();
          }
          if (maxLengthBuilder_ == null) {
            result.maxLength_ = maxLength_;
          } else {
            result.maxLength_ = maxLengthBuilder_.build();
          }
          if (predefinedValuesBuilder_ == null) {
            result.predefinedValues_ = predefinedValues_;
          } else {
            result.predefinedValues_ = predefinedValuesBuilder_.build();
          }
          if (checkPostingVisibilityBuilder_ == null) {
            result.checkPostingVisibility_ = checkPostingVisibility_;
          } else {
            result.checkPostingVisibility_ = checkPostingVisibilityBuilder_.build();
          }
          if (formatBuilder_ == null) {
            result.format_ = format_;
          } else {
            result.format_ = formatBuilder_.build();
          }
          if (basicFieldTypeBuilder_ == null) {
            result.basicFieldType_ = basicFieldType_;
          } else {
            result.basicFieldType_ = basicFieldTypeBuilder_.build();
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            result.fieldTypeDescription_ = fieldTypeDescription_;
          } else {
            result.fieldTypeDescription_ = fieldTypeDescriptionBuilder_.build();
          }
          if (basicFieldTypeIdBuilder_ == null) {
            result.basicFieldTypeId_ = basicFieldTypeId_;
          } else {
            result.basicFieldTypeId_ = basicFieldTypeIdBuilder_.build();
          }
          if (propertyModificationAllowedBuilder_ == null) {
            result.propertyModificationAllowed_ = propertyModificationAllowed_;
          } else {
            result.propertyModificationAllowed_ = propertyModificationAllowedBuilder_.build();
          }
          if (maxNumberOfPropertiesBuilder_ == null) {
            result.maxNumberOfProperties_ = maxNumberOfProperties_;
          } else {
            result.maxNumberOfProperties_ = maxNumberOfPropertiesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row other) {
          if (other == io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasCharacteristicDescription()) {
            mergeCharacteristicDescription(other.getCharacteristicDescription());
          }
          if (other.hasFieldTypeId()) {
            mergeFieldTypeId(other.getFieldTypeId());
          }
          if (other.hasPostingCharacteristicId()) {
            mergePostingCharacteristicId(other.getPostingCharacteristicId());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasCommonCharacteristic()) {
            mergeCommonCharacteristic(other.getCommonCharacteristic());
          }
          if (other.hasMaxLength()) {
            mergeMaxLength(other.getMaxLength());
          }
          if (other.hasPredefinedValues()) {
            mergePredefinedValues(other.getPredefinedValues());
          }
          if (other.hasCheckPostingVisibility()) {
            mergeCheckPostingVisibility(other.getCheckPostingVisibility());
          }
          if (other.hasFormat()) {
            mergeFormat(other.getFormat());
          }
          if (other.hasBasicFieldType()) {
            mergeBasicFieldType(other.getBasicFieldType());
          }
          if (other.hasFieldTypeDescription()) {
            mergeFieldTypeDescription(other.getFieldTypeDescription());
          }
          if (other.hasBasicFieldTypeId()) {
            mergeBasicFieldTypeId(other.getBasicFieldTypeId());
          }
          if (other.hasPropertyModificationAllowed()) {
            mergePropertyModificationAllowed(other.getPropertyModificationAllowed());
          }
          if (other.hasMaxNumberOfProperties()) {
            mergeMaxNumberOfProperties(other.getMaxNumberOfProperties());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue characteristicDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> characteristicDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public boolean hasCharacteristicDescription() {
          return characteristicDescriptionBuilder_ != null || characteristicDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public io.dstore.Values.stringValue getCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            return characteristicDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          } else {
            return characteristicDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public Builder setCharacteristicDescription(io.dstore.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            characteristicDescription_ = value;
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public Builder setCharacteristicDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = builderForValue.build();
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public Builder mergeCharacteristicDescription(io.dstore.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (characteristicDescription_ != null) {
              characteristicDescription_ =
                io.dstore.Values.stringValue.newBuilder(characteristicDescription_).mergeFrom(value).buildPartial();
            } else {
              characteristicDescription_ = value;
            }
            onChanged();
          } else {
            characteristicDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public Builder clearCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
            onChanged();
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public io.dstore.Values.stringValue.Builder getCharacteristicDescriptionBuilder() {
          
          onChanged();
          return getCharacteristicDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
          if (characteristicDescriptionBuilder_ != null) {
            return characteristicDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return characteristicDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue characteristic_description = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCharacteristicDescriptionFieldBuilder() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCharacteristicDescription(),
                    getParentForChildren(),
                    isClean());
            characteristicDescription_ = null;
          }
          return characteristicDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue fieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> fieldTypeIdBuilder_;
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public boolean hasFieldTypeId() {
          return fieldTypeIdBuilder_ != null || fieldTypeId_ != null;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValue getFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            return fieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          } else {
            return fieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder setFieldTypeId(io.dstore.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeId_ = value;
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder setFieldTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder mergeFieldTypeId(io.dstore.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (fieldTypeId_ != null) {
              fieldTypeId_ =
                io.dstore.Values.integerValue.newBuilder(fieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeId_ = value;
            }
            onChanged();
          } else {
            fieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder clearFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
            onChanged();
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValue.Builder getFieldTypeIdBuilder() {
          
          onChanged();
          return getFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
          if (fieldTypeIdBuilder_ != null) {
            return fieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          }
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getFieldTypeIdFieldBuilder() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            fieldTypeId_ = null;
          }
          return fieldTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue postingCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> postingCharacteristicIdBuilder_;
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public boolean hasPostingCharacteristicId() {
          return postingCharacteristicIdBuilder_ != null || postingCharacteristicId_ != null;
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public io.dstore.Values.integerValue getPostingCharacteristicId() {
          if (postingCharacteristicIdBuilder_ == null) {
            return postingCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
          } else {
            return postingCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public Builder setPostingCharacteristicId(io.dstore.Values.integerValue value) {
          if (postingCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postingCharacteristicId_ = value;
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public Builder setPostingCharacteristicId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public Builder mergePostingCharacteristicId(io.dstore.Values.integerValue value) {
          if (postingCharacteristicIdBuilder_ == null) {
            if (postingCharacteristicId_ != null) {
              postingCharacteristicId_ =
                io.dstore.Values.integerValue.newBuilder(postingCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              postingCharacteristicId_ = value;
            }
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public Builder clearPostingCharacteristicId() {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = null;
            onChanged();
          } else {
            postingCharacteristicId_ = null;
            postingCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getPostingCharacteristicIdBuilder() {
          
          onChanged();
          return getPostingCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
          if (postingCharacteristicIdBuilder_ != null) {
            return postingCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return postingCharacteristicId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
          }
        }
        /**
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         *
         * <code>optional .dstore.values.integerValue posting_characteristic_id = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPostingCharacteristicIdFieldBuilder() {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPostingCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            postingCharacteristicId_ = null;
          }
          return postingCharacteristicIdBuilder_;
        }

        private io.dstore.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder setPrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder setPrecisionValue(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder mergePrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.Values.integerValue commonCharacteristic_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> commonCharacteristicBuilder_;
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public boolean hasCommonCharacteristic() {
          return commonCharacteristicBuilder_ != null || commonCharacteristic_ != null;
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public io.dstore.Values.integerValue getCommonCharacteristic() {
          if (commonCharacteristicBuilder_ == null) {
            return commonCharacteristic_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
          } else {
            return commonCharacteristicBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public Builder setCommonCharacteristic(io.dstore.Values.integerValue value) {
          if (commonCharacteristicBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            commonCharacteristic_ = value;
            onChanged();
          } else {
            commonCharacteristicBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public Builder setCommonCharacteristic(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = builderForValue.build();
            onChanged();
          } else {
            commonCharacteristicBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public Builder mergeCommonCharacteristic(io.dstore.Values.integerValue value) {
          if (commonCharacteristicBuilder_ == null) {
            if (commonCharacteristic_ != null) {
              commonCharacteristic_ =
                io.dstore.Values.integerValue.newBuilder(commonCharacteristic_).mergeFrom(value).buildPartial();
            } else {
              commonCharacteristic_ = value;
            }
            onChanged();
          } else {
            commonCharacteristicBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public Builder clearCommonCharacteristic() {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = null;
            onChanged();
          } else {
            commonCharacteristic_ = null;
            commonCharacteristicBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public io.dstore.Values.integerValue.Builder getCommonCharacteristicBuilder() {
          
          onChanged();
          return getCommonCharacteristicFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder() {
          if (commonCharacteristicBuilder_ != null) {
            return commonCharacteristicBuilder_.getMessageOrBuilder();
          } else {
            return commonCharacteristic_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
          }
        }
        /**
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue common_characteristic = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getCommonCharacteristicFieldBuilder() {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getCommonCharacteristic(),
                    getParentForChildren(),
                    isClean());
            commonCharacteristic_ = null;
          }
          return commonCharacteristicBuilder_;
        }

        private io.dstore.Values.integerValue maxLength_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> maxLengthBuilder_;
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public boolean hasMaxLength() {
          return maxLengthBuilder_ != null || maxLength_ != null;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValue getMaxLength() {
          if (maxLengthBuilder_ == null) {
            return maxLength_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
          } else {
            return maxLengthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder setMaxLength(io.dstore.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxLength_ = value;
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder setMaxLength(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (maxLengthBuilder_ == null) {
            maxLength_ = builderForValue.build();
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder mergeMaxLength(io.dstore.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (maxLength_ != null) {
              maxLength_ =
                io.dstore.Values.integerValue.newBuilder(maxLength_).mergeFrom(value).buildPartial();
            } else {
              maxLength_ = value;
            }
            onChanged();
          } else {
            maxLengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder clearMaxLength() {
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
            onChanged();
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValue.Builder getMaxLengthBuilder() {
          
          onChanged();
          return getMaxLengthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
          if (maxLengthBuilder_ != null) {
            return maxLengthBuilder_.getMessageOrBuilder();
          } else {
            return maxLength_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
          }
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getMaxLengthFieldBuilder() {
          if (maxLengthBuilder_ == null) {
            maxLengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getMaxLength(),
                    getParentForChildren(),
                    isClean());
            maxLength_ = null;
          }
          return maxLengthBuilder_;
        }

        private io.dstore.Values.booleanValue predefinedValues_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> predefinedValuesBuilder_;
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public boolean hasPredefinedValues() {
          return predefinedValuesBuilder_ != null || predefinedValues_ != null;
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public io.dstore.Values.booleanValue getPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            return predefinedValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          } else {
            return predefinedValuesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public Builder setPredefinedValues(io.dstore.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predefinedValues_ = value;
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public Builder setPredefinedValues(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = builderForValue.build();
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public Builder mergePredefinedValues(io.dstore.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (predefinedValues_ != null) {
              predefinedValues_ =
                io.dstore.Values.booleanValue.newBuilder(predefinedValues_).mergeFrom(value).buildPartial();
            } else {
              predefinedValues_ = value;
            }
            onChanged();
          } else {
            predefinedValuesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public Builder clearPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
            onChanged();
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public io.dstore.Values.booleanValue.Builder getPredefinedValuesBuilder() {
          
          onChanged();
          return getPredefinedValuesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
          if (predefinedValuesBuilder_ != null) {
            return predefinedValuesBuilder_.getMessageOrBuilder();
          } else {
            return predefinedValues_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          }
        }
        /**
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getPredefinedValuesFieldBuilder() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getPredefinedValues(),
                    getParentForChildren(),
                    isClean());
            predefinedValues_ = null;
          }
          return predefinedValuesBuilder_;
        }

        private io.dstore.Values.booleanValue checkPostingVisibility_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> checkPostingVisibilityBuilder_;
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public boolean hasCheckPostingVisibility() {
          return checkPostingVisibilityBuilder_ != null || checkPostingVisibility_ != null;
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public io.dstore.Values.booleanValue getCheckPostingVisibility() {
          if (checkPostingVisibilityBuilder_ == null) {
            return checkPostingVisibility_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
          } else {
            return checkPostingVisibilityBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public Builder setCheckPostingVisibility(io.dstore.Values.booleanValue value) {
          if (checkPostingVisibilityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            checkPostingVisibility_ = value;
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public Builder setCheckPostingVisibility(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = builderForValue.build();
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public Builder mergeCheckPostingVisibility(io.dstore.Values.booleanValue value) {
          if (checkPostingVisibilityBuilder_ == null) {
            if (checkPostingVisibility_ != null) {
              checkPostingVisibility_ =
                io.dstore.Values.booleanValue.newBuilder(checkPostingVisibility_).mergeFrom(value).buildPartial();
            } else {
              checkPostingVisibility_ = value;
            }
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public Builder clearCheckPostingVisibility() {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = null;
            onChanged();
          } else {
            checkPostingVisibility_ = null;
            checkPostingVisibilityBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public io.dstore.Values.booleanValue.Builder getCheckPostingVisibilityBuilder() {
          
          onChanged();
          return getCheckPostingVisibilityFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder() {
          if (checkPostingVisibilityBuilder_ != null) {
            return checkPostingVisibilityBuilder_.getMessageOrBuilder();
          } else {
            return checkPostingVisibility_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
          }
        }
        /**
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue check_posting_visibility = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getCheckPostingVisibilityFieldBuilder() {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibilityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getCheckPostingVisibility(),
                    getParentForChildren(),
                    isClean());
            checkPostingVisibility_ = null;
          }
          return checkPostingVisibilityBuilder_;
        }

        private io.dstore.Values.stringValue format_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> formatBuilder_;
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public boolean hasFormat() {
          return formatBuilder_ != null || format_ != null;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public io.dstore.Values.stringValue getFormat() {
          if (formatBuilder_ == null) {
            return format_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : format_;
          } else {
            return formatBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public Builder setFormat(io.dstore.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            format_ = value;
            onChanged();
          } else {
            formatBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public Builder setFormat(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (formatBuilder_ == null) {
            format_ = builderForValue.build();
            onChanged();
          } else {
            formatBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public Builder mergeFormat(io.dstore.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (format_ != null) {
              format_ =
                io.dstore.Values.stringValue.newBuilder(format_).mergeFrom(value).buildPartial();
            } else {
              format_ = value;
            }
            onChanged();
          } else {
            formatBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public Builder clearFormat() {
          if (formatBuilder_ == null) {
            format_ = null;
            onChanged();
          } else {
            format_ = null;
            formatBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public io.dstore.Values.stringValue.Builder getFormatBuilder() {
          
          onChanged();
          return getFormatFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getFormatOrBuilder() {
          if (formatBuilder_ != null) {
            return formatBuilder_.getMessageOrBuilder();
          } else {
            return format_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : format_;
          }
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getFormatFieldBuilder() {
          if (formatBuilder_ == null) {
            formatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getFormat(),
                    getParentForChildren(),
                    isClean());
            format_ = null;
          }
          return formatBuilder_;
        }

        private io.dstore.Values.stringValue basicFieldType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> basicFieldTypeBuilder_;
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public boolean hasBasicFieldType() {
          return basicFieldTypeBuilder_ != null || basicFieldType_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public io.dstore.Values.stringValue getBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            return basicFieldType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
          } else {
            return basicFieldTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public Builder setBasicFieldType(io.dstore.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldType_ = value;
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public Builder setBasicFieldType(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public Builder mergeBasicFieldType(io.dstore.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (basicFieldType_ != null) {
              basicFieldType_ =
                io.dstore.Values.stringValue.newBuilder(basicFieldType_).mergeFrom(value).buildPartial();
            } else {
              basicFieldType_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public Builder clearBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
            onChanged();
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public io.dstore.Values.stringValue.Builder getBasicFieldTypeBuilder() {
          
          onChanged();
          return getBasicFieldTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
          if (basicFieldTypeBuilder_ != null) {
            return basicFieldTypeBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldType_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getBasicFieldTypeFieldBuilder() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getBasicFieldType(),
                    getParentForChildren(),
                    isClean());
            basicFieldType_ = null;
          }
          return basicFieldTypeBuilder_;
        }

        private io.dstore.Values.stringValue fieldTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> fieldTypeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public boolean hasFieldTypeDescription() {
          return fieldTypeDescriptionBuilder_ != null || fieldTypeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public io.dstore.Values.stringValue getFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            return fieldTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          } else {
            return fieldTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public Builder setFieldTypeDescription(io.dstore.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeDescription_ = value;
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public Builder setFieldTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public Builder mergeFieldTypeDescription(io.dstore.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (fieldTypeDescription_ != null) {
              fieldTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(fieldTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeDescription_ = value;
            }
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public Builder clearFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
            onChanged();
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public io.dstore.Values.stringValue.Builder getFieldTypeDescriptionBuilder() {
          
          onChanged();
          return getFieldTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
          if (fieldTypeDescriptionBuilder_ != null) {
            return fieldTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getFieldTypeDescriptionFieldBuilder() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getFieldTypeDescription(),
                    getParentForChildren(),
                    isClean());
            fieldTypeDescription_ = null;
          }
          return fieldTypeDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue basicFieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> basicFieldTypeIdBuilder_;
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public boolean hasBasicFieldTypeId() {
          return basicFieldTypeIdBuilder_ != null || basicFieldTypeId_ != null;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public io.dstore.Values.integerValue getBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            return basicFieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          } else {
            return basicFieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public Builder setBasicFieldTypeId(io.dstore.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldTypeId_ = value;
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public Builder setBasicFieldTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public Builder mergeBasicFieldTypeId(io.dstore.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (basicFieldTypeId_ != null) {
              basicFieldTypeId_ =
                io.dstore.Values.integerValue.newBuilder(basicFieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              basicFieldTypeId_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public Builder clearBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
            onChanged();
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public io.dstore.Values.integerValue.Builder getBasicFieldTypeIdBuilder() {
          
          onChanged();
          return getBasicFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
          if (basicFieldTypeIdBuilder_ != null) {
            return basicFieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          }
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getBasicFieldTypeIdFieldBuilder() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getBasicFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            basicFieldTypeId_ = null;
          }
          return basicFieldTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue propertyModificationAllowed_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> propertyModificationAllowedBuilder_;
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public boolean hasPropertyModificationAllowed() {
          return propertyModificationAllowedBuilder_ != null || propertyModificationAllowed_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public io.dstore.Values.integerValue getPropertyModificationAllowed() {
          if (propertyModificationAllowedBuilder_ == null) {
            return propertyModificationAllowed_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
          } else {
            return propertyModificationAllowedBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public Builder setPropertyModificationAllowed(io.dstore.Values.integerValue value) {
          if (propertyModificationAllowedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            propertyModificationAllowed_ = value;
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public Builder setPropertyModificationAllowed(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = builderForValue.build();
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public Builder mergePropertyModificationAllowed(io.dstore.Values.integerValue value) {
          if (propertyModificationAllowedBuilder_ == null) {
            if (propertyModificationAllowed_ != null) {
              propertyModificationAllowed_ =
                io.dstore.Values.integerValue.newBuilder(propertyModificationAllowed_).mergeFrom(value).buildPartial();
            } else {
              propertyModificationAllowed_ = value;
            }
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public Builder clearPropertyModificationAllowed() {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = null;
            onChanged();
          } else {
            propertyModificationAllowed_ = null;
            propertyModificationAllowedBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public io.dstore.Values.integerValue.Builder getPropertyModificationAllowedBuilder() {
          
          onChanged();
          return getPropertyModificationAllowedFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder() {
          if (propertyModificationAllowedBuilder_ != null) {
            return propertyModificationAllowedBuilder_.getMessageOrBuilder();
          } else {
            return propertyModificationAllowed_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         *
         * <code>optional .dstore.values.integerValue property_modification_allowed = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPropertyModificationAllowedFieldBuilder() {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPropertyModificationAllowed(),
                    getParentForChildren(),
                    isClean());
            propertyModificationAllowed_ = null;
          }
          return propertyModificationAllowedBuilder_;
        }

        private io.dstore.Values.integerValue maxNumberOfProperties_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> maxNumberOfPropertiesBuilder_;
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public boolean hasMaxNumberOfProperties() {
          return maxNumberOfPropertiesBuilder_ != null || maxNumberOfProperties_ != null;
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public io.dstore.Values.integerValue getMaxNumberOfProperties() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            return maxNumberOfProperties_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
          } else {
            return maxNumberOfPropertiesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public Builder setMaxNumberOfProperties(io.dstore.Values.integerValue value) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxNumberOfProperties_ = value;
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public Builder setMaxNumberOfProperties(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = builderForValue.build();
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public Builder mergeMaxNumberOfProperties(io.dstore.Values.integerValue value) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            if (maxNumberOfProperties_ != null) {
              maxNumberOfProperties_ =
                io.dstore.Values.integerValue.newBuilder(maxNumberOfProperties_).mergeFrom(value).buildPartial();
            } else {
              maxNumberOfProperties_ = value;
            }
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public Builder clearMaxNumberOfProperties() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = null;
            onChanged();
          } else {
            maxNumberOfProperties_ = null;
            maxNumberOfPropertiesBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public io.dstore.Values.integerValue.Builder getMaxNumberOfPropertiesBuilder() {
          
          onChanged();
          return getMaxNumberOfPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder() {
          if (maxNumberOfPropertiesBuilder_ != null) {
            return maxNumberOfPropertiesBuilder_.getMessageOrBuilder();
          } else {
            return maxNumberOfProperties_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
          }
        }
        /**
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_number_of_properties = 10014;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getMaxNumberOfPropertiesFieldBuilder() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getMaxNumberOfProperties(),
                    getParentForChildren(),
                    isClean());
            maxNumberOfProperties_ = null;
          }
          return maxNumberOfPropertiesBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Pu.Response.Row)
      private static final io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row();
      }

      public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.FoGetPostingCharacsPu.Response other = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Pu.Response)
        io.dstore.engine.procedures.FoGetPostingCharacsPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.class, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor;
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response build() {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response buildPartial() {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Response result = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.FoGetPostingCharacsPu.Response) {
          return mergeFrom((io.dstore.engine.procedures.FoGetPostingCharacsPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response other) {
        if (other == io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.FoGetPostingCharacsPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.FoGetPostingCharacsPu.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Pu.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingCharacsPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Pu.Response)
    private static final io.dstore.engine.procedures.FoGetPostingCharacsPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingCharacsPu.Response();
    }

    public static io.dstore.engine.procedures.FoGetPostingCharacsPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.FoGetPostingCharacsPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6dstore/engine/procedures/fo_GetPosting" +
      "Characs_Pu.proto\022%dstore.engine.fo_GetPo" +
      "stingCharacs_Pu\032\023dstore/values.proto\032\033ds" +
      "tore/engine/message.proto\032#dstore/engine" +
      "/metainformation.proto\"\242\004\n\nParameters\022@\n" +
      "\034person_identification_values\030\001 \001(\0132\032.ds" +
      "tore.values.stringValue\022*\n!person_identi" +
      "fication_values_null\030\351\007 \001(\010\0223\n\016person_ty" +
      "pe_id\030\002 \001(\0132\033.dstore.values.integerValue" +
      "\022\034\n\023person_type_id_null\030\352\007 \001(\010\022-\n\tunique",
      "_id\030\003 \001(\0132\032.dstore.values.stringValue\022\027\n" +
      "\016unique_id_null\030\353\007 \001(\010\022-\n\010forum_id\030\004 \001(\013" +
      "2\033.dstore.values.integerValue\022\026\n\rforum_i" +
      "d_null\030\354\007 \001(\010\022:\n\026characteristic_id_list\030" +
      "\005 \001(\0132\032.dstore.values.stringValue\022$\n\033cha" +
      "racteristic_id_list_null\030\355\007 \001(\010\022;\n\027separ" +
      "ator_in_ident_vals\030\006 \001(\0132\032.dstore.values" +
      ".stringValue\022%\n\034separator_in_ident_vals_" +
      "null\030\356\007 \001(\010\"\227\010\n\010Response\022H\n\020meta_informa" +
      "tion\030\002 \003(\0132..dstore.engine.metainformati",
      "on.MetaInformation\022/\n\007message\030\003 \003(\0132\036.ds" +
      "tore.engine.message.Message\022@\n\003row\030\004 \003(\013" +
      "23.dstore.engine.fo_GetPostingCharacs_Pu" +
      ".Response.Row\032\315\006\n\003Row\022\017\n\006row_id\030\220N \001(\005\022?" +
      "\n\032characteristic_description\030\221N \001(\0132\032.ds" +
      "tore.values.stringValue\0223\n\rfield_type_id" +
      "\030\222N \001(\0132\033.dstore.values.integerValue\022?\n\031" +
      "posting_characteristic_id\030\223N \001(\0132\033.dstor" +
      "e.values.integerValue\0225\n\017precision_value" +
      "\030\224N \001(\0132\033.dstore.values.integerValue\022;\n\025",
      "common_characteristic\030\225N \001(\0132\033.dstore.va" +
      "lues.integerValue\0220\n\nmax_length\030\226N \001(\0132\033" +
      ".dstore.values.integerValue\0227\n\021predefine" +
      "d_values\030\227N \001(\0132\033.dstore.values.booleanV" +
      "alue\022>\n\030check_posting_visibility\030\230N \001(\0132" +
      "\033.dstore.values.booleanValue\022+\n\006format\030\231" +
      "N \001(\0132\032.dstore.values.stringValue\0225\n\020bas" +
      "ic_field_type\030\232N \001(\0132\032.dstore.values.str" +
      "ingValue\022;\n\026field_type_description\030\233N \001(" +
      "\0132\032.dstore.values.stringValue\0229\n\023basic_f",
      "ield_type_id\030\234N \001(\0132\033.dstore.values.inte" +
      "gerValue\022C\n\035property_modification_allowe" +
      "d\030\235N \001(\0132\033.dstore.values.integerValue\022>\n" +
      "\030max_number_of_properties\030\236N \001(\0132\033.dstor" +
      "e.values.integerValueBX\n\033io.dstore.engin" +
      "e.proceduresZ9gosdk.dstore.de/engine/pro" +
      "cedures/fo_GetPostingCharacs_Pub\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Parameters_descriptor,
        new java.lang.String[] { "PersonIdentificationValues", "PersonIdentificationValuesNull", "PersonTypeId", "PersonTypeIdNull", "UniqueId", "UniqueIdNull", "ForumId", "ForumIdNull", "CharacteristicIdList", "CharacteristicIdListNull", "SeparatorInIdentVals", "SeparatorInIdentValsNull", });
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "CharacteristicDescription", "FieldTypeId", "PostingCharacteristicId", "PrecisionValue", "CommonCharacteristic", "MaxLength", "PredefinedValues", "CheckPostingVisibility", "Format", "BasicFieldType", "FieldTypeDescription", "BasicFieldTypeId", "PropertyModificationAllowed", "MaxNumberOfProperties", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
