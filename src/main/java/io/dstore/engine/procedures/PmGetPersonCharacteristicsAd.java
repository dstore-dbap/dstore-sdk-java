// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/pm_GetPersonCharacteristics_Ad.proto

package io.dstore.engine.procedures;

public final class PmGetPersonCharacteristicsAd {
  private PmGetPersonCharacteristicsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    io.dstore.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1001;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    boolean hasPersonCharacCategoryId();
    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    io.dstore.Values.integerValue getPersonCharacCategoryId();
    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder();

    /**
     * <code>optional bool person_charac_category_id_null = 1002;</code>
     */
    boolean getPersonCharacCategoryIdNull();

    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    boolean hasNotInPersonCharacsInCats();
    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    io.dstore.Values.integerValue getNotInPersonCharacsInCats();
    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    io.dstore.Values.integerValueOrBuilder getNotInPersonCharacsInCatsOrBuilder();

    /**
     * <code>optional bool not_in_person_characs_in_cats_null = 1003;</code>
     */
    boolean getNotInPersonCharacsInCatsNull();

    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    boolean hasPersonCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    io.dstore.Values.integerValue getPersonCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder();

    /**
     * <code>optional bool person_characteristic_id_null = 1004;</code>
     */
    boolean getPersonCharacteristicIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      personTypeIdNull_ = false;
      personCharacCategoryIdNull_ = false;
      notInPersonCharacsInCatsNull_ = false;
      personCharacteristicIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (personCharacCategoryId_ != null) {
                subBuilder = personCharacCategoryId_.toBuilder();
              }
              personCharacCategoryId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personCharacCategoryId_);
                personCharacCategoryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (notInPersonCharacsInCats_ != null) {
                subBuilder = notInPersonCharacsInCats_.toBuilder();
              }
              notInPersonCharacsInCats_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(notInPersonCharacsInCats_);
                notInPersonCharacsInCats_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (personCharacteristicId_ != null) {
                subBuilder = personCharacteristicId_.toBuilder();
              }
              personCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personCharacteristicId_);
                personCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              personCharacCategoryIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              notInPersonCharacsInCatsNull_ = input.readBool();
              break;
            }
            case 8032: {

              personCharacteristicIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.Builder.class);
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    public io.dstore.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1001;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int PERSON_CHARAC_CATEGORY_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue personCharacCategoryId_;
    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    public boolean hasPersonCharacCategoryId() {
      return personCharacCategoryId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    public io.dstore.Values.integerValue getPersonCharacCategoryId() {
      return personCharacCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
    }
    /**
     * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
      return getPersonCharacCategoryId();
    }

    public static final int PERSON_CHARAC_CATEGORY_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personCharacCategoryIdNull_;
    /**
     * <code>optional bool person_charac_category_id_null = 1002;</code>
     */
    public boolean getPersonCharacCategoryIdNull() {
      return personCharacCategoryIdNull_;
    }

    public static final int NOT_IN_PERSON_CHARACS_IN_CATS_FIELD_NUMBER = 3;
    private io.dstore.Values.integerValue notInPersonCharacsInCats_;
    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    public boolean hasNotInPersonCharacsInCats() {
      return notInPersonCharacsInCats_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    public io.dstore.Values.integerValue getNotInPersonCharacsInCats() {
      return notInPersonCharacsInCats_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : notInPersonCharacsInCats_;
    }
    /**
     * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getNotInPersonCharacsInCatsOrBuilder() {
      return getNotInPersonCharacsInCats();
    }

    public static final int NOT_IN_PERSON_CHARACS_IN_CATS_NULL_FIELD_NUMBER = 1003;
    private boolean notInPersonCharacsInCatsNull_;
    /**
     * <code>optional bool not_in_person_characs_in_cats_null = 1003;</code>
     */
    public boolean getNotInPersonCharacsInCatsNull() {
      return notInPersonCharacsInCatsNull_;
    }

    public static final int PERSON_CHARACTERISTIC_ID_FIELD_NUMBER = 4;
    private io.dstore.Values.integerValue personCharacteristicId_;
    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    public boolean hasPersonCharacteristicId() {
      return personCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    public io.dstore.Values.integerValue getPersonCharacteristicId() {
      return personCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
    }
    /**
     * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder() {
      return getPersonCharacteristicId();
    }

    public static final int PERSON_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1004;
    private boolean personCharacteristicIdNull_;
    /**
     * <code>optional bool person_characteristic_id_null = 1004;</code>
     */
    public boolean getPersonCharacteristicIdNull() {
      return personCharacteristicIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personTypeId_ != null) {
        output.writeMessage(1, getPersonTypeId());
      }
      if (personCharacCategoryId_ != null) {
        output.writeMessage(2, getPersonCharacCategoryId());
      }
      if (notInPersonCharacsInCats_ != null) {
        output.writeMessage(3, getNotInPersonCharacsInCats());
      }
      if (personCharacteristicId_ != null) {
        output.writeMessage(4, getPersonCharacteristicId());
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1001, personTypeIdNull_);
      }
      if (personCharacCategoryIdNull_ != false) {
        output.writeBool(1002, personCharacCategoryIdNull_);
      }
      if (notInPersonCharacsInCatsNull_ != false) {
        output.writeBool(1003, notInPersonCharacsInCatsNull_);
      }
      if (personCharacteristicIdNull_ != false) {
        output.writeBool(1004, personCharacteristicIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonTypeId());
      }
      if (personCharacCategoryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonCharacCategoryId());
      }
      if (notInPersonCharacsInCats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNotInPersonCharacsInCats());
      }
      if (personCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPersonCharacteristicId());
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personTypeIdNull_);
      }
      if (personCharacCategoryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personCharacCategoryIdNull_);
      }
      if (notInPersonCharacsInCatsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, notInPersonCharacsInCatsNull_);
      }
      if (personCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, personCharacteristicIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters)
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (personCharacCategoryIdBuilder_ == null) {
          personCharacCategoryId_ = null;
        } else {
          personCharacCategoryId_ = null;
          personCharacCategoryIdBuilder_ = null;
        }
        personCharacCategoryIdNull_ = false;

        if (notInPersonCharacsInCatsBuilder_ == null) {
          notInPersonCharacsInCats_ = null;
        } else {
          notInPersonCharacsInCats_ = null;
          notInPersonCharacsInCatsBuilder_ = null;
        }
        notInPersonCharacsInCatsNull_ = false;

        if (personCharacteristicIdBuilder_ == null) {
          personCharacteristicId_ = null;
        } else {
          personCharacteristicId_ = null;
          personCharacteristicIdBuilder_ = null;
        }
        personCharacteristicIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters build() {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters buildPartial() {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters result = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters(this);
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (personCharacCategoryIdBuilder_ == null) {
          result.personCharacCategoryId_ = personCharacCategoryId_;
        } else {
          result.personCharacCategoryId_ = personCharacCategoryIdBuilder_.build();
        }
        result.personCharacCategoryIdNull_ = personCharacCategoryIdNull_;
        if (notInPersonCharacsInCatsBuilder_ == null) {
          result.notInPersonCharacsInCats_ = notInPersonCharacsInCats_;
        } else {
          result.notInPersonCharacsInCats_ = notInPersonCharacsInCatsBuilder_.build();
        }
        result.notInPersonCharacsInCatsNull_ = notInPersonCharacsInCatsNull_;
        if (personCharacteristicIdBuilder_ == null) {
          result.personCharacteristicId_ = personCharacteristicId_;
        } else {
          result.personCharacteristicId_ = personCharacteristicIdBuilder_.build();
        }
        result.personCharacteristicIdNull_ = personCharacteristicIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters other) {
        if (other == io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasPersonCharacCategoryId()) {
          mergePersonCharacCategoryId(other.getPersonCharacCategoryId());
        }
        if (other.getPersonCharacCategoryIdNull() != false) {
          setPersonCharacCategoryIdNull(other.getPersonCharacCategoryIdNull());
        }
        if (other.hasNotInPersonCharacsInCats()) {
          mergeNotInPersonCharacsInCats(other.getNotInPersonCharacsInCats());
        }
        if (other.getNotInPersonCharacsInCatsNull() != false) {
          setNotInPersonCharacsInCatsNull(other.getNotInPersonCharacsInCatsNull());
        }
        if (other.hasPersonCharacteristicId()) {
          mergePersonCharacteristicId(other.getPersonCharacteristicId());
        }
        if (other.getPersonCharacteristicIdNull() != false) {
          setPersonCharacteristicIdNull(other.getPersonCharacteristicIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public Builder setPersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public Builder mergePersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue personCharacCategoryId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personCharacCategoryIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public boolean hasPersonCharacCategoryId() {
        return personCharacCategoryIdBuilder_ != null || personCharacCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public io.dstore.Values.integerValue getPersonCharacCategoryId() {
        if (personCharacCategoryIdBuilder_ == null) {
          return personCharacCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
        } else {
          return personCharacCategoryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public Builder setPersonCharacCategoryId(io.dstore.Values.integerValue value) {
        if (personCharacCategoryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personCharacCategoryId_ = value;
          onChanged();
        } else {
          personCharacCategoryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public Builder setPersonCharacCategoryId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (personCharacCategoryIdBuilder_ == null) {
          personCharacCategoryId_ = builderForValue.build();
          onChanged();
        } else {
          personCharacCategoryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public Builder mergePersonCharacCategoryId(io.dstore.Values.integerValue value) {
        if (personCharacCategoryIdBuilder_ == null) {
          if (personCharacCategoryId_ != null) {
            personCharacCategoryId_ =
              io.dstore.Values.integerValue.newBuilder(personCharacCategoryId_).mergeFrom(value).buildPartial();
          } else {
            personCharacCategoryId_ = value;
          }
          onChanged();
        } else {
          personCharacCategoryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public Builder clearPersonCharacCategoryId() {
        if (personCharacCategoryIdBuilder_ == null) {
          personCharacCategoryId_ = null;
          onChanged();
        } else {
          personCharacCategoryId_ = null;
          personCharacCategoryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getPersonCharacCategoryIdBuilder() {
        
        onChanged();
        return getPersonCharacCategoryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
        if (personCharacCategoryIdBuilder_ != null) {
          return personCharacCategoryIdBuilder_.getMessageOrBuilder();
        } else {
          return personCharacCategoryId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_charac_category_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPersonCharacCategoryIdFieldBuilder() {
        if (personCharacCategoryIdBuilder_ == null) {
          personCharacCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPersonCharacCategoryId(),
                  getParentForChildren(),
                  isClean());
          personCharacCategoryId_ = null;
        }
        return personCharacCategoryIdBuilder_;
      }

      private boolean personCharacCategoryIdNull_ ;
      /**
       * <code>optional bool person_charac_category_id_null = 1002;</code>
       */
      public boolean getPersonCharacCategoryIdNull() {
        return personCharacCategoryIdNull_;
      }
      /**
       * <code>optional bool person_charac_category_id_null = 1002;</code>
       */
      public Builder setPersonCharacCategoryIdNull(boolean value) {
        
        personCharacCategoryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_charac_category_id_null = 1002;</code>
       */
      public Builder clearPersonCharacCategoryIdNull() {
        
        personCharacCategoryIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue notInPersonCharacsInCats_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> notInPersonCharacsInCatsBuilder_;
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public boolean hasNotInPersonCharacsInCats() {
        return notInPersonCharacsInCatsBuilder_ != null || notInPersonCharacsInCats_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public io.dstore.Values.integerValue getNotInPersonCharacsInCats() {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          return notInPersonCharacsInCats_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : notInPersonCharacsInCats_;
        } else {
          return notInPersonCharacsInCatsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public Builder setNotInPersonCharacsInCats(io.dstore.Values.integerValue value) {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          notInPersonCharacsInCats_ = value;
          onChanged();
        } else {
          notInPersonCharacsInCatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public Builder setNotInPersonCharacsInCats(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          notInPersonCharacsInCats_ = builderForValue.build();
          onChanged();
        } else {
          notInPersonCharacsInCatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public Builder mergeNotInPersonCharacsInCats(io.dstore.Values.integerValue value) {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          if (notInPersonCharacsInCats_ != null) {
            notInPersonCharacsInCats_ =
              io.dstore.Values.integerValue.newBuilder(notInPersonCharacsInCats_).mergeFrom(value).buildPartial();
          } else {
            notInPersonCharacsInCats_ = value;
          }
          onChanged();
        } else {
          notInPersonCharacsInCatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public Builder clearNotInPersonCharacsInCats() {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          notInPersonCharacsInCats_ = null;
          onChanged();
        } else {
          notInPersonCharacsInCats_ = null;
          notInPersonCharacsInCatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public io.dstore.Values.integerValue.Builder getNotInPersonCharacsInCatsBuilder() {
        
        onChanged();
        return getNotInPersonCharacsInCatsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNotInPersonCharacsInCatsOrBuilder() {
        if (notInPersonCharacsInCatsBuilder_ != null) {
          return notInPersonCharacsInCatsBuilder_.getMessageOrBuilder();
        } else {
          return notInPersonCharacsInCats_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : notInPersonCharacsInCats_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue not_in_person_characs_in_cats = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getNotInPersonCharacsInCatsFieldBuilder() {
        if (notInPersonCharacsInCatsBuilder_ == null) {
          notInPersonCharacsInCatsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getNotInPersonCharacsInCats(),
                  getParentForChildren(),
                  isClean());
          notInPersonCharacsInCats_ = null;
        }
        return notInPersonCharacsInCatsBuilder_;
      }

      private boolean notInPersonCharacsInCatsNull_ ;
      /**
       * <code>optional bool not_in_person_characs_in_cats_null = 1003;</code>
       */
      public boolean getNotInPersonCharacsInCatsNull() {
        return notInPersonCharacsInCatsNull_;
      }
      /**
       * <code>optional bool not_in_person_characs_in_cats_null = 1003;</code>
       */
      public Builder setNotInPersonCharacsInCatsNull(boolean value) {
        
        notInPersonCharacsInCatsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool not_in_person_characs_in_cats_null = 1003;</code>
       */
      public Builder clearNotInPersonCharacsInCatsNull() {
        
        notInPersonCharacsInCatsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue personCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public boolean hasPersonCharacteristicId() {
        return personCharacteristicIdBuilder_ != null || personCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public io.dstore.Values.integerValue getPersonCharacteristicId() {
        if (personCharacteristicIdBuilder_ == null) {
          return personCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
        } else {
          return personCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public Builder setPersonCharacteristicId(io.dstore.Values.integerValue value) {
        if (personCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personCharacteristicId_ = value;
          onChanged();
        } else {
          personCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public Builder setPersonCharacteristicId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (personCharacteristicIdBuilder_ == null) {
          personCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          personCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public Builder mergePersonCharacteristicId(io.dstore.Values.integerValue value) {
        if (personCharacteristicIdBuilder_ == null) {
          if (personCharacteristicId_ != null) {
            personCharacteristicId_ =
              io.dstore.Values.integerValue.newBuilder(personCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            personCharacteristicId_ = value;
          }
          onChanged();
        } else {
          personCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public Builder clearPersonCharacteristicId() {
        if (personCharacteristicIdBuilder_ == null) {
          personCharacteristicId_ = null;
          onChanged();
        } else {
          personCharacteristicId_ = null;
          personCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public io.dstore.Values.integerValue.Builder getPersonCharacteristicIdBuilder() {
        
        onChanged();
        return getPersonCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder() {
        if (personCharacteristicIdBuilder_ != null) {
          return personCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return personCharacteristicId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_characteristic_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPersonCharacteristicIdFieldBuilder() {
        if (personCharacteristicIdBuilder_ == null) {
          personCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPersonCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          personCharacteristicId_ = null;
        }
        return personCharacteristicIdBuilder_;
      }

      private boolean personCharacteristicIdNull_ ;
      /**
       * <code>optional bool person_characteristic_id_null = 1004;</code>
       */
      public boolean getPersonCharacteristicIdNull() {
        return personCharacteristicIdNull_;
      }
      /**
       * <code>optional bool person_characteristic_id_null = 1004;</code>
       */
      public Builder setPersonCharacteristicIdNull(boolean value) {
        
        personCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_characteristic_id_null = 1004;</code>
       */
      public Builder clearPersonCharacteristicIdNull() {
        
        personCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Parameters)
    private static final io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters();
    }

    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonCharacteristics_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      boolean hasDescription();
      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      io.dstore.Values.stringValue getDescription();
      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      boolean hasFieldTypeId();
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      io.dstore.Values.integerValue getFieldTypeId();
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder();

      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      boolean hasDescriptionForAdmin();
      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      io.dstore.Values.stringValue getDescriptionForAdmin();
      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      io.dstore.Values.stringValueOrBuilder getDescriptionForAdminOrBuilder();

      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      boolean hasPrecisionValue();
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      io.dstore.Values.integerValue getPrecisionValue();
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      boolean hasModify();
      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      io.dstore.Values.integerValue getModify();
      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      io.dstore.Values.integerValueOrBuilder getModifyOrBuilder();

      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      boolean hasMaxLength();
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      io.dstore.Values.integerValue getMaxLength();
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      boolean hasSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      io.dstore.Values.integerValue getSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      boolean hasRequiredCharacCategory();
      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      io.dstore.Values.booleanValue getRequiredCharacCategory();
      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getRequiredCharacCategoryOrBuilder();

      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      boolean hasPredefinedValues();
      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      io.dstore.Values.booleanValue getPredefinedValues();
      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder();

      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      boolean hasReadAccessRestrictionPattern();
      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      io.dstore.Values.stringValue getReadAccessRestrictionPattern();
      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      io.dstore.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder();

      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      boolean hasFormat();
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      io.dstore.Values.stringValue getFormat();
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      io.dstore.Values.stringValueOrBuilder getFormatOrBuilder();

      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      boolean hasRequired();
      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      io.dstore.Values.booleanValue getRequired();
      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getRequiredOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      boolean hasBasicFieldType();
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      io.dstore.Values.stringValue getBasicFieldType();
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder();

      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      boolean hasIsUnique();
      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      io.dstore.Values.booleanValue getIsUnique();
      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getIsUniqueOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      boolean hasFieldTypeDescription();
      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      io.dstore.Values.stringValue getFieldTypeDescription();
      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder();

      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      boolean hasVisible();
      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      io.dstore.Values.booleanValue getVisible();
      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getVisibleOrBuilder();

      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      boolean hasBasicFieldTypeId();
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      io.dstore.Values.integerValue getBasicFieldTypeId();
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder();

      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      boolean hasId();
      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      io.dstore.Values.integerValue getId();
      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      io.dstore.Values.integerValueOrBuilder getIdOrBuilder();

      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      boolean hasPersonCharacCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      io.dstore.Values.integerValue getPersonCharacCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      boolean hasCategoryDescription();
      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      io.dstore.Values.stringValue getCategoryDescription();
      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      io.dstore.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (fieldTypeId_ != null) {
                  subBuilder = fieldTypeId_.toBuilder();
                }
                fieldTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeId_);
                  fieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (descriptionForAdmin_ != null) {
                  subBuilder = descriptionForAdmin_.toBuilder();
                }
                descriptionForAdmin_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(descriptionForAdmin_);
                  descriptionForAdmin_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (modify_ != null) {
                  subBuilder = modify_.toBuilder();
                }
                modify_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(modify_);
                  modify_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (maxLength_ != null) {
                  subBuilder = maxLength_.toBuilder();
                }
                maxLength_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxLength_);
                  maxLength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (requiredCharacCategory_ != null) {
                  subBuilder = requiredCharacCategory_.toBuilder();
                }
                requiredCharacCategory_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(requiredCharacCategory_);
                  requiredCharacCategory_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (predefinedValues_ != null) {
                  subBuilder = predefinedValues_.toBuilder();
                }
                predefinedValues_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predefinedValues_);
                  predefinedValues_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (readAccessRestrictionPattern_ != null) {
                  subBuilder = readAccessRestrictionPattern_.toBuilder();
                }
                readAccessRestrictionPattern_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(readAccessRestrictionPattern_);
                  readAccessRestrictionPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (format_ != null) {
                  subBuilder = format_.toBuilder();
                }
                format_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(format_);
                  format_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (required_ != null) {
                  subBuilder = required_.toBuilder();
                }
                required_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(required_);
                  required_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (basicFieldType_ != null) {
                  subBuilder = basicFieldType_.toBuilder();
                }
                basicFieldType_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldType_);
                  basicFieldType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (isUnique_ != null) {
                  subBuilder = isUnique_.toBuilder();
                }
                isUnique_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(isUnique_);
                  isUnique_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (fieldTypeDescription_ != null) {
                  subBuilder = fieldTypeDescription_.toBuilder();
                }
                fieldTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeDescription_);
                  fieldTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (visible_ != null) {
                  subBuilder = visible_.toBuilder();
                }
                visible_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(visible_);
                  visible_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (basicFieldTypeId_ != null) {
                  subBuilder = basicFieldTypeId_.toBuilder();
                }
                basicFieldTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldTypeId_);
                  basicFieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (id_ != null) {
                  subBuilder = id_.toBuilder();
                }
                id_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(id_);
                  id_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240082: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (personCharacCategoryId_ != null) {
                  subBuilder = personCharacCategoryId_.toBuilder();
                }
                personCharacCategoryId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personCharacCategoryId_);
                  personCharacCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240154: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (categoryDescription_ != null) {
                  subBuilder = categoryDescription_.toBuilder();
                }
                categoryDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(categoryDescription_);
                  categoryDescription_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue description_;
      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      public io.dstore.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10001;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int FIELD_TYPE_ID_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue fieldTypeId_;
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public boolean hasFieldTypeId() {
        return fieldTypeId_ != null;
      }
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public io.dstore.Values.integerValue getFieldTypeId() {
        return fieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
      }
      /**
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
        return getFieldTypeId();
      }

      public static final int DESCRIPTION_FOR_ADMIN_FIELD_NUMBER = 10003;
      private io.dstore.Values.stringValue descriptionForAdmin_;
      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      public boolean hasDescriptionForAdmin() {
        return descriptionForAdmin_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      public io.dstore.Values.stringValue getDescriptionForAdmin() {
        return descriptionForAdmin_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : descriptionForAdmin_;
      }
      /**
       * <pre>
       * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getDescriptionForAdminOrBuilder() {
        return getDescriptionForAdmin();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue precisionValue_;
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public io.dstore.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int MODIFY_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue modify_;
      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      public boolean hasModify() {
        return modify_ != null;
      }
      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      public io.dstore.Values.integerValue getModify() {
        return modify_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : modify_;
      }
      /**
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue modify = 10005;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getModifyOrBuilder() {
        return getModify();
      }

      public static final int MAX_LENGTH_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue maxLength_;
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public boolean hasMaxLength() {
        return maxLength_ != null;
      }
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public io.dstore.Values.integerValue getMaxLength() {
        return maxLength_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
      }
      /**
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       *
       * <code>optional .dstore.values.integerValue max_length = 10006;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
        return getMaxLength();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10007;
      private io.dstore.Values.integerValue sortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      public io.dstore.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int REQUIRED_CHARAC_CATEGORY_FIELD_NUMBER = 10008;
      private io.dstore.Values.booleanValue requiredCharacCategory_;
      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      public boolean hasRequiredCharacCategory() {
        return requiredCharacCategory_ != null;
      }
      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      public io.dstore.Values.booleanValue getRequiredCharacCategory() {
        return requiredCharacCategory_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : requiredCharacCategory_;
      }
      /**
       * <pre>
       * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getRequiredCharacCategoryOrBuilder() {
        return getRequiredCharacCategory();
      }

      public static final int PREDEFINED_VALUES_FIELD_NUMBER = 10009;
      private io.dstore.Values.booleanValue predefinedValues_;
      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      public boolean hasPredefinedValues() {
        return predefinedValues_ != null;
      }
      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      public io.dstore.Values.booleanValue getPredefinedValues() {
        return predefinedValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
      }
      /**
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
        return getPredefinedValues();
      }

      public static final int READ_ACCESS_RESTRICTION_PATTERN_FIELD_NUMBER = 10010;
      private io.dstore.Values.stringValue readAccessRestrictionPattern_;
      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      public boolean hasReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ != null;
      }
      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      public io.dstore.Values.stringValue getReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
      }
      /**
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       *
       * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
        return getReadAccessRestrictionPattern();
      }

      public static final int FORMAT_FIELD_NUMBER = 10011;
      private io.dstore.Values.stringValue format_;
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      public boolean hasFormat() {
        return format_ != null;
      }
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      public io.dstore.Values.stringValue getFormat() {
        return format_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : format_;
      }
      /**
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       *
       * <code>optional .dstore.values.stringValue format = 10011;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getFormatOrBuilder() {
        return getFormat();
      }

      public static final int REQUIRED_FIELD_NUMBER = 10012;
      private io.dstore.Values.booleanValue required_;
      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      public boolean hasRequired() {
        return required_ != null;
      }
      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      public io.dstore.Values.booleanValue getRequired() {
        return required_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : required_;
      }
      /**
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue required = 10012;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getRequiredOrBuilder() {
        return getRequired();
      }

      public static final int BASIC_FIELD_TYPE_FIELD_NUMBER = 10013;
      private io.dstore.Values.stringValue basicFieldType_;
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      public boolean hasBasicFieldType() {
        return basicFieldType_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      public io.dstore.Values.stringValue getBasicFieldType() {
        return basicFieldType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
      }
      /**
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       *
       * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
        return getBasicFieldType();
      }

      public static final int IS_UNIQUE_FIELD_NUMBER = 10014;
      private io.dstore.Values.booleanValue isUnique_;
      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      public boolean hasIsUnique() {
        return isUnique_ != null;
      }
      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      public io.dstore.Values.booleanValue getIsUnique() {
        return isUnique_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : isUnique_;
      }
      /**
       * <pre>
       * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getIsUniqueOrBuilder() {
        return getIsUnique();
      }

      public static final int FIELD_TYPE_DESCRIPTION_FIELD_NUMBER = 10015;
      private io.dstore.Values.stringValue fieldTypeDescription_;
      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      public boolean hasFieldTypeDescription() {
        return fieldTypeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      public io.dstore.Values.stringValue getFieldTypeDescription() {
        return fieldTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung des Datentyps "FieldTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
        return getFieldTypeDescription();
      }

      public static final int VISIBLE_FIELD_NUMBER = 10016;
      private io.dstore.Values.booleanValue visible_;
      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      public boolean hasVisible() {
        return visible_ != null;
      }
      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      public io.dstore.Values.booleanValue getVisible() {
        return visible_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : visible_;
      }
      /**
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue visible = 10016;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getVisibleOrBuilder() {
        return getVisible();
      }

      public static final int BASIC_FIELD_TYPE_ID_FIELD_NUMBER = 10017;
      private io.dstore.Values.integerValue basicFieldTypeId_;
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      public boolean hasBasicFieldTypeId() {
        return basicFieldTypeId_ != null;
      }
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      public io.dstore.Values.integerValue getBasicFieldTypeId() {
        return basicFieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
      }
      /**
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
        return getBasicFieldTypeId();
      }

      public static final int ID_FIELD_NUMBER = 10018;
      private io.dstore.Values.integerValue id_;
      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      public boolean hasId() {
        return id_ != null;
      }
      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      public io.dstore.Values.integerValue getId() {
        return id_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : id_;
      }
      /**
       * <pre>
       * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
       * </pre>
       *
       * <code>optional .dstore.values.integerValue id = 10018;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getIdOrBuilder() {
        return getId();
      }

      public static final int PERSON_CHARAC_CATEGORY_ID_FIELD_NUMBER = 30010;
      private io.dstore.Values.integerValue personCharacCategoryId_;
      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      public boolean hasPersonCharacCategoryId() {
        return personCharacCategoryId_ != null;
      }
      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      public io.dstore.Values.integerValue getPersonCharacCategoryId() {
        return personCharacCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
      }
      /**
       * <pre>
       * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
        return getPersonCharacCategoryId();
      }

      public static final int CATEGORY_DESCRIPTION_FIELD_NUMBER = 30019;
      private io.dstore.Values.stringValue categoryDescription_;
      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      public boolean hasCategoryDescription() {
        return categoryDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      public io.dstore.Values.stringValue getCategoryDescription() {
        return categoryDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : categoryDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "PersonCharacCategoryID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue category_description = 30019;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder() {
        return getCategoryDescription();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (description_ != null) {
          output.writeMessage(10001, getDescription());
        }
        if (fieldTypeId_ != null) {
          output.writeMessage(10002, getFieldTypeId());
        }
        if (descriptionForAdmin_ != null) {
          output.writeMessage(10003, getDescriptionForAdmin());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10004, getPrecisionValue());
        }
        if (modify_ != null) {
          output.writeMessage(10005, getModify());
        }
        if (maxLength_ != null) {
          output.writeMessage(10006, getMaxLength());
        }
        if (sortNo_ != null) {
          output.writeMessage(10007, getSortNo());
        }
        if (requiredCharacCategory_ != null) {
          output.writeMessage(10008, getRequiredCharacCategory());
        }
        if (predefinedValues_ != null) {
          output.writeMessage(10009, getPredefinedValues());
        }
        if (readAccessRestrictionPattern_ != null) {
          output.writeMessage(10010, getReadAccessRestrictionPattern());
        }
        if (format_ != null) {
          output.writeMessage(10011, getFormat());
        }
        if (required_ != null) {
          output.writeMessage(10012, getRequired());
        }
        if (basicFieldType_ != null) {
          output.writeMessage(10013, getBasicFieldType());
        }
        if (isUnique_ != null) {
          output.writeMessage(10014, getIsUnique());
        }
        if (fieldTypeDescription_ != null) {
          output.writeMessage(10015, getFieldTypeDescription());
        }
        if (visible_ != null) {
          output.writeMessage(10016, getVisible());
        }
        if (basicFieldTypeId_ != null) {
          output.writeMessage(10017, getBasicFieldTypeId());
        }
        if (id_ != null) {
          output.writeMessage(10018, getId());
        }
        if (personCharacCategoryId_ != null) {
          output.writeMessage(30010, getPersonCharacCategoryId());
        }
        if (categoryDescription_ != null) {
          output.writeMessage(30019, getCategoryDescription());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getDescription());
        }
        if (fieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getFieldTypeId());
        }
        if (descriptionForAdmin_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getDescriptionForAdmin());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPrecisionValue());
        }
        if (modify_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getModify());
        }
        if (maxLength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getMaxLength());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getSortNo());
        }
        if (requiredCharacCategory_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getRequiredCharacCategory());
        }
        if (predefinedValues_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getPredefinedValues());
        }
        if (readAccessRestrictionPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getReadAccessRestrictionPattern());
        }
        if (format_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFormat());
        }
        if (required_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getRequired());
        }
        if (basicFieldType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getBasicFieldType());
        }
        if (isUnique_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getIsUnique());
        }
        if (fieldTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getFieldTypeDescription());
        }
        if (visible_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getVisible());
        }
        if (basicFieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getBasicFieldTypeId());
        }
        if (id_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getId());
        }
        if (personCharacCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30010, getPersonCharacCategoryId());
        }
        if (categoryDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30019, getCategoryDescription());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row)
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }
          if (descriptionForAdminBuilder_ == null) {
            descriptionForAdmin_ = null;
          } else {
            descriptionForAdmin_ = null;
            descriptionForAdminBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (modifyBuilder_ == null) {
            modify_ = null;
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (requiredCharacCategoryBuilder_ == null) {
            requiredCharacCategory_ = null;
          } else {
            requiredCharacCategory_ = null;
            requiredCharacCategoryBuilder_ = null;
          }
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }
          if (formatBuilder_ == null) {
            format_ = null;
          } else {
            format_ = null;
            formatBuilder_ = null;
          }
          if (requiredBuilder_ == null) {
            required_ = null;
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }
          if (isUniqueBuilder_ == null) {
            isUnique_ = null;
          } else {
            isUnique_ = null;
            isUniqueBuilder_ = null;
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }
          if (visibleBuilder_ == null) {
            visible_ = null;
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }
          if (idBuilder_ == null) {
            id_ = null;
          } else {
            id_ = null;
            idBuilder_ = null;
          }
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = null;
          } else {
            personCharacCategoryId_ = null;
            personCharacCategoryIdBuilder_ = null;
          }
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = null;
          } else {
            categoryDescription_ = null;
            categoryDescriptionBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row build() {
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row result = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (fieldTypeIdBuilder_ == null) {
            result.fieldTypeId_ = fieldTypeId_;
          } else {
            result.fieldTypeId_ = fieldTypeIdBuilder_.build();
          }
          if (descriptionForAdminBuilder_ == null) {
            result.descriptionForAdmin_ = descriptionForAdmin_;
          } else {
            result.descriptionForAdmin_ = descriptionForAdminBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (modifyBuilder_ == null) {
            result.modify_ = modify_;
          } else {
            result.modify_ = modifyBuilder_.build();
          }
          if (maxLengthBuilder_ == null) {
            result.maxLength_ = maxLength_;
          } else {
            result.maxLength_ = maxLengthBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (requiredCharacCategoryBuilder_ == null) {
            result.requiredCharacCategory_ = requiredCharacCategory_;
          } else {
            result.requiredCharacCategory_ = requiredCharacCategoryBuilder_.build();
          }
          if (predefinedValuesBuilder_ == null) {
            result.predefinedValues_ = predefinedValues_;
          } else {
            result.predefinedValues_ = predefinedValuesBuilder_.build();
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPattern_;
          } else {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPatternBuilder_.build();
          }
          if (formatBuilder_ == null) {
            result.format_ = format_;
          } else {
            result.format_ = formatBuilder_.build();
          }
          if (requiredBuilder_ == null) {
            result.required_ = required_;
          } else {
            result.required_ = requiredBuilder_.build();
          }
          if (basicFieldTypeBuilder_ == null) {
            result.basicFieldType_ = basicFieldType_;
          } else {
            result.basicFieldType_ = basicFieldTypeBuilder_.build();
          }
          if (isUniqueBuilder_ == null) {
            result.isUnique_ = isUnique_;
          } else {
            result.isUnique_ = isUniqueBuilder_.build();
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            result.fieldTypeDescription_ = fieldTypeDescription_;
          } else {
            result.fieldTypeDescription_ = fieldTypeDescriptionBuilder_.build();
          }
          if (visibleBuilder_ == null) {
            result.visible_ = visible_;
          } else {
            result.visible_ = visibleBuilder_.build();
          }
          if (basicFieldTypeIdBuilder_ == null) {
            result.basicFieldTypeId_ = basicFieldTypeId_;
          } else {
            result.basicFieldTypeId_ = basicFieldTypeIdBuilder_.build();
          }
          if (idBuilder_ == null) {
            result.id_ = id_;
          } else {
            result.id_ = idBuilder_.build();
          }
          if (personCharacCategoryIdBuilder_ == null) {
            result.personCharacCategoryId_ = personCharacCategoryId_;
          } else {
            result.personCharacCategoryId_ = personCharacCategoryIdBuilder_.build();
          }
          if (categoryDescriptionBuilder_ == null) {
            result.categoryDescription_ = categoryDescription_;
          } else {
            result.categoryDescription_ = categoryDescriptionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasFieldTypeId()) {
            mergeFieldTypeId(other.getFieldTypeId());
          }
          if (other.hasDescriptionForAdmin()) {
            mergeDescriptionForAdmin(other.getDescriptionForAdmin());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasModify()) {
            mergeModify(other.getModify());
          }
          if (other.hasMaxLength()) {
            mergeMaxLength(other.getMaxLength());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasRequiredCharacCategory()) {
            mergeRequiredCharacCategory(other.getRequiredCharacCategory());
          }
          if (other.hasPredefinedValues()) {
            mergePredefinedValues(other.getPredefinedValues());
          }
          if (other.hasReadAccessRestrictionPattern()) {
            mergeReadAccessRestrictionPattern(other.getReadAccessRestrictionPattern());
          }
          if (other.hasFormat()) {
            mergeFormat(other.getFormat());
          }
          if (other.hasRequired()) {
            mergeRequired(other.getRequired());
          }
          if (other.hasBasicFieldType()) {
            mergeBasicFieldType(other.getBasicFieldType());
          }
          if (other.hasIsUnique()) {
            mergeIsUnique(other.getIsUnique());
          }
          if (other.hasFieldTypeDescription()) {
            mergeFieldTypeDescription(other.getFieldTypeDescription());
          }
          if (other.hasVisible()) {
            mergeVisible(other.getVisible());
          }
          if (other.hasBasicFieldTypeId()) {
            mergeBasicFieldTypeId(other.getBasicFieldTypeId());
          }
          if (other.hasId()) {
            mergeId(other.getId());
          }
          if (other.hasPersonCharacCategoryId()) {
            mergePersonCharacCategoryId(other.getPersonCharacCategoryId());
          }
          if (other.hasCategoryDescription()) {
            mergeCategoryDescription(other.getCategoryDescription());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public io.dstore.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public Builder setDescription(io.dstore.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public Builder setDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public Builder mergeDescription(io.dstore.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public io.dstore.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.Values.integerValue fieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> fieldTypeIdBuilder_;
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public boolean hasFieldTypeId() {
          return fieldTypeIdBuilder_ != null || fieldTypeId_ != null;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValue getFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            return fieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          } else {
            return fieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder setFieldTypeId(io.dstore.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeId_ = value;
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder setFieldTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder mergeFieldTypeId(io.dstore.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (fieldTypeId_ != null) {
              fieldTypeId_ =
                io.dstore.Values.integerValue.newBuilder(fieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeId_ = value;
            }
            onChanged();
          } else {
            fieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public Builder clearFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
            onChanged();
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValue.Builder getFieldTypeIdBuilder() {
          
          onChanged();
          return getFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
          if (fieldTypeIdBuilder_ != null) {
            return fieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          }
        }
        /**
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "ID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue field_type_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getFieldTypeIdFieldBuilder() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            fieldTypeId_ = null;
          }
          return fieldTypeIdBuilder_;
        }

        private io.dstore.Values.stringValue descriptionForAdmin_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> descriptionForAdminBuilder_;
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public boolean hasDescriptionForAdmin() {
          return descriptionForAdminBuilder_ != null || descriptionForAdmin_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public io.dstore.Values.stringValue getDescriptionForAdmin() {
          if (descriptionForAdminBuilder_ == null) {
            return descriptionForAdmin_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : descriptionForAdmin_;
          } else {
            return descriptionForAdminBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public Builder setDescriptionForAdmin(io.dstore.Values.stringValue value) {
          if (descriptionForAdminBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            descriptionForAdmin_ = value;
            onChanged();
          } else {
            descriptionForAdminBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public Builder setDescriptionForAdmin(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (descriptionForAdminBuilder_ == null) {
            descriptionForAdmin_ = builderForValue.build();
            onChanged();
          } else {
            descriptionForAdminBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public Builder mergeDescriptionForAdmin(io.dstore.Values.stringValue value) {
          if (descriptionForAdminBuilder_ == null) {
            if (descriptionForAdmin_ != null) {
              descriptionForAdmin_ =
                io.dstore.Values.stringValue.newBuilder(descriptionForAdmin_).mergeFrom(value).buildPartial();
            } else {
              descriptionForAdmin_ = value;
            }
            onChanged();
          } else {
            descriptionForAdminBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public Builder clearDescriptionForAdmin() {
          if (descriptionForAdminBuilder_ == null) {
            descriptionForAdmin_ = null;
            onChanged();
          } else {
            descriptionForAdmin_ = null;
            descriptionForAdminBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public io.dstore.Values.stringValue.Builder getDescriptionForAdminBuilder() {
          
          onChanged();
          return getDescriptionForAdminFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getDescriptionForAdminOrBuilder() {
          if (descriptionForAdminBuilder_ != null) {
            return descriptionForAdminBuilder_.getMessageOrBuilder();
          } else {
            return descriptionForAdmin_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : descriptionForAdmin_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der "ID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_for_admin = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDescriptionForAdminFieldBuilder() {
          if (descriptionForAdminBuilder_ == null) {
            descriptionForAdminBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDescriptionForAdmin(),
                    getParentForChildren(),
                    isClean());
            descriptionForAdmin_ = null;
          }
          return descriptionForAdminBuilder_;
        }

        private io.dstore.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder setPrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder setPrecisionValue(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder mergePrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.Values.integerValue modify_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> modifyBuilder_;
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public boolean hasModify() {
          return modifyBuilder_ != null || modify_ != null;
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public io.dstore.Values.integerValue getModify() {
          if (modifyBuilder_ == null) {
            return modify_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : modify_;
          } else {
            return modifyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public Builder setModify(io.dstore.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            modify_ = value;
            onChanged();
          } else {
            modifyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public Builder setModify(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (modifyBuilder_ == null) {
            modify_ = builderForValue.build();
            onChanged();
          } else {
            modifyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public Builder mergeModify(io.dstore.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (modify_ != null) {
              modify_ =
                io.dstore.Values.integerValue.newBuilder(modify_).mergeFrom(value).buildPartial();
            } else {
              modify_ = value;
            }
            onChanged();
          } else {
            modifyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public Builder clearModify() {
          if (modifyBuilder_ == null) {
            modify_ = null;
            onChanged();
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public io.dstore.Values.integerValue.Builder getModifyBuilder() {
          
          onChanged();
          return getModifyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getModifyOrBuilder() {
          if (modifyBuilder_ != null) {
            return modifyBuilder_.getMessageOrBuilder();
          } else {
            return modify_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : modify_;
          }
        }
        /**
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue modify = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getModifyFieldBuilder() {
          if (modifyBuilder_ == null) {
            modifyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getModify(),
                    getParentForChildren(),
                    isClean());
            modify_ = null;
          }
          return modifyBuilder_;
        }

        private io.dstore.Values.integerValue maxLength_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> maxLengthBuilder_;
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public boolean hasMaxLength() {
          return maxLengthBuilder_ != null || maxLength_ != null;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValue getMaxLength() {
          if (maxLengthBuilder_ == null) {
            return maxLength_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
          } else {
            return maxLengthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder setMaxLength(io.dstore.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxLength_ = value;
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder setMaxLength(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (maxLengthBuilder_ == null) {
            maxLength_ = builderForValue.build();
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder mergeMaxLength(io.dstore.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (maxLength_ != null) {
              maxLength_ =
                io.dstore.Values.integerValue.newBuilder(maxLength_).mergeFrom(value).buildPartial();
            } else {
              maxLength_ = value;
            }
            onChanged();
          } else {
            maxLengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public Builder clearMaxLength() {
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
            onChanged();
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValue.Builder getMaxLengthBuilder() {
          
          onChanged();
          return getMaxLengthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
          if (maxLengthBuilder_ != null) {
            return maxLengthBuilder_.getMessageOrBuilder();
          } else {
            return maxLength_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : maxLength_;
          }
        }
        /**
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         *
         * <code>optional .dstore.values.integerValue max_length = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getMaxLengthFieldBuilder() {
          if (maxLengthBuilder_ == null) {
            maxLengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getMaxLength(),
                    getParentForChildren(),
                    isClean());
            maxLength_ = null;
          }
          return maxLengthBuilder_;
        }

        private io.dstore.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public io.dstore.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public Builder setSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public Builder setSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public Builder mergeSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public io.dstore.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.Values.booleanValue requiredCharacCategory_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> requiredCharacCategoryBuilder_;
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public boolean hasRequiredCharacCategory() {
          return requiredCharacCategoryBuilder_ != null || requiredCharacCategory_ != null;
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public io.dstore.Values.booleanValue getRequiredCharacCategory() {
          if (requiredCharacCategoryBuilder_ == null) {
            return requiredCharacCategory_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : requiredCharacCategory_;
          } else {
            return requiredCharacCategoryBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public Builder setRequiredCharacCategory(io.dstore.Values.booleanValue value) {
          if (requiredCharacCategoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            requiredCharacCategory_ = value;
            onChanged();
          } else {
            requiredCharacCategoryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public Builder setRequiredCharacCategory(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (requiredCharacCategoryBuilder_ == null) {
            requiredCharacCategory_ = builderForValue.build();
            onChanged();
          } else {
            requiredCharacCategoryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public Builder mergeRequiredCharacCategory(io.dstore.Values.booleanValue value) {
          if (requiredCharacCategoryBuilder_ == null) {
            if (requiredCharacCategory_ != null) {
              requiredCharacCategory_ =
                io.dstore.Values.booleanValue.newBuilder(requiredCharacCategory_).mergeFrom(value).buildPartial();
            } else {
              requiredCharacCategory_ = value;
            }
            onChanged();
          } else {
            requiredCharacCategoryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public Builder clearRequiredCharacCategory() {
          if (requiredCharacCategoryBuilder_ == null) {
            requiredCharacCategory_ = null;
            onChanged();
          } else {
            requiredCharacCategory_ = null;
            requiredCharacCategoryBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public io.dstore.Values.booleanValue.Builder getRequiredCharacCategoryBuilder() {
          
          onChanged();
          return getRequiredCharacCategoryFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getRequiredCharacCategoryOrBuilder() {
          if (requiredCharacCategoryBuilder_ != null) {
            return requiredCharacCategoryBuilder_.getMessageOrBuilder();
          } else {
            return requiredCharacCategory_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : requiredCharacCategory_;
          }
        }
        /**
         * <pre>
         * Immer "0", da in diesem Fall ja gerade die Merkmale gesucht werden, die NICHT "&#64;PersonCharacCategoryID" zugeordnet sind ! (Dann hätte man die Spalte ja auch ganz weglassen können ?! - Genau !)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required_charac_category = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getRequiredCharacCategoryFieldBuilder() {
          if (requiredCharacCategoryBuilder_ == null) {
            requiredCharacCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getRequiredCharacCategory(),
                    getParentForChildren(),
                    isClean());
            requiredCharacCategory_ = null;
          }
          return requiredCharacCategoryBuilder_;
        }

        private io.dstore.Values.booleanValue predefinedValues_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> predefinedValuesBuilder_;
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public boolean hasPredefinedValues() {
          return predefinedValuesBuilder_ != null || predefinedValues_ != null;
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public io.dstore.Values.booleanValue getPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            return predefinedValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          } else {
            return predefinedValuesBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public Builder setPredefinedValues(io.dstore.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predefinedValues_ = value;
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public Builder setPredefinedValues(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = builderForValue.build();
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public Builder mergePredefinedValues(io.dstore.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (predefinedValues_ != null) {
              predefinedValues_ =
                io.dstore.Values.booleanValue.newBuilder(predefinedValues_).mergeFrom(value).buildPartial();
            } else {
              predefinedValues_ = value;
            }
            onChanged();
          } else {
            predefinedValuesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public Builder clearPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
            onChanged();
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public io.dstore.Values.booleanValue.Builder getPredefinedValuesBuilder() {
          
          onChanged();
          return getPredefinedValuesFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
          if (predefinedValuesBuilder_ != null) {
            return predefinedValuesBuilder_.getMessageOrBuilder();
          } else {
            return predefinedValues_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          }
        }
        /**
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue predefined_values = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getPredefinedValuesFieldBuilder() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getPredefinedValues(),
                    getParentForChildren(),
                    isClean());
            predefinedValues_ = null;
          }
          return predefinedValuesBuilder_;
        }

        private io.dstore.Values.stringValue readAccessRestrictionPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> readAccessRestrictionPatternBuilder_;
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public boolean hasReadAccessRestrictionPattern() {
          return readAccessRestrictionPatternBuilder_ != null || readAccessRestrictionPattern_ != null;
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public io.dstore.Values.stringValue getReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            return readAccessRestrictionPattern_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          } else {
            return readAccessRestrictionPatternBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public Builder setReadAccessRestrictionPattern(io.dstore.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            readAccessRestrictionPattern_ = value;
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public Builder setReadAccessRestrictionPattern(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = builderForValue.build();
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public Builder mergeReadAccessRestrictionPattern(io.dstore.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (readAccessRestrictionPattern_ != null) {
              readAccessRestrictionPattern_ =
                io.dstore.Values.stringValue.newBuilder(readAccessRestrictionPattern_).mergeFrom(value).buildPartial();
            } else {
              readAccessRestrictionPattern_ = value;
            }
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public Builder clearReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
            onChanged();
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public io.dstore.Values.stringValue.Builder getReadAccessRestrictionPatternBuilder() {
          
          onChanged();
          return getReadAccessRestrictionPatternFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
          if (readAccessRestrictionPatternBuilder_ != null) {
            return readAccessRestrictionPatternBuilder_.getMessageOrBuilder();
          } else {
            return readAccessRestrictionPattern_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          }
        }
        /**
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         *
         * <code>optional .dstore.values.stringValue read_access_restriction_pattern = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getReadAccessRestrictionPatternFieldBuilder() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getReadAccessRestrictionPattern(),
                    getParentForChildren(),
                    isClean());
            readAccessRestrictionPattern_ = null;
          }
          return readAccessRestrictionPatternBuilder_;
        }

        private io.dstore.Values.stringValue format_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> formatBuilder_;
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public boolean hasFormat() {
          return formatBuilder_ != null || format_ != null;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public io.dstore.Values.stringValue getFormat() {
          if (formatBuilder_ == null) {
            return format_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : format_;
          } else {
            return formatBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public Builder setFormat(io.dstore.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            format_ = value;
            onChanged();
          } else {
            formatBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public Builder setFormat(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (formatBuilder_ == null) {
            format_ = builderForValue.build();
            onChanged();
          } else {
            formatBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public Builder mergeFormat(io.dstore.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (format_ != null) {
              format_ =
                io.dstore.Values.stringValue.newBuilder(format_).mergeFrom(value).buildPartial();
            } else {
              format_ = value;
            }
            onChanged();
          } else {
            formatBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public Builder clearFormat() {
          if (formatBuilder_ == null) {
            format_ = null;
            onChanged();
          } else {
            format_ = null;
            formatBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public io.dstore.Values.stringValue.Builder getFormatBuilder() {
          
          onChanged();
          return getFormatFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getFormatOrBuilder() {
          if (formatBuilder_ != null) {
            return formatBuilder_.getMessageOrBuilder();
          } else {
            return format_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : format_;
          }
        }
        /**
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         *
         * <code>optional .dstore.values.stringValue format = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getFormatFieldBuilder() {
          if (formatBuilder_ == null) {
            formatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getFormat(),
                    getParentForChildren(),
                    isClean());
            format_ = null;
          }
          return formatBuilder_;
        }

        private io.dstore.Values.booleanValue required_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> requiredBuilder_;
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public boolean hasRequired() {
          return requiredBuilder_ != null || required_ != null;
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public io.dstore.Values.booleanValue getRequired() {
          if (requiredBuilder_ == null) {
            return required_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : required_;
          } else {
            return requiredBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public Builder setRequired(io.dstore.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            required_ = value;
            onChanged();
          } else {
            requiredBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public Builder setRequired(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (requiredBuilder_ == null) {
            required_ = builderForValue.build();
            onChanged();
          } else {
            requiredBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public Builder mergeRequired(io.dstore.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (required_ != null) {
              required_ =
                io.dstore.Values.booleanValue.newBuilder(required_).mergeFrom(value).buildPartial();
            } else {
              required_ = value;
            }
            onChanged();
          } else {
            requiredBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public Builder clearRequired() {
          if (requiredBuilder_ == null) {
            required_ = null;
            onChanged();
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public io.dstore.Values.booleanValue.Builder getRequiredBuilder() {
          
          onChanged();
          return getRequiredFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getRequiredOrBuilder() {
          if (requiredBuilder_ != null) {
            return requiredBuilder_.getMessageOrBuilder();
          } else {
            return required_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : required_;
          }
        }
        /**
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue required = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getRequiredFieldBuilder() {
          if (requiredBuilder_ == null) {
            requiredBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getRequired(),
                    getParentForChildren(),
                    isClean());
            required_ = null;
          }
          return requiredBuilder_;
        }

        private io.dstore.Values.stringValue basicFieldType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> basicFieldTypeBuilder_;
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public boolean hasBasicFieldType() {
          return basicFieldTypeBuilder_ != null || basicFieldType_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public io.dstore.Values.stringValue getBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            return basicFieldType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
          } else {
            return basicFieldTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public Builder setBasicFieldType(io.dstore.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldType_ = value;
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public Builder setBasicFieldType(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public Builder mergeBasicFieldType(io.dstore.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (basicFieldType_ != null) {
              basicFieldType_ =
                io.dstore.Values.stringValue.newBuilder(basicFieldType_).mergeFrom(value).buildPartial();
            } else {
              basicFieldType_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public Builder clearBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
            onChanged();
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public io.dstore.Values.stringValue.Builder getBasicFieldTypeBuilder() {
          
          onChanged();
          return getBasicFieldTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
          if (basicFieldTypeBuilder_ != null) {
            return basicFieldTypeBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldType_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : basicFieldType_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         *
         * <code>optional .dstore.values.stringValue basic_field_type = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getBasicFieldTypeFieldBuilder() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getBasicFieldType(),
                    getParentForChildren(),
                    isClean());
            basicFieldType_ = null;
          }
          return basicFieldTypeBuilder_;
        }

        private io.dstore.Values.booleanValue isUnique_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> isUniqueBuilder_;
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public boolean hasIsUnique() {
          return isUniqueBuilder_ != null || isUnique_ != null;
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public io.dstore.Values.booleanValue getIsUnique() {
          if (isUniqueBuilder_ == null) {
            return isUnique_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : isUnique_;
          } else {
            return isUniqueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public Builder setIsUnique(io.dstore.Values.booleanValue value) {
          if (isUniqueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            isUnique_ = value;
            onChanged();
          } else {
            isUniqueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public Builder setIsUnique(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (isUniqueBuilder_ == null) {
            isUnique_ = builderForValue.build();
            onChanged();
          } else {
            isUniqueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public Builder mergeIsUnique(io.dstore.Values.booleanValue value) {
          if (isUniqueBuilder_ == null) {
            if (isUnique_ != null) {
              isUnique_ =
                io.dstore.Values.booleanValue.newBuilder(isUnique_).mergeFrom(value).buildPartial();
            } else {
              isUnique_ = value;
            }
            onChanged();
          } else {
            isUniqueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public Builder clearIsUnique() {
          if (isUniqueBuilder_ == null) {
            isUnique_ = null;
            onChanged();
          } else {
            isUnique_ = null;
            isUniqueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public io.dstore.Values.booleanValue.Builder getIsUniqueBuilder() {
          
          onChanged();
          return getIsUniqueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getIsUniqueOrBuilder() {
          if (isUniqueBuilder_ != null) {
            return isUniqueBuilder_.getMessageOrBuilder();
          } else {
            return isUnique_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : isUnique_;
          }
        }
        /**
         * <pre>
         * Falls "1", darf eine bestimmte Eigenschaft zum Merkmal "ID" nur EINER EINZIGEN Person zugewiesen werden
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue is_unique = 10014;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getIsUniqueFieldBuilder() {
          if (isUniqueBuilder_ == null) {
            isUniqueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getIsUnique(),
                    getParentForChildren(),
                    isClean());
            isUnique_ = null;
          }
          return isUniqueBuilder_;
        }

        private io.dstore.Values.stringValue fieldTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> fieldTypeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public boolean hasFieldTypeDescription() {
          return fieldTypeDescriptionBuilder_ != null || fieldTypeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public io.dstore.Values.stringValue getFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            return fieldTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          } else {
            return fieldTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public Builder setFieldTypeDescription(io.dstore.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeDescription_ = value;
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public Builder setFieldTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public Builder mergeFieldTypeDescription(io.dstore.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (fieldTypeDescription_ != null) {
              fieldTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(fieldTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeDescription_ = value;
            }
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public Builder clearFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
            onChanged();
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public io.dstore.Values.stringValue.Builder getFieldTypeDescriptionBuilder() {
          
          onChanged();
          return getFieldTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
          if (fieldTypeDescriptionBuilder_ != null) {
            return fieldTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Datentyps "FieldTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue field_type_description = 10015;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getFieldTypeDescriptionFieldBuilder() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getFieldTypeDescription(),
                    getParentForChildren(),
                    isClean());
            fieldTypeDescription_ = null;
          }
          return fieldTypeDescriptionBuilder_;
        }

        private io.dstore.Values.booleanValue visible_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> visibleBuilder_;
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public boolean hasVisible() {
          return visibleBuilder_ != null || visible_ != null;
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public io.dstore.Values.booleanValue getVisible() {
          if (visibleBuilder_ == null) {
            return visible_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : visible_;
          } else {
            return visibleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public Builder setVisible(io.dstore.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            visible_ = value;
            onChanged();
          } else {
            visibleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public Builder setVisible(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (visibleBuilder_ == null) {
            visible_ = builderForValue.build();
            onChanged();
          } else {
            visibleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public Builder mergeVisible(io.dstore.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (visible_ != null) {
              visible_ =
                io.dstore.Values.booleanValue.newBuilder(visible_).mergeFrom(value).buildPartial();
            } else {
              visible_ = value;
            }
            onChanged();
          } else {
            visibleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public Builder clearVisible() {
          if (visibleBuilder_ == null) {
            visible_ = null;
            onChanged();
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public io.dstore.Values.booleanValue.Builder getVisibleBuilder() {
          
          onChanged();
          return getVisibleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getVisibleOrBuilder() {
          if (visibleBuilder_ != null) {
            return visibleBuilder_.getMessageOrBuilder();
          } else {
            return visible_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : visible_;
          }
        }
        /**
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue visible = 10016;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getVisibleFieldBuilder() {
          if (visibleBuilder_ == null) {
            visibleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getVisible(),
                    getParentForChildren(),
                    isClean());
            visible_ = null;
          }
          return visibleBuilder_;
        }

        private io.dstore.Values.integerValue basicFieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> basicFieldTypeIdBuilder_;
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public boolean hasBasicFieldTypeId() {
          return basicFieldTypeIdBuilder_ != null || basicFieldTypeId_ != null;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public io.dstore.Values.integerValue getBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            return basicFieldTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          } else {
            return basicFieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public Builder setBasicFieldTypeId(io.dstore.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldTypeId_ = value;
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public Builder setBasicFieldTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public Builder mergeBasicFieldTypeId(io.dstore.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (basicFieldTypeId_ != null) {
              basicFieldTypeId_ =
                io.dstore.Values.integerValue.newBuilder(basicFieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              basicFieldTypeId_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public Builder clearBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
            onChanged();
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public io.dstore.Values.integerValue.Builder getBasicFieldTypeIdBuilder() {
          
          onChanged();
          return getBasicFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
          if (basicFieldTypeIdBuilder_ != null) {
            return basicFieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          }
        }
        /**
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue basic_field_type_id = 10017;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getBasicFieldTypeIdFieldBuilder() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getBasicFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            basicFieldTypeId_ = null;
          }
          return basicFieldTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue id_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> idBuilder_;
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public boolean hasId() {
          return idBuilder_ != null || id_ != null;
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public io.dstore.Values.integerValue getId() {
          if (idBuilder_ == null) {
            return id_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : id_;
          } else {
            return idBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public Builder setId(io.dstore.Values.integerValue value) {
          if (idBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            id_ = value;
            onChanged();
          } else {
            idBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public Builder setId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (idBuilder_ == null) {
            id_ = builderForValue.build();
            onChanged();
          } else {
            idBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public Builder mergeId(io.dstore.Values.integerValue value) {
          if (idBuilder_ == null) {
            if (id_ != null) {
              id_ =
                io.dstore.Values.integerValue.newBuilder(id_).mergeFrom(value).buildPartial();
            } else {
              id_ = value;
            }
            onChanged();
          } else {
            idBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public Builder clearId() {
          if (idBuilder_ == null) {
            id_ = null;
            onChanged();
          } else {
            id_ = null;
            idBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public io.dstore.Values.integerValue.Builder getIdBuilder() {
          
          onChanged();
          return getIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getIdOrBuilder() {
          if (idBuilder_ != null) {
            return idBuilder_.getMessageOrBuilder();
          } else {
            return id_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : id_;
          }
        }
        /**
         * <pre>
         * ID eines Personen-Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
         * </pre>
         *
         * <code>optional .dstore.values.integerValue id = 10018;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getIdFieldBuilder() {
          if (idBuilder_ == null) {
            idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getId(),
                    getParentForChildren(),
                    isClean());
            id_ = null;
          }
          return idBuilder_;
        }

        private io.dstore.Values.integerValue personCharacCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personCharacCategoryIdBuilder_;
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public boolean hasPersonCharacCategoryId() {
          return personCharacCategoryIdBuilder_ != null || personCharacCategoryId_ != null;
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public io.dstore.Values.integerValue getPersonCharacCategoryId() {
          if (personCharacCategoryIdBuilder_ == null) {
            return personCharacCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
          } else {
            return personCharacCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public Builder setPersonCharacCategoryId(io.dstore.Values.integerValue value) {
          if (personCharacCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personCharacCategoryId_ = value;
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public Builder setPersonCharacCategoryId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public Builder mergePersonCharacCategoryId(io.dstore.Values.integerValue value) {
          if (personCharacCategoryIdBuilder_ == null) {
            if (personCharacCategoryId_ != null) {
              personCharacCategoryId_ =
                io.dstore.Values.integerValue.newBuilder(personCharacCategoryId_).mergeFrom(value).buildPartial();
            } else {
              personCharacCategoryId_ = value;
            }
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public Builder clearPersonCharacCategoryId() {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = null;
            onChanged();
          } else {
            personCharacCategoryId_ = null;
            personCharacCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public io.dstore.Values.integerValue.Builder getPersonCharacCategoryIdBuilder() {
          
          onChanged();
          return getPersonCharacCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
          if (personCharacCategoryIdBuilder_ != null) {
            return personCharacCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return personCharacCategoryId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Personen-Merkmalen, der das Merkmal "ID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue person_charac_category_id = 30010;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPersonCharacCategoryIdFieldBuilder() {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPersonCharacCategoryId(),
                    getParentForChildren(),
                    isClean());
            personCharacCategoryId_ = null;
          }
          return personCharacCategoryIdBuilder_;
        }

        private io.dstore.Values.stringValue categoryDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> categoryDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public boolean hasCategoryDescription() {
          return categoryDescriptionBuilder_ != null || categoryDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public io.dstore.Values.stringValue getCategoryDescription() {
          if (categoryDescriptionBuilder_ == null) {
            return categoryDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : categoryDescription_;
          } else {
            return categoryDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public Builder setCategoryDescription(io.dstore.Values.stringValue value) {
          if (categoryDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            categoryDescription_ = value;
            onChanged();
          } else {
            categoryDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public Builder setCategoryDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = builderForValue.build();
            onChanged();
          } else {
            categoryDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public Builder mergeCategoryDescription(io.dstore.Values.stringValue value) {
          if (categoryDescriptionBuilder_ == null) {
            if (categoryDescription_ != null) {
              categoryDescription_ =
                io.dstore.Values.stringValue.newBuilder(categoryDescription_).mergeFrom(value).buildPartial();
            } else {
              categoryDescription_ = value;
            }
            onChanged();
          } else {
            categoryDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public Builder clearCategoryDescription() {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = null;
            onChanged();
          } else {
            categoryDescription_ = null;
            categoryDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public io.dstore.Values.stringValue.Builder getCategoryDescriptionBuilder() {
          
          onChanged();
          return getCategoryDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder() {
          if (categoryDescriptionBuilder_ != null) {
            return categoryDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return categoryDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : categoryDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "PersonCharacCategoryID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue category_description = 30019;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCategoryDescriptionFieldBuilder() {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCategoryDescription(),
                    getParentForChildren(),
                    isClean());
            categoryDescription_ = null;
          }
          return categoryDescriptionBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row)
      private static final io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row();
      }

      public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonCharacteristics_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonCharacteristics_Ad.Response)
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.class, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response build() {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response buildPartial() {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response result = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response other) {
        if (other == io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.Row.Builder, io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonCharacteristics_Ad.Response)
    private static final io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response();
    }

    public static io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.PmGetPersonCharacteristicsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/pm_GetPersonC" +
      "haracteristics_Ad.proto\022,dstore.engine.p" +
      "m_GetPersonCharacteristics_Ad\032\023dstore/va" +
      "lues.proto\032\033dstore/engine/message.proto\032" +
      "#dstore/engine/metainformation.proto\"\240\003\n" +
      "\nParameters\0223\n\016person_type_id\030\001 \001(\0132\033.ds" +
      "tore.values.integerValue\022\034\n\023person_type_" +
      "id_null\030\351\007 \001(\010\022>\n\031person_charac_category" +
      "_id\030\002 \001(\0132\033.dstore.values.integerValue\022\'" +
      "\n\036person_charac_category_id_null\030\352\007 \001(\010\022",
      "B\n\035not_in_person_characs_in_cats\030\003 \001(\0132\033" +
      ".dstore.values.integerValue\022+\n\"not_in_pe" +
      "rson_characs_in_cats_null\030\353\007 \001(\010\022=\n\030pers" +
      "on_characteristic_id\030\004 \001(\0132\033.dstore.valu" +
      "es.integerValue\022&\n\035person_characteristic" +
      "_id_null\030\354\007 \001(\010\"\243\n\n\010Response\022H\n\020meta_inf" +
      "ormation\030\002 \003(\0132..dstore.engine.metainfor" +
      "mation.MetaInformation\022/\n\007message\030\003 \003(\0132" +
      "\036.dstore.engine.message.Message\022G\n\003row\030\004" +
      " \003(\0132:.dstore.engine.pm_GetPersonCharact",
      "eristics_Ad.Response.Row\032\322\010\n\003Row\022\017\n\006row_" +
      "id\030\220N \001(\005\0220\n\013description\030\221N \001(\0132\032.dstore" +
      ".values.stringValue\0223\n\rfield_type_id\030\222N " +
      "\001(\0132\033.dstore.values.integerValue\022:\n\025desc" +
      "ription_for_admin\030\223N \001(\0132\032.dstore.values" +
      ".stringValue\0225\n\017precision_value\030\224N \001(\0132\033" +
      ".dstore.values.integerValue\022,\n\006modify\030\225N" +
      " \001(\0132\033.dstore.values.integerValue\0220\n\nmax" +
      "_length\030\226N \001(\0132\033.dstore.values.integerVa" +
      "lue\022-\n\007sort_no\030\227N \001(\0132\033.dstore.values.in",
      "tegerValue\022>\n\030required_charac_category\030\230" +
      "N \001(\0132\033.dstore.values.booleanValue\0227\n\021pr" +
      "edefined_values\030\231N \001(\0132\033.dstore.values.b" +
      "ooleanValue\022D\n\037read_access_restriction_p" +
      "attern\030\232N \001(\0132\032.dstore.values.stringValu" +
      "e\022+\n\006format\030\233N \001(\0132\032.dstore.values.strin" +
      "gValue\022.\n\010required\030\234N \001(\0132\033.dstore.value" +
      "s.booleanValue\0225\n\020basic_field_type\030\235N \001(" +
      "\0132\032.dstore.values.stringValue\022/\n\tis_uniq" +
      "ue\030\236N \001(\0132\033.dstore.values.booleanValue\022;",
      "\n\026field_type_description\030\237N \001(\0132\032.dstore" +
      ".values.stringValue\022-\n\007visible\030\240N \001(\0132\033." +
      "dstore.values.booleanValue\0229\n\023basic_fiel" +
      "d_type_id\030\241N \001(\0132\033.dstore.values.integer" +
      "Value\022(\n\002id\030\242N \001(\0132\033.dstore.values.integ" +
      "erValue\022@\n\031person_charac_category_id\030\272\352\001" +
      " \001(\0132\033.dstore.values.integerValue\022:\n\024cat" +
      "egory_description\030\303\352\001 \001(\0132\032.dstore.value" +
      "s.stringValueB_\n\033io.dstore.engine.proced" +
      "uresZ@gosdk.dstore.de/engine/procedures/",
      "pm_GetPersonCharacteristics_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Parameters_descriptor,
        new java.lang.String[] { "PersonTypeId", "PersonTypeIdNull", "PersonCharacCategoryId", "PersonCharacCategoryIdNull", "NotInPersonCharacsInCats", "NotInPersonCharacsInCatsNull", "PersonCharacteristicId", "PersonCharacteristicIdNull", });
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonCharacteristics_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Description", "FieldTypeId", "DescriptionForAdmin", "PrecisionValue", "Modify", "MaxLength", "SortNo", "RequiredCharacCategory", "PredefinedValues", "ReadAccessRestrictionPattern", "Format", "Required", "BasicFieldType", "IsUnique", "FieldTypeDescription", "Visible", "BasicFieldTypeId", "Id", "PersonCharacCategoryId", "CategoryDescription", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
