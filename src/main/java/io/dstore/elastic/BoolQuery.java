// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/elastic/elastic.proto

package io.dstore.elastic;

/**
 * Protobuf type {@code dstore.elastic.BoolQuery}
 */
public  final class BoolQuery extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dstore.elastic.BoolQuery)
    BoolQueryOrBuilder {
  // Use BoolQuery.newBuilder() to construct.
  private BoolQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BoolQuery() {
    filter_ = java.util.Collections.emptyList();
    must_ = java.util.Collections.emptyList();
    should_ = java.util.Collections.emptyList();
    mustNot_ = java.util.Collections.emptyList();
    minimumShouldMatch_ = "";
    boost_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private BoolQuery(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              filter_ = new java.util.ArrayList<io.dstore.elastic.Query>();
              mutable_bitField0_ |= 0x00000001;
            }
            filter_.add(
                input.readMessage(io.dstore.elastic.Query.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              must_ = new java.util.ArrayList<io.dstore.elastic.Query>();
              mutable_bitField0_ |= 0x00000002;
            }
            must_.add(
                input.readMessage(io.dstore.elastic.Query.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              should_ = new java.util.ArrayList<io.dstore.elastic.Query>();
              mutable_bitField0_ |= 0x00000004;
            }
            should_.add(
                input.readMessage(io.dstore.elastic.Query.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              mustNot_ = new java.util.ArrayList<io.dstore.elastic.Query>();
              mutable_bitField0_ |= 0x00000008;
            }
            mustNot_.add(
                input.readMessage(io.dstore.elastic.Query.parser(), extensionRegistry));
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            minimumShouldMatch_ = s;
            break;
          }
          case 49: {

            boost_ = input.readDouble();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        filter_ = java.util.Collections.unmodifiableList(filter_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        must_ = java.util.Collections.unmodifiableList(must_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        should_ = java.util.Collections.unmodifiableList(should_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        mustNot_ = java.util.Collections.unmodifiableList(mustNot_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.dstore.elastic.ElasticOuterClass.internal_static_dstore_elastic_BoolQuery_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.dstore.elastic.ElasticOuterClass.internal_static_dstore_elastic_BoolQuery_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.dstore.elastic.BoolQuery.class, io.dstore.elastic.BoolQuery.Builder.class);
  }

  private int bitField0_;
  public static final int FILTER_FIELD_NUMBER = 1;
  private java.util.List<io.dstore.elastic.Query> filter_;
  /**
   * <code>repeated .dstore.elastic.Query filter = 1;</code>
   */
  public java.util.List<io.dstore.elastic.Query> getFilterList() {
    return filter_;
  }
  /**
   * <code>repeated .dstore.elastic.Query filter = 1;</code>
   */
  public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
      getFilterOrBuilderList() {
    return filter_;
  }
  /**
   * <code>repeated .dstore.elastic.Query filter = 1;</code>
   */
  public int getFilterCount() {
    return filter_.size();
  }
  /**
   * <code>repeated .dstore.elastic.Query filter = 1;</code>
   */
  public io.dstore.elastic.Query getFilter(int index) {
    return filter_.get(index);
  }
  /**
   * <code>repeated .dstore.elastic.Query filter = 1;</code>
   */
  public io.dstore.elastic.QueryOrBuilder getFilterOrBuilder(
      int index) {
    return filter_.get(index);
  }

  public static final int MUST_FIELD_NUMBER = 2;
  private java.util.List<io.dstore.elastic.Query> must_;
  /**
   * <code>repeated .dstore.elastic.Query must = 2;</code>
   */
  public java.util.List<io.dstore.elastic.Query> getMustList() {
    return must_;
  }
  /**
   * <code>repeated .dstore.elastic.Query must = 2;</code>
   */
  public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
      getMustOrBuilderList() {
    return must_;
  }
  /**
   * <code>repeated .dstore.elastic.Query must = 2;</code>
   */
  public int getMustCount() {
    return must_.size();
  }
  /**
   * <code>repeated .dstore.elastic.Query must = 2;</code>
   */
  public io.dstore.elastic.Query getMust(int index) {
    return must_.get(index);
  }
  /**
   * <code>repeated .dstore.elastic.Query must = 2;</code>
   */
  public io.dstore.elastic.QueryOrBuilder getMustOrBuilder(
      int index) {
    return must_.get(index);
  }

  public static final int SHOULD_FIELD_NUMBER = 3;
  private java.util.List<io.dstore.elastic.Query> should_;
  /**
   * <code>repeated .dstore.elastic.Query should = 3;</code>
   */
  public java.util.List<io.dstore.elastic.Query> getShouldList() {
    return should_;
  }
  /**
   * <code>repeated .dstore.elastic.Query should = 3;</code>
   */
  public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
      getShouldOrBuilderList() {
    return should_;
  }
  /**
   * <code>repeated .dstore.elastic.Query should = 3;</code>
   */
  public int getShouldCount() {
    return should_.size();
  }
  /**
   * <code>repeated .dstore.elastic.Query should = 3;</code>
   */
  public io.dstore.elastic.Query getShould(int index) {
    return should_.get(index);
  }
  /**
   * <code>repeated .dstore.elastic.Query should = 3;</code>
   */
  public io.dstore.elastic.QueryOrBuilder getShouldOrBuilder(
      int index) {
    return should_.get(index);
  }

  public static final int MUST_NOT_FIELD_NUMBER = 4;
  private java.util.List<io.dstore.elastic.Query> mustNot_;
  /**
   * <code>repeated .dstore.elastic.Query must_not = 4;</code>
   */
  public java.util.List<io.dstore.elastic.Query> getMustNotList() {
    return mustNot_;
  }
  /**
   * <code>repeated .dstore.elastic.Query must_not = 4;</code>
   */
  public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
      getMustNotOrBuilderList() {
    return mustNot_;
  }
  /**
   * <code>repeated .dstore.elastic.Query must_not = 4;</code>
   */
  public int getMustNotCount() {
    return mustNot_.size();
  }
  /**
   * <code>repeated .dstore.elastic.Query must_not = 4;</code>
   */
  public io.dstore.elastic.Query getMustNot(int index) {
    return mustNot_.get(index);
  }
  /**
   * <code>repeated .dstore.elastic.Query must_not = 4;</code>
   */
  public io.dstore.elastic.QueryOrBuilder getMustNotOrBuilder(
      int index) {
    return mustNot_.get(index);
  }

  public static final int MINIMUM_SHOULD_MATCH_FIELD_NUMBER = 5;
  private volatile java.lang.Object minimumShouldMatch_;
  /**
   * <code>optional string minimum_should_match = 5;</code>
   */
  public java.lang.String getMinimumShouldMatch() {
    java.lang.Object ref = minimumShouldMatch_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      minimumShouldMatch_ = s;
      return s;
    }
  }
  /**
   * <code>optional string minimum_should_match = 5;</code>
   */
  public com.google.protobuf.ByteString
      getMinimumShouldMatchBytes() {
    java.lang.Object ref = minimumShouldMatch_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      minimumShouldMatch_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BOOST_FIELD_NUMBER = 6;
  private double boost_;
  /**
   * <code>optional double boost = 6;</code>
   */
  public double getBoost() {
    return boost_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < filter_.size(); i++) {
      output.writeMessage(1, filter_.get(i));
    }
    for (int i = 0; i < must_.size(); i++) {
      output.writeMessage(2, must_.get(i));
    }
    for (int i = 0; i < should_.size(); i++) {
      output.writeMessage(3, should_.get(i));
    }
    for (int i = 0; i < mustNot_.size(); i++) {
      output.writeMessage(4, mustNot_.get(i));
    }
    if (!getMinimumShouldMatchBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, minimumShouldMatch_);
    }
    if (boost_ != 0D) {
      output.writeDouble(6, boost_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < filter_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, filter_.get(i));
    }
    for (int i = 0; i < must_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, must_.get(i));
    }
    for (int i = 0; i < should_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, should_.get(i));
    }
    for (int i = 0; i < mustNot_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, mustNot_.get(i));
    }
    if (!getMinimumShouldMatchBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, minimumShouldMatch_);
    }
    if (boost_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, boost_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.dstore.elastic.BoolQuery)) {
      return super.equals(obj);
    }
    io.dstore.elastic.BoolQuery other = (io.dstore.elastic.BoolQuery) obj;

    boolean result = true;
    result = result && getFilterList()
        .equals(other.getFilterList());
    result = result && getMustList()
        .equals(other.getMustList());
    result = result && getShouldList()
        .equals(other.getShouldList());
    result = result && getMustNotList()
        .equals(other.getMustNotList());
    result = result && getMinimumShouldMatch()
        .equals(other.getMinimumShouldMatch());
    result = result && (
        java.lang.Double.doubleToLongBits(getBoost())
        == java.lang.Double.doubleToLongBits(
            other.getBoost()));
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getFilterCount() > 0) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilterList().hashCode();
    }
    if (getMustCount() > 0) {
      hash = (37 * hash) + MUST_FIELD_NUMBER;
      hash = (53 * hash) + getMustList().hashCode();
    }
    if (getShouldCount() > 0) {
      hash = (37 * hash) + SHOULD_FIELD_NUMBER;
      hash = (53 * hash) + getShouldList().hashCode();
    }
    if (getMustNotCount() > 0) {
      hash = (37 * hash) + MUST_NOT_FIELD_NUMBER;
      hash = (53 * hash) + getMustNotList().hashCode();
    }
    hash = (37 * hash) + MINIMUM_SHOULD_MATCH_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumShouldMatch().hashCode();
    hash = (37 * hash) + BOOST_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getBoost()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.dstore.elastic.BoolQuery parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.dstore.elastic.BoolQuery parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.dstore.elastic.BoolQuery parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.dstore.elastic.BoolQuery parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.dstore.elastic.BoolQuery prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dstore.elastic.BoolQuery}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dstore.elastic.BoolQuery)
      io.dstore.elastic.BoolQueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.ElasticOuterClass.internal_static_dstore_elastic_BoolQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.ElasticOuterClass.internal_static_dstore_elastic_BoolQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.BoolQuery.class, io.dstore.elastic.BoolQuery.Builder.class);
    }

    // Construct using io.dstore.elastic.BoolQuery.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFilterFieldBuilder();
        getMustFieldBuilder();
        getShouldFieldBuilder();
        getMustNotFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (filterBuilder_ == null) {
        filter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        filterBuilder_.clear();
      }
      if (mustBuilder_ == null) {
        must_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        mustBuilder_.clear();
      }
      if (shouldBuilder_ == null) {
        should_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        shouldBuilder_.clear();
      }
      if (mustNotBuilder_ == null) {
        mustNot_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        mustNotBuilder_.clear();
      }
      minimumShouldMatch_ = "";

      boost_ = 0D;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.dstore.elastic.ElasticOuterClass.internal_static_dstore_elastic_BoolQuery_descriptor;
    }

    public io.dstore.elastic.BoolQuery getDefaultInstanceForType() {
      return io.dstore.elastic.BoolQuery.getDefaultInstance();
    }

    public io.dstore.elastic.BoolQuery build() {
      io.dstore.elastic.BoolQuery result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.dstore.elastic.BoolQuery buildPartial() {
      io.dstore.elastic.BoolQuery result = new io.dstore.elastic.BoolQuery(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (filterBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          filter_ = java.util.Collections.unmodifiableList(filter_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.filter_ = filter_;
      } else {
        result.filter_ = filterBuilder_.build();
      }
      if (mustBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          must_ = java.util.Collections.unmodifiableList(must_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.must_ = must_;
      } else {
        result.must_ = mustBuilder_.build();
      }
      if (shouldBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          should_ = java.util.Collections.unmodifiableList(should_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.should_ = should_;
      } else {
        result.should_ = shouldBuilder_.build();
      }
      if (mustNotBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          mustNot_ = java.util.Collections.unmodifiableList(mustNot_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.mustNot_ = mustNot_;
      } else {
        result.mustNot_ = mustNotBuilder_.build();
      }
      result.minimumShouldMatch_ = minimumShouldMatch_;
      result.boost_ = boost_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.dstore.elastic.BoolQuery) {
        return mergeFrom((io.dstore.elastic.BoolQuery)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.dstore.elastic.BoolQuery other) {
      if (other == io.dstore.elastic.BoolQuery.getDefaultInstance()) return this;
      if (filterBuilder_ == null) {
        if (!other.filter_.isEmpty()) {
          if (filter_.isEmpty()) {
            filter_ = other.filter_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFilterIsMutable();
            filter_.addAll(other.filter_);
          }
          onChanged();
        }
      } else {
        if (!other.filter_.isEmpty()) {
          if (filterBuilder_.isEmpty()) {
            filterBuilder_.dispose();
            filterBuilder_ = null;
            filter_ = other.filter_;
            bitField0_ = (bitField0_ & ~0x00000001);
            filterBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFilterFieldBuilder() : null;
          } else {
            filterBuilder_.addAllMessages(other.filter_);
          }
        }
      }
      if (mustBuilder_ == null) {
        if (!other.must_.isEmpty()) {
          if (must_.isEmpty()) {
            must_ = other.must_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMustIsMutable();
            must_.addAll(other.must_);
          }
          onChanged();
        }
      } else {
        if (!other.must_.isEmpty()) {
          if (mustBuilder_.isEmpty()) {
            mustBuilder_.dispose();
            mustBuilder_ = null;
            must_ = other.must_;
            bitField0_ = (bitField0_ & ~0x00000002);
            mustBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMustFieldBuilder() : null;
          } else {
            mustBuilder_.addAllMessages(other.must_);
          }
        }
      }
      if (shouldBuilder_ == null) {
        if (!other.should_.isEmpty()) {
          if (should_.isEmpty()) {
            should_ = other.should_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureShouldIsMutable();
            should_.addAll(other.should_);
          }
          onChanged();
        }
      } else {
        if (!other.should_.isEmpty()) {
          if (shouldBuilder_.isEmpty()) {
            shouldBuilder_.dispose();
            shouldBuilder_ = null;
            should_ = other.should_;
            bitField0_ = (bitField0_ & ~0x00000004);
            shouldBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getShouldFieldBuilder() : null;
          } else {
            shouldBuilder_.addAllMessages(other.should_);
          }
        }
      }
      if (mustNotBuilder_ == null) {
        if (!other.mustNot_.isEmpty()) {
          if (mustNot_.isEmpty()) {
            mustNot_ = other.mustNot_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMustNotIsMutable();
            mustNot_.addAll(other.mustNot_);
          }
          onChanged();
        }
      } else {
        if (!other.mustNot_.isEmpty()) {
          if (mustNotBuilder_.isEmpty()) {
            mustNotBuilder_.dispose();
            mustNotBuilder_ = null;
            mustNot_ = other.mustNot_;
            bitField0_ = (bitField0_ & ~0x00000008);
            mustNotBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMustNotFieldBuilder() : null;
          } else {
            mustNotBuilder_.addAllMessages(other.mustNot_);
          }
        }
      }
      if (!other.getMinimumShouldMatch().isEmpty()) {
        minimumShouldMatch_ = other.minimumShouldMatch_;
        onChanged();
      }
      if (other.getBoost() != 0D) {
        setBoost(other.getBoost());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.dstore.elastic.BoolQuery parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.dstore.elastic.BoolQuery) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.dstore.elastic.Query> filter_ =
      java.util.Collections.emptyList();
    private void ensureFilterIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        filter_ = new java.util.ArrayList<io.dstore.elastic.Query>(filter_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> filterBuilder_;

    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public java.util.List<io.dstore.elastic.Query> getFilterList() {
      if (filterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filter_);
      } else {
        return filterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public int getFilterCount() {
      if (filterBuilder_ == null) {
        return filter_.size();
      } else {
        return filterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public io.dstore.elastic.Query getFilter(int index) {
      if (filterBuilder_ == null) {
        return filter_.get(index);
      } else {
        return filterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder setFilter(
        int index, io.dstore.elastic.Query value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterIsMutable();
        filter_.set(index, value);
        onChanged();
      } else {
        filterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder setFilter(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (filterBuilder_ == null) {
        ensureFilterIsMutable();
        filter_.set(index, builderForValue.build());
        onChanged();
      } else {
        filterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder addFilter(io.dstore.elastic.Query value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterIsMutable();
        filter_.add(value);
        onChanged();
      } else {
        filterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder addFilter(
        int index, io.dstore.elastic.Query value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterIsMutable();
        filter_.add(index, value);
        onChanged();
      } else {
        filterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder addFilter(
        io.dstore.elastic.Query.Builder builderForValue) {
      if (filterBuilder_ == null) {
        ensureFilterIsMutable();
        filter_.add(builderForValue.build());
        onChanged();
      } else {
        filterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder addFilter(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (filterBuilder_ == null) {
        ensureFilterIsMutable();
        filter_.add(index, builderForValue.build());
        onChanged();
      } else {
        filterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder addAllFilter(
        java.lang.Iterable<? extends io.dstore.elastic.Query> values) {
      if (filterBuilder_ == null) {
        ensureFilterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, filter_);
        onChanged();
      } else {
        filterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder clearFilter() {
      if (filterBuilder_ == null) {
        filter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        filterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public Builder removeFilter(int index) {
      if (filterBuilder_ == null) {
        ensureFilterIsMutable();
        filter_.remove(index);
        onChanged();
      } else {
        filterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public io.dstore.elastic.Query.Builder getFilterBuilder(
        int index) {
      return getFilterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public io.dstore.elastic.QueryOrBuilder getFilterOrBuilder(
        int index) {
      if (filterBuilder_ == null) {
        return filter_.get(index);  } else {
        return filterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
         getFilterOrBuilderList() {
      if (filterBuilder_ != null) {
        return filterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filter_);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public io.dstore.elastic.Query.Builder addFilterBuilder() {
      return getFilterFieldBuilder().addBuilder(
          io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public io.dstore.elastic.Query.Builder addFilterBuilder(
        int index) {
      return getFilterFieldBuilder().addBuilder(
          index, io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public java.util.List<io.dstore.elastic.Query.Builder> 
         getFilterBuilderList() {
      return getFilterFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> 
        getFilterFieldBuilder() {
      if (filterBuilder_ == null) {
        filterBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder>(
                filter_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      return filterBuilder_;
    }

    private java.util.List<io.dstore.elastic.Query> must_ =
      java.util.Collections.emptyList();
    private void ensureMustIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        must_ = new java.util.ArrayList<io.dstore.elastic.Query>(must_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> mustBuilder_;

    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public java.util.List<io.dstore.elastic.Query> getMustList() {
      if (mustBuilder_ == null) {
        return java.util.Collections.unmodifiableList(must_);
      } else {
        return mustBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public int getMustCount() {
      if (mustBuilder_ == null) {
        return must_.size();
      } else {
        return mustBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public io.dstore.elastic.Query getMust(int index) {
      if (mustBuilder_ == null) {
        return must_.get(index);
      } else {
        return mustBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder setMust(
        int index, io.dstore.elastic.Query value) {
      if (mustBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustIsMutable();
        must_.set(index, value);
        onChanged();
      } else {
        mustBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder setMust(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (mustBuilder_ == null) {
        ensureMustIsMutable();
        must_.set(index, builderForValue.build());
        onChanged();
      } else {
        mustBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder addMust(io.dstore.elastic.Query value) {
      if (mustBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustIsMutable();
        must_.add(value);
        onChanged();
      } else {
        mustBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder addMust(
        int index, io.dstore.elastic.Query value) {
      if (mustBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustIsMutable();
        must_.add(index, value);
        onChanged();
      } else {
        mustBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder addMust(
        io.dstore.elastic.Query.Builder builderForValue) {
      if (mustBuilder_ == null) {
        ensureMustIsMutable();
        must_.add(builderForValue.build());
        onChanged();
      } else {
        mustBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder addMust(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (mustBuilder_ == null) {
        ensureMustIsMutable();
        must_.add(index, builderForValue.build());
        onChanged();
      } else {
        mustBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder addAllMust(
        java.lang.Iterable<? extends io.dstore.elastic.Query> values) {
      if (mustBuilder_ == null) {
        ensureMustIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, must_);
        onChanged();
      } else {
        mustBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder clearMust() {
      if (mustBuilder_ == null) {
        must_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        mustBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public Builder removeMust(int index) {
      if (mustBuilder_ == null) {
        ensureMustIsMutable();
        must_.remove(index);
        onChanged();
      } else {
        mustBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public io.dstore.elastic.Query.Builder getMustBuilder(
        int index) {
      return getMustFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public io.dstore.elastic.QueryOrBuilder getMustOrBuilder(
        int index) {
      if (mustBuilder_ == null) {
        return must_.get(index);  } else {
        return mustBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
         getMustOrBuilderList() {
      if (mustBuilder_ != null) {
        return mustBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(must_);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public io.dstore.elastic.Query.Builder addMustBuilder() {
      return getMustFieldBuilder().addBuilder(
          io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public io.dstore.elastic.Query.Builder addMustBuilder(
        int index) {
      return getMustFieldBuilder().addBuilder(
          index, io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public java.util.List<io.dstore.elastic.Query.Builder> 
         getMustBuilderList() {
      return getMustFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> 
        getMustFieldBuilder() {
      if (mustBuilder_ == null) {
        mustBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder>(
                must_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        must_ = null;
      }
      return mustBuilder_;
    }

    private java.util.List<io.dstore.elastic.Query> should_ =
      java.util.Collections.emptyList();
    private void ensureShouldIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        should_ = new java.util.ArrayList<io.dstore.elastic.Query>(should_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> shouldBuilder_;

    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public java.util.List<io.dstore.elastic.Query> getShouldList() {
      if (shouldBuilder_ == null) {
        return java.util.Collections.unmodifiableList(should_);
      } else {
        return shouldBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public int getShouldCount() {
      if (shouldBuilder_ == null) {
        return should_.size();
      } else {
        return shouldBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public io.dstore.elastic.Query getShould(int index) {
      if (shouldBuilder_ == null) {
        return should_.get(index);
      } else {
        return shouldBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder setShould(
        int index, io.dstore.elastic.Query value) {
      if (shouldBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureShouldIsMutable();
        should_.set(index, value);
        onChanged();
      } else {
        shouldBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder setShould(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (shouldBuilder_ == null) {
        ensureShouldIsMutable();
        should_.set(index, builderForValue.build());
        onChanged();
      } else {
        shouldBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder addShould(io.dstore.elastic.Query value) {
      if (shouldBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureShouldIsMutable();
        should_.add(value);
        onChanged();
      } else {
        shouldBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder addShould(
        int index, io.dstore.elastic.Query value) {
      if (shouldBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureShouldIsMutable();
        should_.add(index, value);
        onChanged();
      } else {
        shouldBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder addShould(
        io.dstore.elastic.Query.Builder builderForValue) {
      if (shouldBuilder_ == null) {
        ensureShouldIsMutable();
        should_.add(builderForValue.build());
        onChanged();
      } else {
        shouldBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder addShould(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (shouldBuilder_ == null) {
        ensureShouldIsMutable();
        should_.add(index, builderForValue.build());
        onChanged();
      } else {
        shouldBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder addAllShould(
        java.lang.Iterable<? extends io.dstore.elastic.Query> values) {
      if (shouldBuilder_ == null) {
        ensureShouldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, should_);
        onChanged();
      } else {
        shouldBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder clearShould() {
      if (shouldBuilder_ == null) {
        should_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        shouldBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public Builder removeShould(int index) {
      if (shouldBuilder_ == null) {
        ensureShouldIsMutable();
        should_.remove(index);
        onChanged();
      } else {
        shouldBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public io.dstore.elastic.Query.Builder getShouldBuilder(
        int index) {
      return getShouldFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public io.dstore.elastic.QueryOrBuilder getShouldOrBuilder(
        int index) {
      if (shouldBuilder_ == null) {
        return should_.get(index);  } else {
        return shouldBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
         getShouldOrBuilderList() {
      if (shouldBuilder_ != null) {
        return shouldBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(should_);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public io.dstore.elastic.Query.Builder addShouldBuilder() {
      return getShouldFieldBuilder().addBuilder(
          io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public io.dstore.elastic.Query.Builder addShouldBuilder(
        int index) {
      return getShouldFieldBuilder().addBuilder(
          index, io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public java.util.List<io.dstore.elastic.Query.Builder> 
         getShouldBuilderList() {
      return getShouldFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> 
        getShouldFieldBuilder() {
      if (shouldBuilder_ == null) {
        shouldBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder>(
                should_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        should_ = null;
      }
      return shouldBuilder_;
    }

    private java.util.List<io.dstore.elastic.Query> mustNot_ =
      java.util.Collections.emptyList();
    private void ensureMustNotIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        mustNot_ = new java.util.ArrayList<io.dstore.elastic.Query>(mustNot_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> mustNotBuilder_;

    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public java.util.List<io.dstore.elastic.Query> getMustNotList() {
      if (mustNotBuilder_ == null) {
        return java.util.Collections.unmodifiableList(mustNot_);
      } else {
        return mustNotBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public int getMustNotCount() {
      if (mustNotBuilder_ == null) {
        return mustNot_.size();
      } else {
        return mustNotBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public io.dstore.elastic.Query getMustNot(int index) {
      if (mustNotBuilder_ == null) {
        return mustNot_.get(index);
      } else {
        return mustNotBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder setMustNot(
        int index, io.dstore.elastic.Query value) {
      if (mustNotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustNotIsMutable();
        mustNot_.set(index, value);
        onChanged();
      } else {
        mustNotBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder setMustNot(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (mustNotBuilder_ == null) {
        ensureMustNotIsMutable();
        mustNot_.set(index, builderForValue.build());
        onChanged();
      } else {
        mustNotBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder addMustNot(io.dstore.elastic.Query value) {
      if (mustNotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustNotIsMutable();
        mustNot_.add(value);
        onChanged();
      } else {
        mustNotBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder addMustNot(
        int index, io.dstore.elastic.Query value) {
      if (mustNotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMustNotIsMutable();
        mustNot_.add(index, value);
        onChanged();
      } else {
        mustNotBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder addMustNot(
        io.dstore.elastic.Query.Builder builderForValue) {
      if (mustNotBuilder_ == null) {
        ensureMustNotIsMutable();
        mustNot_.add(builderForValue.build());
        onChanged();
      } else {
        mustNotBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder addMustNot(
        int index, io.dstore.elastic.Query.Builder builderForValue) {
      if (mustNotBuilder_ == null) {
        ensureMustNotIsMutable();
        mustNot_.add(index, builderForValue.build());
        onChanged();
      } else {
        mustNotBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder addAllMustNot(
        java.lang.Iterable<? extends io.dstore.elastic.Query> values) {
      if (mustNotBuilder_ == null) {
        ensureMustNotIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mustNot_);
        onChanged();
      } else {
        mustNotBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder clearMustNot() {
      if (mustNotBuilder_ == null) {
        mustNot_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        mustNotBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public Builder removeMustNot(int index) {
      if (mustNotBuilder_ == null) {
        ensureMustNotIsMutable();
        mustNot_.remove(index);
        onChanged();
      } else {
        mustNotBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public io.dstore.elastic.Query.Builder getMustNotBuilder(
        int index) {
      return getMustNotFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public io.dstore.elastic.QueryOrBuilder getMustNotOrBuilder(
        int index) {
      if (mustNotBuilder_ == null) {
        return mustNot_.get(index);  } else {
        return mustNotBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public java.util.List<? extends io.dstore.elastic.QueryOrBuilder> 
         getMustNotOrBuilderList() {
      if (mustNotBuilder_ != null) {
        return mustNotBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(mustNot_);
      }
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public io.dstore.elastic.Query.Builder addMustNotBuilder() {
      return getMustNotFieldBuilder().addBuilder(
          io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public io.dstore.elastic.Query.Builder addMustNotBuilder(
        int index) {
      return getMustNotFieldBuilder().addBuilder(
          index, io.dstore.elastic.Query.getDefaultInstance());
    }
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public java.util.List<io.dstore.elastic.Query.Builder> 
         getMustNotBuilderList() {
      return getMustNotFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder> 
        getMustNotFieldBuilder() {
      if (mustNotBuilder_ == null) {
        mustNotBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.dstore.elastic.Query, io.dstore.elastic.Query.Builder, io.dstore.elastic.QueryOrBuilder>(
                mustNot_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        mustNot_ = null;
      }
      return mustNotBuilder_;
    }

    private java.lang.Object minimumShouldMatch_ = "";
    /**
     * <code>optional string minimum_should_match = 5;</code>
     */
    public java.lang.String getMinimumShouldMatch() {
      java.lang.Object ref = minimumShouldMatch_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minimumShouldMatch_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string minimum_should_match = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMinimumShouldMatchBytes() {
      java.lang.Object ref = minimumShouldMatch_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minimumShouldMatch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string minimum_should_match = 5;</code>
     */
    public Builder setMinimumShouldMatch(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      minimumShouldMatch_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string minimum_should_match = 5;</code>
     */
    public Builder clearMinimumShouldMatch() {
      
      minimumShouldMatch_ = getDefaultInstance().getMinimumShouldMatch();
      onChanged();
      return this;
    }
    /**
     * <code>optional string minimum_should_match = 5;</code>
     */
    public Builder setMinimumShouldMatchBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      minimumShouldMatch_ = value;
      onChanged();
      return this;
    }

    private double boost_ ;
    /**
     * <code>optional double boost = 6;</code>
     */
    public double getBoost() {
      return boost_;
    }
    /**
     * <code>optional double boost = 6;</code>
     */
    public Builder setBoost(double value) {
      
      boost_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double boost = 6;</code>
     */
    public Builder clearBoost() {
      
      boost_ = 0D;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:dstore.elastic.BoolQuery)
  }

  // @@protoc_insertion_point(class_scope:dstore.elastic.BoolQuery)
  private static final io.dstore.elastic.BoolQuery DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.dstore.elastic.BoolQuery();
  }

  public static io.dstore.elastic.BoolQuery getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BoolQuery>
      PARSER = new com.google.protobuf.AbstractParser<BoolQuery>() {
    public BoolQuery parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new BoolQuery(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BoolQuery> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BoolQuery> getParserForType() {
    return PARSER;
  }

  public io.dstore.elastic.BoolQuery getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

