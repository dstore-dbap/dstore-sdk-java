// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/elastic/item/facetednavigation.proto

package io.dstore.elastic.item;

public final class FacetedNavigation {
  private FacetedNavigation() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.facetednavigation.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    java.util.List<io.dstore.elastic.ElasticQuery.Query> 
        getBaseFilterList();
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.Query getBaseFilter(int index);
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    int getBaseFilterCount();
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getBaseFilterOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.QueryOrBuilder getBaseFilterOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    java.util.List<io.dstore.elastic.ElasticQuery.Query> 
        getPostFilterList();
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.Query getPostFilter(int index);
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    int getPostFilterCount();
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getPostFilterOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.QueryOrBuilder getPostFilterOrBuilder(
        int index);

    /**
     * <code>repeated string facets = 3;</code>
     */
    com.google.protobuf.ProtocolStringList
        getFacetsList();
    /**
     * <code>repeated string facets = 3;</code>
     */
    int getFacetsCount();
    /**
     * <code>repeated string facets = 3;</code>
     */
    java.lang.String getFacets(int index);
    /**
     * <code>repeated string facets = 3;</code>
     */
    com.google.protobuf.ByteString
        getFacetsBytes(int index);

    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    java.util.List<io.dstore.elastic.ElasticSort.Sort> 
        getSortList();
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    io.dstore.elastic.ElasticSort.Sort getSort(int index);
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    int getSortCount();
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    java.util.List<? extends io.dstore.elastic.ElasticSort.SortOrBuilder> 
        getSortOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    io.dstore.elastic.ElasticSort.SortOrBuilder getSortOrBuilder(
        int index);

    /**
     * <code>optional int32 from = 10;</code>
     *
     * <pre>
     * Paginierung GET /_search?size=5&amp;from=5
     * </pre>
     */
    int getFrom();

    /**
     * <code>optional int32 size = 11;</code>
     */
    int getSize();
  }
  /**
   * Protobuf type {@code dstore.elastic.facetednavigation.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.facetednavigation.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Request() {
      baseFilter_ = java.util.Collections.emptyList();
      postFilter_ = java.util.Collections.emptyList();
      facets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      sort_ = java.util.Collections.emptyList();
      from_ = 0;
      size_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                baseFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>();
                mutable_bitField0_ |= 0x00000001;
              }
              baseFilter_.add(input.readMessage(io.dstore.elastic.ElasticQuery.Query.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                postFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>();
                mutable_bitField0_ |= 0x00000002;
              }
              postFilter_.add(input.readMessage(io.dstore.elastic.ElasticQuery.Query.parser(), extensionRegistry));
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                facets_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              facets_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sort_ = new java.util.ArrayList<io.dstore.elastic.ElasticSort.Sort>();
                mutable_bitField0_ |= 0x00000008;
              }
              sort_.add(input.readMessage(io.dstore.elastic.ElasticSort.Sort.parser(), extensionRegistry));
              break;
            }
            case 80: {

              from_ = input.readInt32();
              break;
            }
            case 88: {

              size_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          baseFilter_ = java.util.Collections.unmodifiableList(baseFilter_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          postFilter_ = java.util.Collections.unmodifiableList(postFilter_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          facets_ = facets_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sort_ = java.util.Collections.unmodifiableList(sort_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.item.FacetedNavigation.Request.class, io.dstore.elastic.item.FacetedNavigation.Request.Builder.class);
    }

    private int bitField0_;
    public static final int BASE_FILTER_FIELD_NUMBER = 1;
    private java.util.List<io.dstore.elastic.ElasticQuery.Query> baseFilter_;
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    public java.util.List<io.dstore.elastic.ElasticQuery.Query> getBaseFilterList() {
      return baseFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getBaseFilterOrBuilderList() {
      return baseFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    public int getBaseFilterCount() {
      return baseFilter_.size();
    }
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.Query getBaseFilter(int index) {
      return baseFilter_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis und alle Aggregationen gefiltert
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.QueryOrBuilder getBaseFilterOrBuilder(
        int index) {
      return baseFilter_.get(index);
    }

    public static final int POST_FILTER_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.elastic.ElasticQuery.Query> postFilter_;
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    public java.util.List<io.dstore.elastic.ElasticQuery.Query> getPostFilterList() {
      return postFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getPostFilterOrBuilderList() {
      return postFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    public int getPostFilterCount() {
      return postFilter_.size();
    }
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.Query getPostFilter(int index) {
      return postFilter_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
     *
     * <pre>
     * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.QueryOrBuilder getPostFilterOrBuilder(
        int index) {
      return postFilter_.get(index);
    }

    public static final int FACETS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList facets_;
    /**
     * <code>repeated string facets = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getFacetsList() {
      return facets_;
    }
    /**
     * <code>repeated string facets = 3;</code>
     */
    public int getFacetsCount() {
      return facets_.size();
    }
    /**
     * <code>repeated string facets = 3;</code>
     */
    public java.lang.String getFacets(int index) {
      return facets_.get(index);
    }
    /**
     * <code>repeated string facets = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFacetsBytes(int index) {
      return facets_.getByteString(index);
    }

    public static final int SORT_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.elastic.ElasticSort.Sort> sort_;
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    public java.util.List<io.dstore.elastic.ElasticSort.Sort> getSortList() {
      return sort_;
    }
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    public java.util.List<? extends io.dstore.elastic.ElasticSort.SortOrBuilder> 
        getSortOrBuilderList() {
      return sort_;
    }
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    public int getSortCount() {
      return sort_.size();
    }
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    public io.dstore.elastic.ElasticSort.Sort getSort(int index) {
      return sort_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
     */
    public io.dstore.elastic.ElasticSort.SortOrBuilder getSortOrBuilder(
        int index) {
      return sort_.get(index);
    }

    public static final int FROM_FIELD_NUMBER = 10;
    private int from_;
    /**
     * <code>optional int32 from = 10;</code>
     *
     * <pre>
     * Paginierung GET /_search?size=5&amp;from=5
     * </pre>
     */
    public int getFrom() {
      return from_;
    }

    public static final int SIZE_FIELD_NUMBER = 11;
    private int size_;
    /**
     * <code>optional int32 size = 11;</code>
     */
    public int getSize() {
      return size_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < baseFilter_.size(); i++) {
        output.writeMessage(1, baseFilter_.get(i));
      }
      for (int i = 0; i < postFilter_.size(); i++) {
        output.writeMessage(2, postFilter_.get(i));
      }
      for (int i = 0; i < facets_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, facets_.getRaw(i));
      }
      for (int i = 0; i < sort_.size(); i++) {
        output.writeMessage(4, sort_.get(i));
      }
      if (from_ != 0) {
        output.writeInt32(10, from_);
      }
      if (size_ != 0) {
        output.writeInt32(11, size_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < baseFilter_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, baseFilter_.get(i));
      }
      for (int i = 0; i < postFilter_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, postFilter_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < facets_.size(); i++) {
          dataSize += computeStringSizeNoTag(facets_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getFacetsList().size();
      }
      for (int i = 0; i < sort_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sort_.get(i));
      }
      if (from_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, from_);
      }
      if (size_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, size_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.item.FacetedNavigation.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.facetednavigation.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.facetednavigation.Request)
        io.dstore.elastic.item.FacetedNavigation.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.FacetedNavigation.Request.class, io.dstore.elastic.item.FacetedNavigation.Request.Builder.class);
      }

      // Construct using io.dstore.elastic.item.FacetedNavigation.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBaseFilterFieldBuilder();
          getPostFilterFieldBuilder();
          getSortFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (baseFilterBuilder_ == null) {
          baseFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          baseFilterBuilder_.clear();
        }
        if (postFilterBuilder_ == null) {
          postFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          postFilterBuilder_.clear();
        }
        facets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sortBuilder_ == null) {
          sort_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sortBuilder_.clear();
        }
        from_ = 0;

        size_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Request_descriptor;
      }

      public io.dstore.elastic.item.FacetedNavigation.Request getDefaultInstanceForType() {
        return io.dstore.elastic.item.FacetedNavigation.Request.getDefaultInstance();
      }

      public io.dstore.elastic.item.FacetedNavigation.Request build() {
        io.dstore.elastic.item.FacetedNavigation.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.item.FacetedNavigation.Request buildPartial() {
        io.dstore.elastic.item.FacetedNavigation.Request result = new io.dstore.elastic.item.FacetedNavigation.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (baseFilterBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            baseFilter_ = java.util.Collections.unmodifiableList(baseFilter_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.baseFilter_ = baseFilter_;
        } else {
          result.baseFilter_ = baseFilterBuilder_.build();
        }
        if (postFilterBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            postFilter_ = java.util.Collections.unmodifiableList(postFilter_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.postFilter_ = postFilter_;
        } else {
          result.postFilter_ = postFilterBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          facets_ = facets_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.facets_ = facets_;
        if (sortBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sort_ = java.util.Collections.unmodifiableList(sort_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sort_ = sort_;
        } else {
          result.sort_ = sortBuilder_.build();
        }
        result.from_ = from_;
        result.size_ = size_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.item.FacetedNavigation.Request) {
          return mergeFrom((io.dstore.elastic.item.FacetedNavigation.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.item.FacetedNavigation.Request other) {
        if (other == io.dstore.elastic.item.FacetedNavigation.Request.getDefaultInstance()) return this;
        if (baseFilterBuilder_ == null) {
          if (!other.baseFilter_.isEmpty()) {
            if (baseFilter_.isEmpty()) {
              baseFilter_ = other.baseFilter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureBaseFilterIsMutable();
              baseFilter_.addAll(other.baseFilter_);
            }
            onChanged();
          }
        } else {
          if (!other.baseFilter_.isEmpty()) {
            if (baseFilterBuilder_.isEmpty()) {
              baseFilterBuilder_.dispose();
              baseFilterBuilder_ = null;
              baseFilter_ = other.baseFilter_;
              bitField0_ = (bitField0_ & ~0x00000001);
              baseFilterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBaseFilterFieldBuilder() : null;
            } else {
              baseFilterBuilder_.addAllMessages(other.baseFilter_);
            }
          }
        }
        if (postFilterBuilder_ == null) {
          if (!other.postFilter_.isEmpty()) {
            if (postFilter_.isEmpty()) {
              postFilter_ = other.postFilter_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePostFilterIsMutable();
              postFilter_.addAll(other.postFilter_);
            }
            onChanged();
          }
        } else {
          if (!other.postFilter_.isEmpty()) {
            if (postFilterBuilder_.isEmpty()) {
              postFilterBuilder_.dispose();
              postFilterBuilder_ = null;
              postFilter_ = other.postFilter_;
              bitField0_ = (bitField0_ & ~0x00000002);
              postFilterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPostFilterFieldBuilder() : null;
            } else {
              postFilterBuilder_.addAllMessages(other.postFilter_);
            }
          }
        }
        if (!other.facets_.isEmpty()) {
          if (facets_.isEmpty()) {
            facets_ = other.facets_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFacetsIsMutable();
            facets_.addAll(other.facets_);
          }
          onChanged();
        }
        if (sortBuilder_ == null) {
          if (!other.sort_.isEmpty()) {
            if (sort_.isEmpty()) {
              sort_ = other.sort_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSortIsMutable();
              sort_.addAll(other.sort_);
            }
            onChanged();
          }
        } else {
          if (!other.sort_.isEmpty()) {
            if (sortBuilder_.isEmpty()) {
              sortBuilder_.dispose();
              sortBuilder_ = null;
              sort_ = other.sort_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sortBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSortFieldBuilder() : null;
            } else {
              sortBuilder_.addAllMessages(other.sort_);
            }
          }
        }
        if (other.getFrom() != 0) {
          setFrom(other.getFrom());
        }
        if (other.getSize() != 0) {
          setSize(other.getSize());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.item.FacetedNavigation.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.item.FacetedNavigation.Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.elastic.ElasticQuery.Query> baseFilter_ =
        java.util.Collections.emptyList();
      private void ensureBaseFilterIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          baseFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>(baseFilter_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> baseFilterBuilder_;

      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query> getBaseFilterList() {
        if (baseFilterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(baseFilter_);
        } else {
          return baseFilterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public int getBaseFilterCount() {
        if (baseFilterBuilder_ == null) {
          return baseFilter_.size();
        } else {
          return baseFilterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query getBaseFilter(int index) {
        if (baseFilterBuilder_ == null) {
          return baseFilter_.get(index);
        } else {
          return baseFilterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder setBaseFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (baseFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterIsMutable();
          baseFilter_.set(index, value);
          onChanged();
        } else {
          baseFilterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder setBaseFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (baseFilterBuilder_ == null) {
          ensureBaseFilterIsMutable();
          baseFilter_.set(index, builderForValue.build());
          onChanged();
        } else {
          baseFilterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder addBaseFilter(io.dstore.elastic.ElasticQuery.Query value) {
        if (baseFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterIsMutable();
          baseFilter_.add(value);
          onChanged();
        } else {
          baseFilterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder addBaseFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (baseFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterIsMutable();
          baseFilter_.add(index, value);
          onChanged();
        } else {
          baseFilterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder addBaseFilter(
          io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (baseFilterBuilder_ == null) {
          ensureBaseFilterIsMutable();
          baseFilter_.add(builderForValue.build());
          onChanged();
        } else {
          baseFilterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder addBaseFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (baseFilterBuilder_ == null) {
          ensureBaseFilterIsMutable();
          baseFilter_.add(index, builderForValue.build());
          onChanged();
        } else {
          baseFilterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder addAllBaseFilter(
          java.lang.Iterable<? extends io.dstore.elastic.ElasticQuery.Query> values) {
        if (baseFilterBuilder_ == null) {
          ensureBaseFilterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, baseFilter_);
          onChanged();
        } else {
          baseFilterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder clearBaseFilter() {
        if (baseFilterBuilder_ == null) {
          baseFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          baseFilterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public Builder removeBaseFilter(int index) {
        if (baseFilterBuilder_ == null) {
          ensureBaseFilterIsMutable();
          baseFilter_.remove(index);
          onChanged();
        } else {
          baseFilterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder getBaseFilterBuilder(
          int index) {
        return getBaseFilterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.QueryOrBuilder getBaseFilterOrBuilder(
          int index) {
        if (baseFilterBuilder_ == null) {
          return baseFilter_.get(index);  } else {
          return baseFilterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
           getBaseFilterOrBuilderList() {
        if (baseFilterBuilder_ != null) {
          return baseFilterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(baseFilter_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addBaseFilterBuilder() {
        return getBaseFilterFieldBuilder().addBuilder(
            io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addBaseFilterBuilder(
          int index) {
        return getBaseFilterFieldBuilder().addBuilder(
            index, io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query base_filter = 1;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis und alle Aggregationen gefiltert
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query.Builder> 
           getBaseFilterBuilderList() {
        return getBaseFilterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
          getBaseFilterFieldBuilder() {
        if (baseFilterBuilder_ == null) {
          baseFilterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder>(
                  baseFilter_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          baseFilter_ = null;
        }
        return baseFilterBuilder_;
      }

      private java.util.List<io.dstore.elastic.ElasticQuery.Query> postFilter_ =
        java.util.Collections.emptyList();
      private void ensurePostFilterIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          postFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>(postFilter_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> postFilterBuilder_;

      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query> getPostFilterList() {
        if (postFilterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(postFilter_);
        } else {
          return postFilterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public int getPostFilterCount() {
        if (postFilterBuilder_ == null) {
          return postFilter_.size();
        } else {
          return postFilterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query getPostFilter(int index) {
        if (postFilterBuilder_ == null) {
          return postFilter_.get(index);
        } else {
          return postFilterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder setPostFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (postFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePostFilterIsMutable();
          postFilter_.set(index, value);
          onChanged();
        } else {
          postFilterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder setPostFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (postFilterBuilder_ == null) {
          ensurePostFilterIsMutable();
          postFilter_.set(index, builderForValue.build());
          onChanged();
        } else {
          postFilterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder addPostFilter(io.dstore.elastic.ElasticQuery.Query value) {
        if (postFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePostFilterIsMutable();
          postFilter_.add(value);
          onChanged();
        } else {
          postFilterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder addPostFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (postFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePostFilterIsMutable();
          postFilter_.add(index, value);
          onChanged();
        } else {
          postFilterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder addPostFilter(
          io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (postFilterBuilder_ == null) {
          ensurePostFilterIsMutable();
          postFilter_.add(builderForValue.build());
          onChanged();
        } else {
          postFilterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder addPostFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (postFilterBuilder_ == null) {
          ensurePostFilterIsMutable();
          postFilter_.add(index, builderForValue.build());
          onChanged();
        } else {
          postFilterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder addAllPostFilter(
          java.lang.Iterable<? extends io.dstore.elastic.ElasticQuery.Query> values) {
        if (postFilterBuilder_ == null) {
          ensurePostFilterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, postFilter_);
          onChanged();
        } else {
          postFilterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder clearPostFilter() {
        if (postFilterBuilder_ == null) {
          postFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          postFilterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public Builder removePostFilter(int index) {
        if (postFilterBuilder_ == null) {
          ensurePostFilterIsMutable();
          postFilter_.remove(index);
          onChanged();
        } else {
          postFilterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder getPostFilterBuilder(
          int index) {
        return getPostFilterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.QueryOrBuilder getPostFilterOrBuilder(
          int index) {
        if (postFilterBuilder_ == null) {
          return postFilter_.get(index);  } else {
          return postFilterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
           getPostFilterOrBuilderList() {
        if (postFilterBuilder_ != null) {
          return postFilterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(postFilter_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addPostFilterBuilder() {
        return getPostFilterFieldBuilder().addBuilder(
            io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addPostFilterBuilder(
          int index) {
        return getPostFilterFieldBuilder().addBuilder(
            index, io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query post_filter = 2;</code>
       *
       * <pre>
       * Danach wird das Suchergebnis nachträglich gefiltert und es wird jeweils eine zusätzliche FilteredAggregation geliefert
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query.Builder> 
           getPostFilterBuilderList() {
        return getPostFilterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
          getPostFilterFieldBuilder() {
        if (postFilterBuilder_ == null) {
          postFilterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder>(
                  postFilter_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          postFilter_ = null;
        }
        return postFilterBuilder_;
      }

      private com.google.protobuf.LazyStringList facets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFacetsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          facets_ = new com.google.protobuf.LazyStringArrayList(facets_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getFacetsList() {
        return facets_.getUnmodifiableView();
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public int getFacetsCount() {
        return facets_.size();
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public java.lang.String getFacets(int index) {
        return facets_.get(index);
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFacetsBytes(int index) {
        return facets_.getByteString(index);
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public Builder setFacets(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFacetsIsMutable();
        facets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public Builder addFacets(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFacetsIsMutable();
        facets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public Builder addAllFacets(
          java.lang.Iterable<java.lang.String> values) {
        ensureFacetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, facets_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public Builder clearFacets() {
        facets_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string facets = 3;</code>
       */
      public Builder addFacetsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureFacetsIsMutable();
        facets_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<io.dstore.elastic.ElasticSort.Sort> sort_ =
        java.util.Collections.emptyList();
      private void ensureSortIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sort_ = new java.util.ArrayList<io.dstore.elastic.ElasticSort.Sort>(sort_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticSort.Sort, io.dstore.elastic.ElasticSort.Sort.Builder, io.dstore.elastic.ElasticSort.SortOrBuilder> sortBuilder_;

      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public java.util.List<io.dstore.elastic.ElasticSort.Sort> getSortList() {
        if (sortBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sort_);
        } else {
          return sortBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public int getSortCount() {
        if (sortBuilder_ == null) {
          return sort_.size();
        } else {
          return sortBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort getSort(int index) {
        if (sortBuilder_ == null) {
          return sort_.get(index);
        } else {
          return sortBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder setSort(
          int index, io.dstore.elastic.ElasticSort.Sort value) {
        if (sortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortIsMutable();
          sort_.set(index, value);
          onChanged();
        } else {
          sortBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder setSort(
          int index, io.dstore.elastic.ElasticSort.Sort.Builder builderForValue) {
        if (sortBuilder_ == null) {
          ensureSortIsMutable();
          sort_.set(index, builderForValue.build());
          onChanged();
        } else {
          sortBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder addSort(io.dstore.elastic.ElasticSort.Sort value) {
        if (sortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortIsMutable();
          sort_.add(value);
          onChanged();
        } else {
          sortBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder addSort(
          int index, io.dstore.elastic.ElasticSort.Sort value) {
        if (sortBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSortIsMutable();
          sort_.add(index, value);
          onChanged();
        } else {
          sortBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder addSort(
          io.dstore.elastic.ElasticSort.Sort.Builder builderForValue) {
        if (sortBuilder_ == null) {
          ensureSortIsMutable();
          sort_.add(builderForValue.build());
          onChanged();
        } else {
          sortBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder addSort(
          int index, io.dstore.elastic.ElasticSort.Sort.Builder builderForValue) {
        if (sortBuilder_ == null) {
          ensureSortIsMutable();
          sort_.add(index, builderForValue.build());
          onChanged();
        } else {
          sortBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder addAllSort(
          java.lang.Iterable<? extends io.dstore.elastic.ElasticSort.Sort> values) {
        if (sortBuilder_ == null) {
          ensureSortIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sort_);
          onChanged();
        } else {
          sortBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder clearSort() {
        if (sortBuilder_ == null) {
          sort_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sortBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public Builder removeSort(int index) {
        if (sortBuilder_ == null) {
          ensureSortIsMutable();
          sort_.remove(index);
          onChanged();
        } else {
          sortBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Builder getSortBuilder(
          int index) {
        return getSortFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public io.dstore.elastic.ElasticSort.SortOrBuilder getSortOrBuilder(
          int index) {
        if (sortBuilder_ == null) {
          return sort_.get(index);  } else {
          return sortBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public java.util.List<? extends io.dstore.elastic.ElasticSort.SortOrBuilder> 
           getSortOrBuilderList() {
        if (sortBuilder_ != null) {
          return sortBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sort_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Builder addSortBuilder() {
        return getSortFieldBuilder().addBuilder(
            io.dstore.elastic.ElasticSort.Sort.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Builder addSortBuilder(
          int index) {
        return getSortFieldBuilder().addBuilder(
            index, io.dstore.elastic.ElasticSort.Sort.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.sort.Sort sort = 4;</code>
       */
      public java.util.List<io.dstore.elastic.ElasticSort.Sort.Builder> 
           getSortBuilderList() {
        return getSortFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticSort.Sort, io.dstore.elastic.ElasticSort.Sort.Builder, io.dstore.elastic.ElasticSort.SortOrBuilder> 
          getSortFieldBuilder() {
        if (sortBuilder_ == null) {
          sortBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.ElasticSort.Sort, io.dstore.elastic.ElasticSort.Sort.Builder, io.dstore.elastic.ElasticSort.SortOrBuilder>(
                  sort_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sort_ = null;
        }
        return sortBuilder_;
      }

      private int from_ ;
      /**
       * <code>optional int32 from = 10;</code>
       *
       * <pre>
       * Paginierung GET /_search?size=5&amp;from=5
       * </pre>
       */
      public int getFrom() {
        return from_;
      }
      /**
       * <code>optional int32 from = 10;</code>
       *
       * <pre>
       * Paginierung GET /_search?size=5&amp;from=5
       * </pre>
       */
      public Builder setFrom(int value) {
        
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 from = 10;</code>
       *
       * <pre>
       * Paginierung GET /_search?size=5&amp;from=5
       * </pre>
       */
      public Builder clearFrom() {
        
        from_ = 0;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>optional int32 size = 11;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 11;</code>
       */
      public Builder setSize(int value) {
        
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 11;</code>
       */
      public Builder clearSize() {
        
        size_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.facetednavigation.Request)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.facetednavigation.Request)
    private static final io.dstore.elastic.item.FacetedNavigation.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.item.FacetedNavigation.Request();
    }

    public static io.dstore.elastic.item.FacetedNavigation.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Request(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.item.FacetedNavigation.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.facetednavigation.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 total_hits = 1;</code>
     */
    int getTotalHits();

    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    java.util.List<io.dstore.elastic.item.ElasticItem.Item> 
        getItemList();
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    io.dstore.elastic.item.ElasticItem.Item getItem(int index);
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    int getItemCount();
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    java.util.List<? extends io.dstore.elastic.item.ElasticItem.ItemOrBuilder> 
        getItemOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    io.dstore.elastic.item.ElasticItem.ItemOrBuilder getItemOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets> 
        getFacetList();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    io.dstore.elastic.item.FacetedNavigation.Facets getFacet(int index);
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    int getFacetCount();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder> 
        getFacetOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder getFacetOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.elastic.facetednavigation.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.facetednavigation.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      totalHits_ = 0;
      item_ = java.util.Collections.emptyList();
      facet_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              totalHits_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                item_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticItem.Item>();
                mutable_bitField0_ |= 0x00000002;
              }
              item_.add(input.readMessage(io.dstore.elastic.item.ElasticItem.Item.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                facet_ = new java.util.ArrayList<io.dstore.elastic.item.FacetedNavigation.Facets>();
                mutable_bitField0_ |= 0x00000004;
              }
              facet_.add(input.readMessage(io.dstore.elastic.item.FacetedNavigation.Facets.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          facet_ = java.util.Collections.unmodifiableList(facet_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.item.FacetedNavigation.Response.class, io.dstore.elastic.item.FacetedNavigation.Response.Builder.class);
    }

    private int bitField0_;
    public static final int TOTAL_HITS_FIELD_NUMBER = 1;
    private int totalHits_;
    /**
     * <code>optional int32 total_hits = 1;</code>
     */
    public int getTotalHits() {
      return totalHits_;
    }

    public static final int ITEM_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.elastic.item.ElasticItem.Item> item_;
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    public java.util.List<io.dstore.elastic.item.ElasticItem.Item> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    public java.util.List<? extends io.dstore.elastic.item.ElasticItem.ItemOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    public io.dstore.elastic.item.ElasticItem.Item getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.item.Item item = 2;</code>
     */
    public io.dstore.elastic.item.ElasticItem.ItemOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    public static final int FACET_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets> facet_;
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets> getFacetList() {
      return facet_;
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    public java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder> 
        getFacetOrBuilderList() {
      return facet_;
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    public int getFacetCount() {
      return facet_.size();
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    public io.dstore.elastic.item.FacetedNavigation.Facets getFacet(int index) {
      return facet_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
     */
    public io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder getFacetOrBuilder(
        int index) {
      return facet_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (totalHits_ != 0) {
        output.writeInt32(1, totalHits_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(2, item_.get(i));
      }
      for (int i = 0; i < facet_.size(); i++) {
        output.writeMessage(3, facet_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (totalHits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, totalHits_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, item_.get(i));
      }
      for (int i = 0; i < facet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, facet_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.item.FacetedNavigation.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.facetednavigation.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.facetednavigation.Response)
        io.dstore.elastic.item.FacetedNavigation.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.FacetedNavigation.Response.class, io.dstore.elastic.item.FacetedNavigation.Response.Builder.class);
      }

      // Construct using io.dstore.elastic.item.FacetedNavigation.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemFieldBuilder();
          getFacetFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        totalHits_ = 0;

        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          itemBuilder_.clear();
        }
        if (facetBuilder_ == null) {
          facet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          facetBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Response_descriptor;
      }

      public io.dstore.elastic.item.FacetedNavigation.Response getDefaultInstanceForType() {
        return io.dstore.elastic.item.FacetedNavigation.Response.getDefaultInstance();
      }

      public io.dstore.elastic.item.FacetedNavigation.Response build() {
        io.dstore.elastic.item.FacetedNavigation.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.item.FacetedNavigation.Response buildPartial() {
        io.dstore.elastic.item.FacetedNavigation.Response result = new io.dstore.elastic.item.FacetedNavigation.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.totalHits_ = totalHits_;
        if (itemBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            item_ = java.util.Collections.unmodifiableList(item_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        if (facetBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            facet_ = java.util.Collections.unmodifiableList(facet_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.facet_ = facet_;
        } else {
          result.facet_ = facetBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.item.FacetedNavigation.Response) {
          return mergeFrom((io.dstore.elastic.item.FacetedNavigation.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.item.FacetedNavigation.Response other) {
        if (other == io.dstore.elastic.item.FacetedNavigation.Response.getDefaultInstance()) return this;
        if (other.getTotalHits() != 0) {
          setTotalHits(other.getTotalHits());
        }
        if (itemBuilder_ == null) {
          if (!other.item_.isEmpty()) {
            if (item_.isEmpty()) {
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemIsMutable();
              item_.addAll(other.item_);
            }
            onChanged();
          }
        } else {
          if (!other.item_.isEmpty()) {
            if (itemBuilder_.isEmpty()) {
              itemBuilder_.dispose();
              itemBuilder_ = null;
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemFieldBuilder() : null;
            } else {
              itemBuilder_.addAllMessages(other.item_);
            }
          }
        }
        if (facetBuilder_ == null) {
          if (!other.facet_.isEmpty()) {
            if (facet_.isEmpty()) {
              facet_ = other.facet_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFacetIsMutable();
              facet_.addAll(other.facet_);
            }
            onChanged();
          }
        } else {
          if (!other.facet_.isEmpty()) {
            if (facetBuilder_.isEmpty()) {
              facetBuilder_.dispose();
              facetBuilder_ = null;
              facet_ = other.facet_;
              bitField0_ = (bitField0_ & ~0x00000004);
              facetBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFacetFieldBuilder() : null;
            } else {
              facetBuilder_.addAllMessages(other.facet_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.item.FacetedNavigation.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.item.FacetedNavigation.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int totalHits_ ;
      /**
       * <code>optional int32 total_hits = 1;</code>
       */
      public int getTotalHits() {
        return totalHits_;
      }
      /**
       * <code>optional int32 total_hits = 1;</code>
       */
      public Builder setTotalHits(int value) {
        
        totalHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total_hits = 1;</code>
       */
      public Builder clearTotalHits() {
        
        totalHits_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.dstore.elastic.item.ElasticItem.Item> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          item_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticItem.Item>(item_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticItem.Item, io.dstore.elastic.item.ElasticItem.Item.Builder, io.dstore.elastic.item.ElasticItem.ItemOrBuilder> itemBuilder_;

      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticItem.Item> getItemList() {
        if (itemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(item_);
        } else {
          return itemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public int getItemCount() {
        if (itemBuilder_ == null) {
          return item_.size();
        } else {
          return itemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Item getItem(int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);
        } else {
          return itemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder setItem(
          int index, io.dstore.elastic.item.ElasticItem.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.set(index, value);
          onChanged();
        } else {
          itemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder setItem(
          int index, io.dstore.elastic.item.ElasticItem.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder addItem(io.dstore.elastic.item.ElasticItem.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(value);
          onChanged();
        } else {
          itemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder addItem(
          int index, io.dstore.elastic.item.ElasticItem.Item value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(index, value);
          onChanged();
        } else {
          itemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder addItem(
          io.dstore.elastic.item.ElasticItem.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder addItem(
          int index, io.dstore.elastic.item.ElasticItem.Item.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends io.dstore.elastic.item.ElasticItem.Item> values) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, item_);
          onChanged();
        } else {
          itemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public Builder removeItem(int index) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.remove(index);
          onChanged();
        } else {
          itemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Item.Builder getItemBuilder(
          int index) {
        return getItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.ItemOrBuilder getItemOrBuilder(
          int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);  } else {
          return itemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public java.util.List<? extends io.dstore.elastic.item.ElasticItem.ItemOrBuilder> 
           getItemOrBuilderList() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(item_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Item.Builder addItemBuilder() {
        return getItemFieldBuilder().addBuilder(
            io.dstore.elastic.item.ElasticItem.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Item.Builder addItemBuilder(
          int index) {
        return getItemFieldBuilder().addBuilder(
            index, io.dstore.elastic.item.ElasticItem.Item.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.item.Item item = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticItem.Item.Builder> 
           getItemBuilderList() {
        return getItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticItem.Item, io.dstore.elastic.item.ElasticItem.Item.Builder, io.dstore.elastic.item.ElasticItem.ItemOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.item.ElasticItem.Item, io.dstore.elastic.item.ElasticItem.Item.Builder, io.dstore.elastic.item.ElasticItem.ItemOrBuilder>(
                  item_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }

      private java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets> facet_ =
        java.util.Collections.emptyList();
      private void ensureFacetIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          facet_ = new java.util.ArrayList<io.dstore.elastic.item.FacetedNavigation.Facets>(facet_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.FacetedNavigation.Facets, io.dstore.elastic.item.FacetedNavigation.Facets.Builder, io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder> facetBuilder_;

      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets> getFacetList() {
        if (facetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(facet_);
        } else {
          return facetBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public int getFacetCount() {
        if (facetBuilder_ == null) {
          return facet_.size();
        } else {
          return facetBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets getFacet(int index) {
        if (facetBuilder_ == null) {
          return facet_.get(index);
        } else {
          return facetBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder setFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.set(index, value);
          onChanged();
        } else {
          facetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder setFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.set(index, builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder addFacet(io.dstore.elastic.item.FacetedNavigation.Facets value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.add(value);
          onChanged();
        } else {
          facetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder addFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.add(index, value);
          onChanged();
        } else {
          facetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder addFacet(
          io.dstore.elastic.item.FacetedNavigation.Facets.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.add(builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder addFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.add(index, builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder addAllFacet(
          java.lang.Iterable<? extends io.dstore.elastic.item.FacetedNavigation.Facets> values) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, facet_);
          onChanged();
        } else {
          facetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder clearFacet() {
        if (facetBuilder_ == null) {
          facet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          facetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public Builder removeFacet(int index) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.remove(index);
          onChanged();
        } else {
          facetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Builder getFacetBuilder(
          int index) {
        return getFacetFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder getFacetOrBuilder(
          int index) {
        if (facetBuilder_ == null) {
          return facet_.get(index);  } else {
          return facetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder> 
           getFacetOrBuilderList() {
        if (facetBuilder_ != null) {
          return facetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(facet_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Builder addFacetBuilder() {
        return getFacetFieldBuilder().addBuilder(
            io.dstore.elastic.item.FacetedNavigation.Facets.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Builder addFacetBuilder(
          int index) {
        return getFacetFieldBuilder().addBuilder(
            index, io.dstore.elastic.item.FacetedNavigation.Facets.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets facet = 3;</code>
       */
      public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Builder> 
           getFacetBuilderList() {
        return getFacetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.FacetedNavigation.Facets, io.dstore.elastic.item.FacetedNavigation.Facets.Builder, io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder> 
          getFacetFieldBuilder() {
        if (facetBuilder_ == null) {
          facetBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.item.FacetedNavigation.Facets, io.dstore.elastic.item.FacetedNavigation.Facets.Builder, io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder>(
                  facet_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          facet_ = null;
        }
        return facetBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.facetednavigation.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.facetednavigation.Response)
    private static final io.dstore.elastic.item.FacetedNavigation.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.item.FacetedNavigation.Response();
    }

    public static io.dstore.elastic.item.FacetedNavigation.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.item.FacetedNavigation.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FacetsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.facetednavigation.Facets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string field_name = 1;</code>
     */
    java.lang.String getFieldName();
    /**
     * <code>optional string field_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getFieldNameBytes();

    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet> 
        getFacetList();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    io.dstore.elastic.item.FacetedNavigation.Facets.Facet getFacet(int index);
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    int getFacetCount();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder> 
        getFacetOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder getFacetOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.elastic.facetednavigation.Facets}
   */
  public  static final class Facets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.facetednavigation.Facets)
      FacetsOrBuilder {
    // Use Facets.newBuilder() to construct.
    private Facets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Facets() {
      fieldName_ = "";
      facet_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Facets(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              fieldName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                facet_ = new java.util.ArrayList<io.dstore.elastic.item.FacetedNavigation.Facets.Facet>();
                mutable_bitField0_ |= 0x00000002;
              }
              facet_.add(input.readMessage(io.dstore.elastic.item.FacetedNavigation.Facets.Facet.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          facet_ = java.util.Collections.unmodifiableList(facet_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.item.FacetedNavigation.Facets.class, io.dstore.elastic.item.FacetedNavigation.Facets.Builder.class);
    }

    public interface FacetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.elastic.facetednavigation.Facets.Facet)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      io.dstore.elastic.ElasticValue.Value getValue();
      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      io.dstore.elastic.ElasticValue.ValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional int64 document_count = 2;</code>
       *
       * <pre>
       * When using a nested aggregation this may show the number of nested documents
       * </pre>
       */
      long getDocumentCount();

      /**
       * <code>optional bool available = 3;</code>
       *
       * <pre>
       * When the value is applied via a term filter, would it return results? (so it can be displayed as selectable)
       * </pre>
       */
      boolean getAvailable();

      /**
       * <code>optional bool active = 4;</code>
       *
       * <pre>
       * Is this value currently applied via a term filer
       * </pre>
       */
      boolean getActive();
    }
    /**
     * Protobuf type {@code dstore.elastic.facetednavigation.Facets.Facet}
     */
    public  static final class Facet extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.elastic.facetednavigation.Facets.Facet)
        FacetOrBuilder {
      // Use Facet.newBuilder() to construct.
      private Facet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Facet() {
        documentCount_ = 0L;
        available_ = false;
        active_ = false;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Facet(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                io.dstore.elastic.ElasticValue.Value.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.elastic.ElasticValue.Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                documentCount_ = input.readInt64();
                break;
              }
              case 24: {

                available_ = input.readBool();
                break;
              }
              case 32: {

                active_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_Facet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.FacetedNavigation.Facets.Facet.class, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private io.dstore.elastic.ElasticValue.Value value_;
      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      public io.dstore.elastic.ElasticValue.Value getValue() {
        return value_ == null ? io.dstore.elastic.ElasticValue.Value.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.elastic.values.Value value = 1;</code>
       */
      public io.dstore.elastic.ElasticValue.ValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int DOCUMENT_COUNT_FIELD_NUMBER = 2;
      private long documentCount_;
      /**
       * <code>optional int64 document_count = 2;</code>
       *
       * <pre>
       * When using a nested aggregation this may show the number of nested documents
       * </pre>
       */
      public long getDocumentCount() {
        return documentCount_;
      }

      public static final int AVAILABLE_FIELD_NUMBER = 3;
      private boolean available_;
      /**
       * <code>optional bool available = 3;</code>
       *
       * <pre>
       * When the value is applied via a term filter, would it return results? (so it can be displayed as selectable)
       * </pre>
       */
      public boolean getAvailable() {
        return available_;
      }

      public static final int ACTIVE_FIELD_NUMBER = 4;
      private boolean active_;
      /**
       * <code>optional bool active = 4;</code>
       *
       * <pre>
       * Is this value currently applied via a term filer
       * </pre>
       */
      public boolean getActive() {
        return active_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (value_ != null) {
          output.writeMessage(1, getValue());
        }
        if (documentCount_ != 0L) {
          output.writeInt64(2, documentCount_);
        }
        if (available_ != false) {
          output.writeBool(3, available_);
        }
        if (active_ != false) {
          output.writeBool(4, active_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getValue());
        }
        if (documentCount_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, documentCount_);
        }
        if (available_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, available_);
        }
        if (active_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, active_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.elastic.item.FacetedNavigation.Facets.Facet prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.elastic.facetednavigation.Facets.Facet}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.elastic.facetednavigation.Facets.Facet)
          io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_Facet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.elastic.item.FacetedNavigation.Facets.Facet.class, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder.class);
        }

        // Construct using io.dstore.elastic.item.FacetedNavigation.Facets.Facet.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          documentCount_ = 0L;

          available_ = false;

          active_ = false;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor;
        }

        public io.dstore.elastic.item.FacetedNavigation.Facets.Facet getDefaultInstanceForType() {
          return io.dstore.elastic.item.FacetedNavigation.Facets.Facet.getDefaultInstance();
        }

        public io.dstore.elastic.item.FacetedNavigation.Facets.Facet build() {
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.elastic.item.FacetedNavigation.Facets.Facet buildPartial() {
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet result = new io.dstore.elastic.item.FacetedNavigation.Facets.Facet(this);
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          result.documentCount_ = documentCount_;
          result.available_ = available_;
          result.active_ = active_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.elastic.item.FacetedNavigation.Facets.Facet) {
            return mergeFrom((io.dstore.elastic.item.FacetedNavigation.Facets.Facet)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.elastic.item.FacetedNavigation.Facets.Facet other) {
          if (other == io.dstore.elastic.item.FacetedNavigation.Facets.Facet.getDefaultInstance()) return this;
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.getDocumentCount() != 0L) {
            setDocumentCount(other.getDocumentCount());
          }
          if (other.getAvailable() != false) {
            setAvailable(other.getAvailable());
          }
          if (other.getActive() != false) {
            setActive(other.getActive());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.elastic.item.FacetedNavigation.Facets.Facet) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private io.dstore.elastic.ElasticValue.Value value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.elastic.ElasticValue.Value, io.dstore.elastic.ElasticValue.Value.Builder, io.dstore.elastic.ElasticValue.ValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public io.dstore.elastic.ElasticValue.Value getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.elastic.ElasticValue.Value.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public Builder setValue(io.dstore.elastic.ElasticValue.Value value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public Builder setValue(
            io.dstore.elastic.ElasticValue.Value.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public Builder mergeValue(io.dstore.elastic.ElasticValue.Value value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.elastic.ElasticValue.Value.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public io.dstore.elastic.ElasticValue.Value.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        public io.dstore.elastic.ElasticValue.ValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.elastic.ElasticValue.Value.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.elastic.values.Value value = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.elastic.ElasticValue.Value, io.dstore.elastic.ElasticValue.Value.Builder, io.dstore.elastic.ElasticValue.ValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.elastic.ElasticValue.Value, io.dstore.elastic.ElasticValue.Value.Builder, io.dstore.elastic.ElasticValue.ValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private long documentCount_ ;
        /**
         * <code>optional int64 document_count = 2;</code>
         *
         * <pre>
         * When using a nested aggregation this may show the number of nested documents
         * </pre>
         */
        public long getDocumentCount() {
          return documentCount_;
        }
        /**
         * <code>optional int64 document_count = 2;</code>
         *
         * <pre>
         * When using a nested aggregation this may show the number of nested documents
         * </pre>
         */
        public Builder setDocumentCount(long value) {
          
          documentCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 document_count = 2;</code>
         *
         * <pre>
         * When using a nested aggregation this may show the number of nested documents
         * </pre>
         */
        public Builder clearDocumentCount() {
          
          documentCount_ = 0L;
          onChanged();
          return this;
        }

        private boolean available_ ;
        /**
         * <code>optional bool available = 3;</code>
         *
         * <pre>
         * When the value is applied via a term filter, would it return results? (so it can be displayed as selectable)
         * </pre>
         */
        public boolean getAvailable() {
          return available_;
        }
        /**
         * <code>optional bool available = 3;</code>
         *
         * <pre>
         * When the value is applied via a term filter, would it return results? (so it can be displayed as selectable)
         * </pre>
         */
        public Builder setAvailable(boolean value) {
          
          available_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool available = 3;</code>
         *
         * <pre>
         * When the value is applied via a term filter, would it return results? (so it can be displayed as selectable)
         * </pre>
         */
        public Builder clearAvailable() {
          
          available_ = false;
          onChanged();
          return this;
        }

        private boolean active_ ;
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Is this value currently applied via a term filer
         * </pre>
         */
        public boolean getActive() {
          return active_;
        }
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Is this value currently applied via a term filer
         * </pre>
         */
        public Builder setActive(boolean value) {
          
          active_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Is this value currently applied via a term filer
         * </pre>
         */
        public Builder clearActive() {
          
          active_ = false;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.elastic.facetednavigation.Facets.Facet)
      }

      // @@protoc_insertion_point(class_scope:dstore.elastic.facetednavigation.Facets.Facet)
      private static final io.dstore.elastic.item.FacetedNavigation.Facets.Facet DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.elastic.item.FacetedNavigation.Facets.Facet();
      }

      public static io.dstore.elastic.item.FacetedNavigation.Facets.Facet getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Facet>
          PARSER = new com.google.protobuf.AbstractParser<Facet>() {
        public Facet parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Facet(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Facet> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Facet> getParserForType() {
        return PARSER;
      }

      public io.dstore.elastic.item.FacetedNavigation.Facets.Facet getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FIELD_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object fieldName_;
    /**
     * <code>optional string field_name = 1;</code>
     */
    public java.lang.String getFieldName() {
      java.lang.Object ref = fieldName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string field_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFieldNameBytes() {
      java.lang.Object ref = fieldName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FACET_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet> facet_;
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet> getFacetList() {
      return facet_;
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    public java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder> 
        getFacetOrBuilderList() {
      return facet_;
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    public int getFacetCount() {
      return facet_.size();
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    public io.dstore.elastic.item.FacetedNavigation.Facets.Facet getFacet(int index) {
      return facet_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
     */
    public io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder getFacetOrBuilder(
        int index) {
      return facet_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFieldNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, fieldName_);
      }
      for (int i = 0; i < facet_.size(); i++) {
        output.writeMessage(2, facet_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFieldNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, fieldName_);
      }
      for (int i = 0; i < facet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, facet_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.FacetedNavigation.Facets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.item.FacetedNavigation.Facets prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.facetednavigation.Facets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.facetednavigation.Facets)
        io.dstore.elastic.item.FacetedNavigation.FacetsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.FacetedNavigation.Facets.class, io.dstore.elastic.item.FacetedNavigation.Facets.Builder.class);
      }

      // Construct using io.dstore.elastic.item.FacetedNavigation.Facets.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFacetFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = "";

        if (facetBuilder_ == null) {
          facet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          facetBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.item.FacetedNavigation.internal_static_dstore_elastic_facetednavigation_Facets_descriptor;
      }

      public io.dstore.elastic.item.FacetedNavigation.Facets getDefaultInstanceForType() {
        return io.dstore.elastic.item.FacetedNavigation.Facets.getDefaultInstance();
      }

      public io.dstore.elastic.item.FacetedNavigation.Facets build() {
        io.dstore.elastic.item.FacetedNavigation.Facets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.item.FacetedNavigation.Facets buildPartial() {
        io.dstore.elastic.item.FacetedNavigation.Facets result = new io.dstore.elastic.item.FacetedNavigation.Facets(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.fieldName_ = fieldName_;
        if (facetBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            facet_ = java.util.Collections.unmodifiableList(facet_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.facet_ = facet_;
        } else {
          result.facet_ = facetBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.item.FacetedNavigation.Facets) {
          return mergeFrom((io.dstore.elastic.item.FacetedNavigation.Facets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.item.FacetedNavigation.Facets other) {
        if (other == io.dstore.elastic.item.FacetedNavigation.Facets.getDefaultInstance()) return this;
        if (!other.getFieldName().isEmpty()) {
          fieldName_ = other.fieldName_;
          onChanged();
        }
        if (facetBuilder_ == null) {
          if (!other.facet_.isEmpty()) {
            if (facet_.isEmpty()) {
              facet_ = other.facet_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFacetIsMutable();
              facet_.addAll(other.facet_);
            }
            onChanged();
          }
        } else {
          if (!other.facet_.isEmpty()) {
            if (facetBuilder_.isEmpty()) {
              facetBuilder_.dispose();
              facetBuilder_ = null;
              facet_ = other.facet_;
              bitField0_ = (bitField0_ & ~0x00000002);
              facetBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFacetFieldBuilder() : null;
            } else {
              facetBuilder_.addAllMessages(other.facet_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.item.FacetedNavigation.Facets parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.item.FacetedNavigation.Facets) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fieldName_ = "";
      /**
       * <code>optional string field_name = 1;</code>
       */
      public java.lang.String getFieldName() {
        java.lang.Object ref = fieldName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fieldName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFieldNameBytes() {
        java.lang.Object ref = fieldName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder clearFieldName() {
        
        fieldName_ = getDefaultInstance().getFieldName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fieldName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet> facet_ =
        java.util.Collections.emptyList();
      private void ensureFacetIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          facet_ = new java.util.ArrayList<io.dstore.elastic.item.FacetedNavigation.Facets.Facet>(facet_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder, io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder> facetBuilder_;

      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet> getFacetList() {
        if (facetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(facet_);
        } else {
          return facetBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public int getFacetCount() {
        if (facetBuilder_ == null) {
          return facet_.size();
        } else {
          return facetBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Facet getFacet(int index) {
        if (facetBuilder_ == null) {
          return facet_.get(index);
        } else {
          return facetBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder setFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Facet value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.set(index, value);
          onChanged();
        } else {
          facetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder setFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.set(index, builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder addFacet(io.dstore.elastic.item.FacetedNavigation.Facets.Facet value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.add(value);
          onChanged();
        } else {
          facetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder addFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Facet value) {
        if (facetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetIsMutable();
          facet_.add(index, value);
          onChanged();
        } else {
          facetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder addFacet(
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.add(builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder addFacet(
          int index, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder builderForValue) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.add(index, builderForValue.build());
          onChanged();
        } else {
          facetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder addAllFacet(
          java.lang.Iterable<? extends io.dstore.elastic.item.FacetedNavigation.Facets.Facet> values) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, facet_);
          onChanged();
        } else {
          facetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder clearFacet() {
        if (facetBuilder_ == null) {
          facet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          facetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public Builder removeFacet(int index) {
        if (facetBuilder_ == null) {
          ensureFacetIsMutable();
          facet_.remove(index);
          onChanged();
        } else {
          facetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder getFacetBuilder(
          int index) {
        return getFacetFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder getFacetOrBuilder(
          int index) {
        if (facetBuilder_ == null) {
          return facet_.get(index);  } else {
          return facetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public java.util.List<? extends io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder> 
           getFacetOrBuilderList() {
        if (facetBuilder_ != null) {
          return facetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(facet_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder addFacetBuilder() {
        return getFacetFieldBuilder().addBuilder(
            io.dstore.elastic.item.FacetedNavigation.Facets.Facet.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder addFacetBuilder(
          int index) {
        return getFacetFieldBuilder().addBuilder(
            index, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.facetednavigation.Facets.Facet facet = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder> 
           getFacetBuilderList() {
        return getFacetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.FacetedNavigation.Facets.Facet, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder, io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder> 
          getFacetFieldBuilder() {
        if (facetBuilder_ == null) {
          facetBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.item.FacetedNavigation.Facets.Facet, io.dstore.elastic.item.FacetedNavigation.Facets.Facet.Builder, io.dstore.elastic.item.FacetedNavigation.Facets.FacetOrBuilder>(
                  facet_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          facet_ = null;
        }
        return facetBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.facetednavigation.Facets)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.facetednavigation.Facets)
    private static final io.dstore.elastic.item.FacetedNavigation.Facets DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.item.FacetedNavigation.Facets();
    }

    public static io.dstore.elastic.item.FacetedNavigation.Facets getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Facets>
        PARSER = new com.google.protobuf.AbstractParser<Facets>() {
      public Facets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Facets(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Facets> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Facets> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.item.FacetedNavigation.Facets getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_facetednavigation_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_facetednavigation_Request_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_facetednavigation_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_facetednavigation_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_facetednavigation_Facets_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_facetednavigation_Facets_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_facetednavigation_Facets_Facet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+dstore/elastic/item/facetednavigation." +
      "proto\022 dstore.elastic.facetednavigation\032" +
      "\032dstore/elastic/query.proto\032\031dstore/elas" +
      "tic/sort.proto\032\033dstore/elastic/values.pr" +
      "oto\032\036dstore/elastic/item/item.proto\"\302\001\n\007" +
      "Request\0220\n\013base_filter\030\001 \003(\0132\033.dstore.el" +
      "astic.query.Query\0220\n\013post_filter\030\002 \003(\0132\033" +
      ".dstore.elastic.query.Query\022\016\n\006facets\030\003 " +
      "\003(\t\022\'\n\004sort\030\004 \003(\0132\031.dstore.elastic.sort." +
      "Sort\022\014\n\004from\030\n \001(\005\022\014\n\004size\030\013 \001(\005\"\200\001\n\010Res",
      "ponse\022\022\n\ntotal_hits\030\001 \001(\005\022\'\n\004item\030\002 \003(\0132" +
      "\031.dstore.elastic.item.Item\0227\n\005facet\030\003 \003(" +
      "\0132(.dstore.elastic.facetednavigation.Fac" +
      "ets\"\314\001\n\006Facets\022\022\n\nfield_name\030\001 \001(\t\022=\n\005fa" +
      "cet\030\002 \003(\0132..dstore.elastic.facetednaviga" +
      "tion.Facets.Facet\032o\n\005Facet\022+\n\005value\030\001 \001(" +
      "\0132\034.dstore.elastic.values.Value\022\026\n\016docum" +
      "ent_count\030\002 \001(\003\022\021\n\tavailable\030\003 \001(\010\022\016\n\006ac" +
      "tive\030\004 \001(\010B+\n\026io.dstore.elastic.itemB\021Fa" +
      "cetedNavigationb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.elastic.ElasticQuery.getDescriptor(),
          io.dstore.elastic.ElasticSort.getDescriptor(),
          io.dstore.elastic.ElasticValue.getDescriptor(),
          io.dstore.elastic.item.ElasticItem.getDescriptor(),
        }, assigner);
    internal_static_dstore_elastic_facetednavigation_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_elastic_facetednavigation_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_facetednavigation_Request_descriptor,
        new java.lang.String[] { "BaseFilter", "PostFilter", "Facets", "Sort", "From", "Size", });
    internal_static_dstore_elastic_facetednavigation_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_elastic_facetednavigation_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_facetednavigation_Response_descriptor,
        new java.lang.String[] { "TotalHits", "Item", "Facet", });
    internal_static_dstore_elastic_facetednavigation_Facets_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dstore_elastic_facetednavigation_Facets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_facetednavigation_Facets_descriptor,
        new java.lang.String[] { "FieldName", "Facet", });
    internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor =
      internal_static_dstore_elastic_facetednavigation_Facets_descriptor.getNestedTypes().get(0);
    internal_static_dstore_elastic_facetednavigation_Facets_Facet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_facetednavigation_Facets_Facet_descriptor,
        new java.lang.String[] { "Value", "DocumentCount", "Available", "Active", });
    io.dstore.elastic.ElasticQuery.getDescriptor();
    io.dstore.elastic.ElasticSort.getDescriptor();
    io.dstore.elastic.ElasticValue.getDescriptor();
    io.dstore.elastic.item.ElasticItem.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
