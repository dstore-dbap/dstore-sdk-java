// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/elastic/item/item.proto

package io.dstore.elastic.item;

public final class ElasticItem {
  private ElasticItem() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.item.Item)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    boolean hasNode();
    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    io.dstore.elastic.item.ElasticNode.Node getNode();
    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    io.dstore.elastic.item.ElasticNode.NodeOrBuilder getNodeOrBuilder();

    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    java.util.List<io.dstore.elastic.item.ElasticNode.Node> 
        getVariantNodeList();
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    io.dstore.elastic.item.ElasticNode.Node getVariantNode(int index);
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    int getVariantNodeCount();
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    java.util.List<? extends io.dstore.elastic.item.ElasticNode.NodeOrBuilder> 
        getVariantNodeOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    io.dstore.elastic.item.ElasticNode.NodeOrBuilder getVariantNodeOrBuilder(
        int index);

    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    boolean hasLastUpdated();
    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    io.dstore.Values.timestampValue getLastUpdated();
    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    io.dstore.Values.timestampValueOrBuilder getLastUpdatedOrBuilder();

    /**
     * <code>optional double score = 10;</code>
     */
    double getScore();

    /**
     * <code>optional string index_name = 11;</code>
     */
    java.lang.String getIndexName();
    /**
     * <code>optional string index_name = 11;</code>
     */
    com.google.protobuf.ByteString
        getIndexNameBytes();

    /**
     * <code>optional string document_id = 12;</code>
     */
    java.lang.String getDocumentId();
    /**
     * <code>optional string document_id = 12;</code>
     */
    com.google.protobuf.ByteString
        getDocumentIdBytes();
  }
  /**
   * Protobuf type {@code dstore.elastic.item.Item}
   */
  public  static final class Item extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.item.Item)
      ItemOrBuilder {
    // Use Item.newBuilder() to construct.
    private Item(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Item() {
      variantNode_ = java.util.Collections.emptyList();
      score_ = 0D;
      indexName_ = "";
      documentId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Item(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.elastic.item.ElasticNode.Node.Builder subBuilder = null;
              if (node_ != null) {
                subBuilder = node_.toBuilder();
              }
              node_ = input.readMessage(io.dstore.elastic.item.ElasticNode.Node.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(node_);
                node_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                variantNode_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticNode.Node>();
                mutable_bitField0_ |= 0x00000002;
              }
              variantNode_.add(input.readMessage(io.dstore.elastic.item.ElasticNode.Node.parser(), extensionRegistry));
              break;
            }
            case 26: {
              io.dstore.Values.timestampValue.Builder subBuilder = null;
              if (lastUpdated_ != null) {
                subBuilder = lastUpdated_.toBuilder();
              }
              lastUpdated_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastUpdated_);
                lastUpdated_ = subBuilder.buildPartial();
              }

              break;
            }
            case 81: {

              score_ = input.readDouble();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              indexName_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              documentId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          variantNode_ = java.util.Collections.unmodifiableList(variantNode_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Item_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Item_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.item.ElasticItem.Item.class, io.dstore.elastic.item.ElasticItem.Item.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_FIELD_NUMBER = 1;
    private io.dstore.elastic.item.ElasticNode.Node node_;
    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    public boolean hasNode() {
      return node_ != null;
    }
    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    public io.dstore.elastic.item.ElasticNode.Node getNode() {
      return node_ == null ? io.dstore.elastic.item.ElasticNode.Node.getDefaultInstance() : node_;
    }
    /**
     * <code>optional .dstore.elastic.node.Node node = 1;</code>
     */
    public io.dstore.elastic.item.ElasticNode.NodeOrBuilder getNodeOrBuilder() {
      return getNode();
    }

    public static final int VARIANT_NODE_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.elastic.item.ElasticNode.Node> variantNode_;
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    public java.util.List<io.dstore.elastic.item.ElasticNode.Node> getVariantNodeList() {
      return variantNode_;
    }
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    public java.util.List<? extends io.dstore.elastic.item.ElasticNode.NodeOrBuilder> 
        getVariantNodeOrBuilderList() {
      return variantNode_;
    }
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    public int getVariantNodeCount() {
      return variantNode_.size();
    }
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    public io.dstore.elastic.item.ElasticNode.Node getVariantNode(int index) {
      return variantNode_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
     */
    public io.dstore.elastic.item.ElasticNode.NodeOrBuilder getVariantNodeOrBuilder(
        int index) {
      return variantNode_.get(index);
    }

    public static final int LAST_UPDATED_FIELD_NUMBER = 3;
    private io.dstore.Values.timestampValue lastUpdated_;
    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    public boolean hasLastUpdated() {
      return lastUpdated_ != null;
    }
    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    public io.dstore.Values.timestampValue getLastUpdated() {
      return lastUpdated_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : lastUpdated_;
    }
    /**
     * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
     */
    public io.dstore.Values.timestampValueOrBuilder getLastUpdatedOrBuilder() {
      return getLastUpdated();
    }

    public static final int SCORE_FIELD_NUMBER = 10;
    private double score_;
    /**
     * <code>optional double score = 10;</code>
     */
    public double getScore() {
      return score_;
    }

    public static final int INDEX_NAME_FIELD_NUMBER = 11;
    private volatile java.lang.Object indexName_;
    /**
     * <code>optional string index_name = 11;</code>
     */
    public java.lang.String getIndexName() {
      java.lang.Object ref = indexName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        indexName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string index_name = 11;</code>
     */
    public com.google.protobuf.ByteString
        getIndexNameBytes() {
      java.lang.Object ref = indexName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        indexName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOCUMENT_ID_FIELD_NUMBER = 12;
    private volatile java.lang.Object documentId_;
    /**
     * <code>optional string document_id = 12;</code>
     */
    public java.lang.String getDocumentId() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        documentId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string document_id = 12;</code>
     */
    public com.google.protobuf.ByteString
        getDocumentIdBytes() {
      java.lang.Object ref = documentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        documentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (node_ != null) {
        output.writeMessage(1, getNode());
      }
      for (int i = 0; i < variantNode_.size(); i++) {
        output.writeMessage(2, variantNode_.get(i));
      }
      if (lastUpdated_ != null) {
        output.writeMessage(3, getLastUpdated());
      }
      if (score_ != 0D) {
        output.writeDouble(10, score_);
      }
      if (!getIndexNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 11, indexName_);
      }
      if (!getDocumentIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, documentId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (node_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNode());
      }
      for (int i = 0; i < variantNode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, variantNode_.get(i));
      }
      if (lastUpdated_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLastUpdated());
      }
      if (score_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, score_);
      }
      if (!getIndexNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(11, indexName_);
      }
      if (!getDocumentIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(12, documentId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Item parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.item.ElasticItem.Item prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.item.Item}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.item.Item)
        io.dstore.elastic.item.ElasticItem.ItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Item_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Item_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.ElasticItem.Item.class, io.dstore.elastic.item.ElasticItem.Item.Builder.class);
      }

      // Construct using io.dstore.elastic.item.ElasticItem.Item.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariantNodeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = null;
        } else {
          node_ = null;
          nodeBuilder_ = null;
        }
        if (variantNodeBuilder_ == null) {
          variantNode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          variantNodeBuilder_.clear();
        }
        if (lastUpdatedBuilder_ == null) {
          lastUpdated_ = null;
        } else {
          lastUpdated_ = null;
          lastUpdatedBuilder_ = null;
        }
        score_ = 0D;

        indexName_ = "";

        documentId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Item_descriptor;
      }

      public io.dstore.elastic.item.ElasticItem.Item getDefaultInstanceForType() {
        return io.dstore.elastic.item.ElasticItem.Item.getDefaultInstance();
      }

      public io.dstore.elastic.item.ElasticItem.Item build() {
        io.dstore.elastic.item.ElasticItem.Item result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.item.ElasticItem.Item buildPartial() {
        io.dstore.elastic.item.ElasticItem.Item result = new io.dstore.elastic.item.ElasticItem.Item(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodeBuilder_ == null) {
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (variantNodeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            variantNode_ = java.util.Collections.unmodifiableList(variantNode_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.variantNode_ = variantNode_;
        } else {
          result.variantNode_ = variantNodeBuilder_.build();
        }
        if (lastUpdatedBuilder_ == null) {
          result.lastUpdated_ = lastUpdated_;
        } else {
          result.lastUpdated_ = lastUpdatedBuilder_.build();
        }
        result.score_ = score_;
        result.indexName_ = indexName_;
        result.documentId_ = documentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.item.ElasticItem.Item) {
          return mergeFrom((io.dstore.elastic.item.ElasticItem.Item)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.item.ElasticItem.Item other) {
        if (other == io.dstore.elastic.item.ElasticItem.Item.getDefaultInstance()) return this;
        if (other.hasNode()) {
          mergeNode(other.getNode());
        }
        if (variantNodeBuilder_ == null) {
          if (!other.variantNode_.isEmpty()) {
            if (variantNode_.isEmpty()) {
              variantNode_ = other.variantNode_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureVariantNodeIsMutable();
              variantNode_.addAll(other.variantNode_);
            }
            onChanged();
          }
        } else {
          if (!other.variantNode_.isEmpty()) {
            if (variantNodeBuilder_.isEmpty()) {
              variantNodeBuilder_.dispose();
              variantNodeBuilder_ = null;
              variantNode_ = other.variantNode_;
              bitField0_ = (bitField0_ & ~0x00000002);
              variantNodeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariantNodeFieldBuilder() : null;
            } else {
              variantNodeBuilder_.addAllMessages(other.variantNode_);
            }
          }
        }
        if (other.hasLastUpdated()) {
          mergeLastUpdated(other.getLastUpdated());
        }
        if (other.getScore() != 0D) {
          setScore(other.getScore());
        }
        if (!other.getIndexName().isEmpty()) {
          indexName_ = other.indexName_;
          onChanged();
        }
        if (!other.getDocumentId().isEmpty()) {
          documentId_ = other.documentId_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.item.ElasticItem.Item parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.item.ElasticItem.Item) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.elastic.item.ElasticNode.Node node_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder> nodeBuilder_;
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public boolean hasNode() {
        return nodeBuilder_ != null || node_ != null;
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node getNode() {
        if (nodeBuilder_ == null) {
          return node_ == null ? io.dstore.elastic.item.ElasticNode.Node.getDefaultInstance() : node_;
        } else {
          return nodeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public Builder setNode(io.dstore.elastic.item.ElasticNode.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          nodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public Builder setNode(
          io.dstore.elastic.item.ElasticNode.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          nodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public Builder mergeNode(io.dstore.elastic.item.ElasticNode.Node value) {
        if (nodeBuilder_ == null) {
          if (node_ != null) {
            node_ =
              io.dstore.elastic.item.ElasticNode.Node.newBuilder(node_).mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          nodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = null;
          onChanged();
        } else {
          node_ = null;
          nodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node.Builder getNodeBuilder() {
        
        onChanged();
        return getNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      public io.dstore.elastic.item.ElasticNode.NodeOrBuilder getNodeOrBuilder() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilder();
        } else {
          return node_ == null ?
              io.dstore.elastic.item.ElasticNode.Node.getDefaultInstance() : node_;
        }
      }
      /**
       * <code>optional .dstore.elastic.node.Node node = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder>(
                  getNode(),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.util.List<io.dstore.elastic.item.ElasticNode.Node> variantNode_ =
        java.util.Collections.emptyList();
      private void ensureVariantNodeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          variantNode_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticNode.Node>(variantNode_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder> variantNodeBuilder_;

      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticNode.Node> getVariantNodeList() {
        if (variantNodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variantNode_);
        } else {
          return variantNodeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public int getVariantNodeCount() {
        if (variantNodeBuilder_ == null) {
          return variantNode_.size();
        } else {
          return variantNodeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node getVariantNode(int index) {
        if (variantNodeBuilder_ == null) {
          return variantNode_.get(index);
        } else {
          return variantNodeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder setVariantNode(
          int index, io.dstore.elastic.item.ElasticNode.Node value) {
        if (variantNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantNodeIsMutable();
          variantNode_.set(index, value);
          onChanged();
        } else {
          variantNodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder setVariantNode(
          int index, io.dstore.elastic.item.ElasticNode.Node.Builder builderForValue) {
        if (variantNodeBuilder_ == null) {
          ensureVariantNodeIsMutable();
          variantNode_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantNodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder addVariantNode(io.dstore.elastic.item.ElasticNode.Node value) {
        if (variantNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantNodeIsMutable();
          variantNode_.add(value);
          onChanged();
        } else {
          variantNodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder addVariantNode(
          int index, io.dstore.elastic.item.ElasticNode.Node value) {
        if (variantNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantNodeIsMutable();
          variantNode_.add(index, value);
          onChanged();
        } else {
          variantNodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder addVariantNode(
          io.dstore.elastic.item.ElasticNode.Node.Builder builderForValue) {
        if (variantNodeBuilder_ == null) {
          ensureVariantNodeIsMutable();
          variantNode_.add(builderForValue.build());
          onChanged();
        } else {
          variantNodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder addVariantNode(
          int index, io.dstore.elastic.item.ElasticNode.Node.Builder builderForValue) {
        if (variantNodeBuilder_ == null) {
          ensureVariantNodeIsMutable();
          variantNode_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantNodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder addAllVariantNode(
          java.lang.Iterable<? extends io.dstore.elastic.item.ElasticNode.Node> values) {
        if (variantNodeBuilder_ == null) {
          ensureVariantNodeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variantNode_);
          onChanged();
        } else {
          variantNodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder clearVariantNode() {
        if (variantNodeBuilder_ == null) {
          variantNode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          variantNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public Builder removeVariantNode(int index) {
        if (variantNodeBuilder_ == null) {
          ensureVariantNodeIsMutable();
          variantNode_.remove(index);
          onChanged();
        } else {
          variantNodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node.Builder getVariantNodeBuilder(
          int index) {
        return getVariantNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public io.dstore.elastic.item.ElasticNode.NodeOrBuilder getVariantNodeOrBuilder(
          int index) {
        if (variantNodeBuilder_ == null) {
          return variantNode_.get(index);  } else {
          return variantNodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public java.util.List<? extends io.dstore.elastic.item.ElasticNode.NodeOrBuilder> 
           getVariantNodeOrBuilderList() {
        if (variantNodeBuilder_ != null) {
          return variantNodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variantNode_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node.Builder addVariantNodeBuilder() {
        return getVariantNodeFieldBuilder().addBuilder(
            io.dstore.elastic.item.ElasticNode.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public io.dstore.elastic.item.ElasticNode.Node.Builder addVariantNodeBuilder(
          int index) {
        return getVariantNodeFieldBuilder().addBuilder(
            index, io.dstore.elastic.item.ElasticNode.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.node.Node variant_node = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticNode.Node.Builder> 
           getVariantNodeBuilderList() {
        return getVariantNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder> 
          getVariantNodeFieldBuilder() {
        if (variantNodeBuilder_ == null) {
          variantNodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.item.ElasticNode.Node, io.dstore.elastic.item.ElasticNode.Node.Builder, io.dstore.elastic.item.ElasticNode.NodeOrBuilder>(
                  variantNode_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          variantNode_ = null;
        }
        return variantNodeBuilder_;
      }

      private io.dstore.Values.timestampValue lastUpdated_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> lastUpdatedBuilder_;
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public boolean hasLastUpdated() {
        return lastUpdatedBuilder_ != null || lastUpdated_ != null;
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public io.dstore.Values.timestampValue getLastUpdated() {
        if (lastUpdatedBuilder_ == null) {
          return lastUpdated_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : lastUpdated_;
        } else {
          return lastUpdatedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public Builder setLastUpdated(io.dstore.Values.timestampValue value) {
        if (lastUpdatedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastUpdated_ = value;
          onChanged();
        } else {
          lastUpdatedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public Builder setLastUpdated(
          io.dstore.Values.timestampValue.Builder builderForValue) {
        if (lastUpdatedBuilder_ == null) {
          lastUpdated_ = builderForValue.build();
          onChanged();
        } else {
          lastUpdatedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public Builder mergeLastUpdated(io.dstore.Values.timestampValue value) {
        if (lastUpdatedBuilder_ == null) {
          if (lastUpdated_ != null) {
            lastUpdated_ =
              io.dstore.Values.timestampValue.newBuilder(lastUpdated_).mergeFrom(value).buildPartial();
          } else {
            lastUpdated_ = value;
          }
          onChanged();
        } else {
          lastUpdatedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public Builder clearLastUpdated() {
        if (lastUpdatedBuilder_ == null) {
          lastUpdated_ = null;
          onChanged();
        } else {
          lastUpdated_ = null;
          lastUpdatedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public io.dstore.Values.timestampValue.Builder getLastUpdatedBuilder() {
        
        onChanged();
        return getLastUpdatedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getLastUpdatedOrBuilder() {
        if (lastUpdatedBuilder_ != null) {
          return lastUpdatedBuilder_.getMessageOrBuilder();
        } else {
          return lastUpdated_ == null ?
              io.dstore.Values.timestampValue.getDefaultInstance() : lastUpdated_;
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue last_updated = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
          getLastUpdatedFieldBuilder() {
        if (lastUpdatedBuilder_ == null) {
          lastUpdatedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                  getLastUpdated(),
                  getParentForChildren(),
                  isClean());
          lastUpdated_ = null;
        }
        return lastUpdatedBuilder_;
      }

      private double score_ ;
      /**
       * <code>optional double score = 10;</code>
       */
      public double getScore() {
        return score_;
      }
      /**
       * <code>optional double score = 10;</code>
       */
      public Builder setScore(double value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double score = 10;</code>
       */
      public Builder clearScore() {
        
        score_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object indexName_ = "";
      /**
       * <code>optional string index_name = 11;</code>
       */
      public java.lang.String getIndexName() {
        java.lang.Object ref = indexName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          indexName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string index_name = 11;</code>
       */
      public com.google.protobuf.ByteString
          getIndexNameBytes() {
        java.lang.Object ref = indexName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          indexName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string index_name = 11;</code>
       */
      public Builder setIndexName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        indexName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string index_name = 11;</code>
       */
      public Builder clearIndexName() {
        
        indexName_ = getDefaultInstance().getIndexName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string index_name = 11;</code>
       */
      public Builder setIndexNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        indexName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object documentId_ = "";
      /**
       * <code>optional string document_id = 12;</code>
       */
      public java.lang.String getDocumentId() {
        java.lang.Object ref = documentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          documentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string document_id = 12;</code>
       */
      public com.google.protobuf.ByteString
          getDocumentIdBytes() {
        java.lang.Object ref = documentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          documentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string document_id = 12;</code>
       */
      public Builder setDocumentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        documentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string document_id = 12;</code>
       */
      public Builder clearDocumentId() {
        
        documentId_ = getDefaultInstance().getDocumentId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string document_id = 12;</code>
       */
      public Builder setDocumentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        documentId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.item.Item)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.item.Item)
    private static final io.dstore.elastic.item.ElasticItem.Item DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.item.ElasticItem.Item();
    }

    public static io.dstore.elastic.item.ElasticItem.Item getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Item>
        PARSER = new com.google.protobuf.AbstractParser<Item>() {
      public Item parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Item(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Item> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Item> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.item.ElasticItem.Item getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FacetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.item.Facet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string field_name = 1;</code>
     */
    java.lang.String getFieldName();
    /**
     * <code>optional string field_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getFieldNameBytes();

    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue> 
        getFacetValueList();
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    io.dstore.elastic.item.ElasticItem.Facet.FacetValue getFacetValue(int index);
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    int getFacetValueCount();
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    java.util.List<? extends io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder> 
        getFacetValueOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder getFacetValueOrBuilder(
        int index);

    /**
     * <code>optional double range_from = 10;</code>
     *
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     */
    double getRangeFrom();

    /**
     * <code>optional double range_to = 11;</code>
     *
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     */
    double getRangeTo();
  }
  /**
   * Protobuf type {@code dstore.elastic.item.Facet}
   */
  public  static final class Facet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.item.Facet)
      FacetOrBuilder {
    // Use Facet.newBuilder() to construct.
    private Facet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Facet() {
      fieldName_ = "";
      facetValue_ = java.util.Collections.emptyList();
      rangeFrom_ = 0D;
      rangeTo_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Facet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              fieldName_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                facetValue_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticItem.Facet.FacetValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              facetValue_.add(input.readMessage(io.dstore.elastic.item.ElasticItem.Facet.FacetValue.parser(), extensionRegistry));
              break;
            }
            case 81: {

              rangeFrom_ = input.readDouble();
              break;
            }
            case 89: {

              rangeTo_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          facetValue_ = java.util.Collections.unmodifiableList(facetValue_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.item.ElasticItem.Facet.class, io.dstore.elastic.item.ElasticItem.Facet.Builder.class);
    }

    public interface FacetValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.elastic.item.Facet.FacetValue)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      io.dstore.Values.Value getValue();
      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      io.dstore.Values.ValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional int32 total_item_count = 2;</code>
       */
      int getTotalItemCount();

      /**
       * <code>optional int32 matching_item_count = 3;</code>
       */
      int getMatchingItemCount();

      /**
       * <code>optional bool active = 4;</code>
       *
       * <pre>
       * Only filled when using a term-facet
       * </pre>
       */
      boolean getActive();

      /**
       * <code>optional double min_value = 5;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      double getMinValue();

      /**
       * <code>optional double max_value = 6;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      double getMaxValue();
    }
    /**
     * Protobuf type {@code dstore.elastic.item.Facet.FacetValue}
     */
    public  static final class FacetValue extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.elastic.item.Facet.FacetValue)
        FacetValueOrBuilder {
      // Use FacetValue.newBuilder() to construct.
      private FacetValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private FacetValue() {
        totalItemCount_ = 0;
        matchingItemCount_ = 0;
        active_ = false;
        minValue_ = 0D;
        maxValue_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private FacetValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                io.dstore.Values.Value.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.Values.Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                totalItemCount_ = input.readInt32();
                break;
              }
              case 24: {

                matchingItemCount_ = input.readInt32();
                break;
              }
              case 32: {

                active_ = input.readBool();
                break;
              }
              case 41: {

                minValue_ = input.readDouble();
                break;
              }
              case 49: {

                maxValue_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_FacetValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_FacetValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.ElasticItem.Facet.FacetValue.class, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private io.dstore.Values.Value value_;
      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      public io.dstore.Values.Value getValue() {
        return value_ == null ? io.dstore.Values.Value.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.values.Value value = 1;</code>
       */
      public io.dstore.Values.ValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int TOTAL_ITEM_COUNT_FIELD_NUMBER = 2;
      private int totalItemCount_;
      /**
       * <code>optional int32 total_item_count = 2;</code>
       */
      public int getTotalItemCount() {
        return totalItemCount_;
      }

      public static final int MATCHING_ITEM_COUNT_FIELD_NUMBER = 3;
      private int matchingItemCount_;
      /**
       * <code>optional int32 matching_item_count = 3;</code>
       */
      public int getMatchingItemCount() {
        return matchingItemCount_;
      }

      public static final int ACTIVE_FIELD_NUMBER = 4;
      private boolean active_;
      /**
       * <code>optional bool active = 4;</code>
       *
       * <pre>
       * Only filled when using a term-facet
       * </pre>
       */
      public boolean getActive() {
        return active_;
      }

      public static final int MIN_VALUE_FIELD_NUMBER = 5;
      private double minValue_;
      /**
       * <code>optional double min_value = 5;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public double getMinValue() {
        return minValue_;
      }

      public static final int MAX_VALUE_FIELD_NUMBER = 6;
      private double maxValue_;
      /**
       * <code>optional double max_value = 6;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public double getMaxValue() {
        return maxValue_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (value_ != null) {
          output.writeMessage(1, getValue());
        }
        if (totalItemCount_ != 0) {
          output.writeInt32(2, totalItemCount_);
        }
        if (matchingItemCount_ != 0) {
          output.writeInt32(3, matchingItemCount_);
        }
        if (active_ != false) {
          output.writeBool(4, active_);
        }
        if (minValue_ != 0D) {
          output.writeDouble(5, minValue_);
        }
        if (maxValue_ != 0D) {
          output.writeDouble(6, maxValue_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getValue());
        }
        if (totalItemCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, totalItemCount_);
        }
        if (matchingItemCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, matchingItemCount_);
        }
        if (active_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, active_);
        }
        if (minValue_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, minValue_);
        }
        if (maxValue_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, maxValue_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.elastic.item.ElasticItem.Facet.FacetValue prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.elastic.item.Facet.FacetValue}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.elastic.item.Facet.FacetValue)
          io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_FacetValue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_FacetValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.elastic.item.ElasticItem.Facet.FacetValue.class, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder.class);
        }

        // Construct using io.dstore.elastic.item.ElasticItem.Facet.FacetValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          totalItemCount_ = 0;

          matchingItemCount_ = 0;

          active_ = false;

          minValue_ = 0D;

          maxValue_ = 0D;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_FacetValue_descriptor;
        }

        public io.dstore.elastic.item.ElasticItem.Facet.FacetValue getDefaultInstanceForType() {
          return io.dstore.elastic.item.ElasticItem.Facet.FacetValue.getDefaultInstance();
        }

        public io.dstore.elastic.item.ElasticItem.Facet.FacetValue build() {
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.elastic.item.ElasticItem.Facet.FacetValue buildPartial() {
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue result = new io.dstore.elastic.item.ElasticItem.Facet.FacetValue(this);
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          result.totalItemCount_ = totalItemCount_;
          result.matchingItemCount_ = matchingItemCount_;
          result.active_ = active_;
          result.minValue_ = minValue_;
          result.maxValue_ = maxValue_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.elastic.item.ElasticItem.Facet.FacetValue) {
            return mergeFrom((io.dstore.elastic.item.ElasticItem.Facet.FacetValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.elastic.item.ElasticItem.Facet.FacetValue other) {
          if (other == io.dstore.elastic.item.ElasticItem.Facet.FacetValue.getDefaultInstance()) return this;
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.getTotalItemCount() != 0) {
            setTotalItemCount(other.getTotalItemCount());
          }
          if (other.getMatchingItemCount() != 0) {
            setMatchingItemCount(other.getMatchingItemCount());
          }
          if (other.getActive() != false) {
            setActive(other.getActive());
          }
          if (other.getMinValue() != 0D) {
            setMinValue(other.getMinValue());
          }
          if (other.getMaxValue() != 0D) {
            setMaxValue(other.getMaxValue());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.elastic.item.ElasticItem.Facet.FacetValue) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private io.dstore.Values.Value value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.Value, io.dstore.Values.Value.Builder, io.dstore.Values.ValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public io.dstore.Values.Value getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.Values.Value.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public Builder setValue(io.dstore.Values.Value value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public Builder setValue(
            io.dstore.Values.Value.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public Builder mergeValue(io.dstore.Values.Value value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.Values.Value.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public io.dstore.Values.Value.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        public io.dstore.Values.ValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.Values.Value.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.values.Value value = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.Value, io.dstore.Values.Value.Builder, io.dstore.Values.ValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.Value, io.dstore.Values.Value.Builder, io.dstore.Values.ValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private int totalItemCount_ ;
        /**
         * <code>optional int32 total_item_count = 2;</code>
         */
        public int getTotalItemCount() {
          return totalItemCount_;
        }
        /**
         * <code>optional int32 total_item_count = 2;</code>
         */
        public Builder setTotalItemCount(int value) {
          
          totalItemCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 total_item_count = 2;</code>
         */
        public Builder clearTotalItemCount() {
          
          totalItemCount_ = 0;
          onChanged();
          return this;
        }

        private int matchingItemCount_ ;
        /**
         * <code>optional int32 matching_item_count = 3;</code>
         */
        public int getMatchingItemCount() {
          return matchingItemCount_;
        }
        /**
         * <code>optional int32 matching_item_count = 3;</code>
         */
        public Builder setMatchingItemCount(int value) {
          
          matchingItemCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 matching_item_count = 3;</code>
         */
        public Builder clearMatchingItemCount() {
          
          matchingItemCount_ = 0;
          onChanged();
          return this;
        }

        private boolean active_ ;
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Only filled when using a term-facet
         * </pre>
         */
        public boolean getActive() {
          return active_;
        }
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Only filled when using a term-facet
         * </pre>
         */
        public Builder setActive(boolean value) {
          
          active_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool active = 4;</code>
         *
         * <pre>
         * Only filled when using a term-facet
         * </pre>
         */
        public Builder clearActive() {
          
          active_ = false;
          onChanged();
          return this;
        }

        private double minValue_ ;
        /**
         * <code>optional double min_value = 5;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public double getMinValue() {
          return minValue_;
        }
        /**
         * <code>optional double min_value = 5;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public Builder setMinValue(double value) {
          
          minValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double min_value = 5;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public Builder clearMinValue() {
          
          minValue_ = 0D;
          onChanged();
          return this;
        }

        private double maxValue_ ;
        /**
         * <code>optional double max_value = 6;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public double getMaxValue() {
          return maxValue_;
        }
        /**
         * <code>optional double max_value = 6;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public Builder setMaxValue(double value) {
          
          maxValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double max_value = 6;</code>
         *
         * <pre>
         * Only filled when using a range-facet
         * </pre>
         */
        public Builder clearMaxValue() {
          
          maxValue_ = 0D;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.elastic.item.Facet.FacetValue)
      }

      // @@protoc_insertion_point(class_scope:dstore.elastic.item.Facet.FacetValue)
      private static final io.dstore.elastic.item.ElasticItem.Facet.FacetValue DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.elastic.item.ElasticItem.Facet.FacetValue();
      }

      public static io.dstore.elastic.item.ElasticItem.Facet.FacetValue getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FacetValue>
          PARSER = new com.google.protobuf.AbstractParser<FacetValue>() {
        public FacetValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new FacetValue(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<FacetValue> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FacetValue> getParserForType() {
        return PARSER;
      }

      public io.dstore.elastic.item.ElasticItem.Facet.FacetValue getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FIELD_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object fieldName_;
    /**
     * <code>optional string field_name = 1;</code>
     */
    public java.lang.String getFieldName() {
      java.lang.Object ref = fieldName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string field_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFieldNameBytes() {
      java.lang.Object ref = fieldName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FACET_VALUE_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue> facetValue_;
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    public java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue> getFacetValueList() {
      return facetValue_;
    }
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    public java.util.List<? extends io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder> 
        getFacetValueOrBuilderList() {
      return facetValue_;
    }
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    public int getFacetValueCount() {
      return facetValue_.size();
    }
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    public io.dstore.elastic.item.ElasticItem.Facet.FacetValue getFacetValue(int index) {
      return facetValue_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
     */
    public io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder getFacetValueOrBuilder(
        int index) {
      return facetValue_.get(index);
    }

    public static final int RANGE_FROM_FIELD_NUMBER = 10;
    private double rangeFrom_;
    /**
     * <code>optional double range_from = 10;</code>
     *
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     */
    public double getRangeFrom() {
      return rangeFrom_;
    }

    public static final int RANGE_TO_FIELD_NUMBER = 11;
    private double rangeTo_;
    /**
     * <code>optional double range_to = 11;</code>
     *
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     */
    public double getRangeTo() {
      return rangeTo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFieldNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, fieldName_);
      }
      for (int i = 0; i < facetValue_.size(); i++) {
        output.writeMessage(2, facetValue_.get(i));
      }
      if (rangeFrom_ != 0D) {
        output.writeDouble(10, rangeFrom_);
      }
      if (rangeTo_ != 0D) {
        output.writeDouble(11, rangeTo_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFieldNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, fieldName_);
      }
      for (int i = 0; i < facetValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, facetValue_.get(i));
      }
      if (rangeFrom_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, rangeFrom_);
      }
      if (rangeTo_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, rangeTo_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.item.ElasticItem.Facet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.item.ElasticItem.Facet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.item.Facet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.item.Facet)
        io.dstore.elastic.item.ElasticItem.FacetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.item.ElasticItem.Facet.class, io.dstore.elastic.item.ElasticItem.Facet.Builder.class);
      }

      // Construct using io.dstore.elastic.item.ElasticItem.Facet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFacetValueFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = "";

        if (facetValueBuilder_ == null) {
          facetValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          facetValueBuilder_.clear();
        }
        rangeFrom_ = 0D;

        rangeTo_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.item.ElasticItem.internal_static_dstore_elastic_item_Facet_descriptor;
      }

      public io.dstore.elastic.item.ElasticItem.Facet getDefaultInstanceForType() {
        return io.dstore.elastic.item.ElasticItem.Facet.getDefaultInstance();
      }

      public io.dstore.elastic.item.ElasticItem.Facet build() {
        io.dstore.elastic.item.ElasticItem.Facet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.item.ElasticItem.Facet buildPartial() {
        io.dstore.elastic.item.ElasticItem.Facet result = new io.dstore.elastic.item.ElasticItem.Facet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.fieldName_ = fieldName_;
        if (facetValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            facetValue_ = java.util.Collections.unmodifiableList(facetValue_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.facetValue_ = facetValue_;
        } else {
          result.facetValue_ = facetValueBuilder_.build();
        }
        result.rangeFrom_ = rangeFrom_;
        result.rangeTo_ = rangeTo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.item.ElasticItem.Facet) {
          return mergeFrom((io.dstore.elastic.item.ElasticItem.Facet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.item.ElasticItem.Facet other) {
        if (other == io.dstore.elastic.item.ElasticItem.Facet.getDefaultInstance()) return this;
        if (!other.getFieldName().isEmpty()) {
          fieldName_ = other.fieldName_;
          onChanged();
        }
        if (facetValueBuilder_ == null) {
          if (!other.facetValue_.isEmpty()) {
            if (facetValue_.isEmpty()) {
              facetValue_ = other.facetValue_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFacetValueIsMutable();
              facetValue_.addAll(other.facetValue_);
            }
            onChanged();
          }
        } else {
          if (!other.facetValue_.isEmpty()) {
            if (facetValueBuilder_.isEmpty()) {
              facetValueBuilder_.dispose();
              facetValueBuilder_ = null;
              facetValue_ = other.facetValue_;
              bitField0_ = (bitField0_ & ~0x00000002);
              facetValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFacetValueFieldBuilder() : null;
            } else {
              facetValueBuilder_.addAllMessages(other.facetValue_);
            }
          }
        }
        if (other.getRangeFrom() != 0D) {
          setRangeFrom(other.getRangeFrom());
        }
        if (other.getRangeTo() != 0D) {
          setRangeTo(other.getRangeTo());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.item.ElasticItem.Facet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.item.ElasticItem.Facet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fieldName_ = "";
      /**
       * <code>optional string field_name = 1;</code>
       */
      public java.lang.String getFieldName() {
        java.lang.Object ref = fieldName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fieldName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFieldNameBytes() {
        java.lang.Object ref = fieldName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder clearFieldName() {
        
        fieldName_ = getDefaultInstance().getFieldName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fieldName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue> facetValue_ =
        java.util.Collections.emptyList();
      private void ensureFacetValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          facetValue_ = new java.util.ArrayList<io.dstore.elastic.item.ElasticItem.Facet.FacetValue>(facetValue_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder, io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder> facetValueBuilder_;

      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue> getFacetValueList() {
        if (facetValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(facetValue_);
        } else {
          return facetValueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public int getFacetValueCount() {
        if (facetValueBuilder_ == null) {
          return facetValue_.size();
        } else {
          return facetValueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Facet.FacetValue getFacetValue(int index) {
        if (facetValueBuilder_ == null) {
          return facetValue_.get(index);
        } else {
          return facetValueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder setFacetValue(
          int index, io.dstore.elastic.item.ElasticItem.Facet.FacetValue value) {
        if (facetValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetValueIsMutable();
          facetValue_.set(index, value);
          onChanged();
        } else {
          facetValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder setFacetValue(
          int index, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder builderForValue) {
        if (facetValueBuilder_ == null) {
          ensureFacetValueIsMutable();
          facetValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          facetValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder addFacetValue(io.dstore.elastic.item.ElasticItem.Facet.FacetValue value) {
        if (facetValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetValueIsMutable();
          facetValue_.add(value);
          onChanged();
        } else {
          facetValueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder addFacetValue(
          int index, io.dstore.elastic.item.ElasticItem.Facet.FacetValue value) {
        if (facetValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFacetValueIsMutable();
          facetValue_.add(index, value);
          onChanged();
        } else {
          facetValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder addFacetValue(
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder builderForValue) {
        if (facetValueBuilder_ == null) {
          ensureFacetValueIsMutable();
          facetValue_.add(builderForValue.build());
          onChanged();
        } else {
          facetValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder addFacetValue(
          int index, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder builderForValue) {
        if (facetValueBuilder_ == null) {
          ensureFacetValueIsMutable();
          facetValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          facetValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder addAllFacetValue(
          java.lang.Iterable<? extends io.dstore.elastic.item.ElasticItem.Facet.FacetValue> values) {
        if (facetValueBuilder_ == null) {
          ensureFacetValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, facetValue_);
          onChanged();
        } else {
          facetValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder clearFacetValue() {
        if (facetValueBuilder_ == null) {
          facetValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          facetValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public Builder removeFacetValue(int index) {
        if (facetValueBuilder_ == null) {
          ensureFacetValueIsMutable();
          facetValue_.remove(index);
          onChanged();
        } else {
          facetValueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder getFacetValueBuilder(
          int index) {
        return getFacetValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder getFacetValueOrBuilder(
          int index) {
        if (facetValueBuilder_ == null) {
          return facetValue_.get(index);  } else {
          return facetValueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public java.util.List<? extends io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder> 
           getFacetValueOrBuilderList() {
        if (facetValueBuilder_ != null) {
          return facetValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(facetValue_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder addFacetValueBuilder() {
        return getFacetValueFieldBuilder().addBuilder(
            io.dstore.elastic.item.ElasticItem.Facet.FacetValue.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder addFacetValueBuilder(
          int index) {
        return getFacetValueFieldBuilder().addBuilder(
            index, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.item.Facet.FacetValue facet_value = 2;</code>
       */
      public java.util.List<io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder> 
           getFacetValueBuilderList() {
        return getFacetValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.item.ElasticItem.Facet.FacetValue, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder, io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder> 
          getFacetValueFieldBuilder() {
        if (facetValueBuilder_ == null) {
          facetValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.item.ElasticItem.Facet.FacetValue, io.dstore.elastic.item.ElasticItem.Facet.FacetValue.Builder, io.dstore.elastic.item.ElasticItem.Facet.FacetValueOrBuilder>(
                  facetValue_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          facetValue_ = null;
        }
        return facetValueBuilder_;
      }

      private double rangeFrom_ ;
      /**
       * <code>optional double range_from = 10;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public double getRangeFrom() {
        return rangeFrom_;
      }
      /**
       * <code>optional double range_from = 10;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public Builder setRangeFrom(double value) {
        
        rangeFrom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double range_from = 10;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public Builder clearRangeFrom() {
        
        rangeFrom_ = 0D;
        onChanged();
        return this;
      }

      private double rangeTo_ ;
      /**
       * <code>optional double range_to = 11;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public double getRangeTo() {
        return rangeTo_;
      }
      /**
       * <code>optional double range_to = 11;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public Builder setRangeTo(double value) {
        
        rangeTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double range_to = 11;</code>
       *
       * <pre>
       * Only filled when using a range-facet
       * </pre>
       */
      public Builder clearRangeTo() {
        
        rangeTo_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.item.Facet)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.item.Facet)
    private static final io.dstore.elastic.item.ElasticItem.Facet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.item.ElasticItem.Facet();
    }

    public static io.dstore.elastic.item.ElasticItem.Facet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Facet>
        PARSER = new com.google.protobuf.AbstractParser<Facet>() {
      public Facet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Facet(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Facet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Facet> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.item.ElasticItem.Facet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_item_Item_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_item_Item_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_item_Facet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_item_Facet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_item_Facet_FacetValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_item_Facet_FacetValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036dstore/elastic/item/item.proto\022\023dstore" +
      ".elastic.item\032\034dstore/elastic/elastic.pr" +
      "oto\032\036dstore/elastic/item/node.proto\032\023dst" +
      "ore/values.proto\"\315\001\n\004Item\022\'\n\004node\030\001 \001(\0132" +
      "\031.dstore.elastic.node.Node\022/\n\014variant_no" +
      "de\030\002 \003(\0132\031.dstore.elastic.node.Node\0223\n\014l" +
      "ast_updated\030\003 \001(\0132\035.dstore.values.timest" +
      "ampValue\022\r\n\005score\030\n \001(\001\022\022\n\nindex_name\030\013 " +
      "\001(\t\022\023\n\013document_id\030\014 \001(\t\"\236\002\n\005Facet\022\022\n\nfi" +
      "eld_name\030\001 \001(\t\022:\n\013facet_value\030\002 \003(\0132%.ds",
      "tore.elastic.item.Facet.FacetValue\022\022\n\nra" +
      "nge_from\030\n \001(\001\022\020\n\010range_to\030\013 \001(\001\032\236\001\n\nFac" +
      "etValue\022#\n\005value\030\001 \001(\0132\024.dstore.values.V" +
      "alue\022\030\n\020total_item_count\030\002 \001(\005\022\033\n\023matchi" +
      "ng_item_count\030\003 \001(\005\022\016\n\006active\030\004 \001(\010\022\021\n\tm" +
      "in_value\030\005 \001(\001\022\021\n\tmax_value\030\006 \001(\001B%\n\026io." +
      "dstore.elastic.itemB\013ElasticItemb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.elastic.Elastic.getDescriptor(),
          io.dstore.elastic.item.ElasticNode.getDescriptor(),
          io.dstore.Values.getDescriptor(),
        }, assigner);
    internal_static_dstore_elastic_item_Item_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_elastic_item_Item_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_item_Item_descriptor,
        new java.lang.String[] { "Node", "VariantNode", "LastUpdated", "Score", "IndexName", "DocumentId", });
    internal_static_dstore_elastic_item_Facet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_elastic_item_Facet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_item_Facet_descriptor,
        new java.lang.String[] { "FieldName", "FacetValue", "RangeFrom", "RangeTo", });
    internal_static_dstore_elastic_item_Facet_FacetValue_descriptor =
      internal_static_dstore_elastic_item_Facet_descriptor.getNestedTypes().get(0);
    internal_static_dstore_elastic_item_Facet_FacetValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_item_Facet_FacetValue_descriptor,
        new java.lang.String[] { "Value", "TotalItemCount", "MatchingItemCount", "Active", "MinValue", "MaxValue", });
    io.dstore.elastic.Elastic.getDescriptor();
    io.dstore.elastic.item.ElasticNode.getDescriptor();
    io.dstore.Values.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
