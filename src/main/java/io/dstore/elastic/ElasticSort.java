// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/elastic/sort.proto

package io.dstore.elastic;

public final class ElasticSort {
  private ElasticSort() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.elastic.sort.Sort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string field_name = 1;</code>
     */
    java.lang.String getFieldName();
    /**
     * <code>optional string field_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getFieldNameBytes();

    /**
     * <code>optional bool score = 2;</code>
     *
     * <pre>
     * When sorting by score all other parameters are ignored
     * </pre>
     */
    boolean getScore();

    /**
     * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
     */
    int getSortOrderValue();
    /**
     * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
     */
    io.dstore.elastic.ElasticSort.Sort.Order getSortOrder();

    /**
     * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
     */
    int getMissingTreatmentValue();
    /**
     * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
     */
    io.dstore.elastic.ElasticSort.Sort.Missing getMissingTreatment();

    /**
     * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
     */
    int getSortModeValue();
    /**
     * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
     */
    io.dstore.elastic.ElasticSort.Sort.Mode getSortMode();

    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    java.util.List<io.dstore.elastic.ElasticQuery.Query> 
        getNestedFilterList();
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.Query getNestedFilter(int index);
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    int getNestedFilterCount();
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getNestedFilterOrBuilderList();
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    io.dstore.elastic.ElasticQuery.QueryOrBuilder getNestedFilterOrBuilder(
        int index);

    public io.dstore.elastic.ElasticSort.Sort.SortByCase getSortByCase();
  }
  /**
   * Protobuf type {@code dstore.elastic.sort.Sort}
   */
  public  static final class Sort extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.elastic.sort.Sort)
      SortOrBuilder {
    // Use Sort.newBuilder() to construct.
    private Sort(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Sort() {
      sortOrder_ = 0;
      missingTreatment_ = 0;
      sortMode_ = 0;
      nestedFilter_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Sort(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();
              sortByCase_ = 1;
              sortBy_ = s;
              break;
            }
            case 16: {
              sortByCase_ = 2;
              sortBy_ = input.readBool();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              sortOrder_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              missingTreatment_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              sortMode_ = rawValue;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                nestedFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>();
                mutable_bitField0_ |= 0x00000020;
              }
              nestedFilter_.add(input.readMessage(io.dstore.elastic.ElasticQuery.Query.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          nestedFilter_ = java.util.Collections.unmodifiableList(nestedFilter_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.elastic.ElasticSort.internal_static_dstore_elastic_sort_Sort_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.elastic.ElasticSort.internal_static_dstore_elastic_sort_Sort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.elastic.ElasticSort.Sort.class, io.dstore.elastic.ElasticSort.Sort.Builder.class);
    }

    /**
     * Protobuf enum {@code dstore.elastic.sort.Sort.Order}
     */
    public enum Order
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ASCENDING = 0;</code>
       */
      ASCENDING(0, 0),
      /**
       * <code>DESCENDING = 1;</code>
       */
      DESCENDING(1, 1),
      UNRECOGNIZED(-1, -1),
      ;

      /**
       * <code>ASCENDING = 0;</code>
       */
      public static final int ASCENDING_VALUE = 0;
      /**
       * <code>DESCENDING = 1;</code>
       */
      public static final int DESCENDING_VALUE = 1;


      public final int getNumber() {
        if (index == -1) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public static Order valueOf(int value) {
        switch (value) {
          case 0: return ASCENDING;
          case 1: return DESCENDING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Order>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Order> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Order>() {
              public Order findValueByNumber(int number) {
                return Order.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.dstore.elastic.ElasticSort.Sort.getDescriptor().getEnumTypes().get(0);
      }

      private static final Order[] VALUES = values();

      public static Order valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Order(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dstore.elastic.sort.Sort.Order)
    }

    /**
     * Protobuf enum {@code dstore.elastic.sort.Sort.Missing}
     */
    public enum Missing
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LAST = 0;</code>
       */
      LAST(0, 0),
      /**
       * <code>FIRST = 1;</code>
       */
      FIRST(1, 1),
      UNRECOGNIZED(-1, -1),
      ;

      /**
       * <code>LAST = 0;</code>
       */
      public static final int LAST_VALUE = 0;
      /**
       * <code>FIRST = 1;</code>
       */
      public static final int FIRST_VALUE = 1;


      public final int getNumber() {
        if (index == -1) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public static Missing valueOf(int value) {
        switch (value) {
          case 0: return LAST;
          case 1: return FIRST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Missing>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Missing> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Missing>() {
              public Missing findValueByNumber(int number) {
                return Missing.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.dstore.elastic.ElasticSort.Sort.getDescriptor().getEnumTypes().get(1);
      }

      private static final Missing[] VALUES = values();

      public static Missing valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Missing(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dstore.elastic.sort.Sort.Missing)
    }

    /**
     * Protobuf enum {@code dstore.elastic.sort.Sort.Mode}
     */
    public enum Mode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MIN = 0;</code>
       */
      MIN(0, 0),
      /**
       * <code>MAX = 1;</code>
       */
      MAX(1, 1),
      /**
       * <code>SUM = 2;</code>
       */
      SUM(2, 2),
      /**
       * <code>AVG = 3;</code>
       */
      AVG(3, 3),
      /**
       * <code>MEDIAN = 4;</code>
       */
      MEDIAN(4, 4),
      UNRECOGNIZED(-1, -1),
      ;

      /**
       * <code>MIN = 0;</code>
       */
      public static final int MIN_VALUE = 0;
      /**
       * <code>MAX = 1;</code>
       */
      public static final int MAX_VALUE = 1;
      /**
       * <code>SUM = 2;</code>
       */
      public static final int SUM_VALUE = 2;
      /**
       * <code>AVG = 3;</code>
       */
      public static final int AVG_VALUE = 3;
      /**
       * <code>MEDIAN = 4;</code>
       */
      public static final int MEDIAN_VALUE = 4;


      public final int getNumber() {
        if (index == -1) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      public static Mode valueOf(int value) {
        switch (value) {
          case 0: return MIN;
          case 1: return MAX;
          case 2: return SUM;
          case 3: return AVG;
          case 4: return MEDIAN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Mode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Mode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
              public Mode findValueByNumber(int number) {
                return Mode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.dstore.elastic.ElasticSort.Sort.getDescriptor().getEnumTypes().get(2);
      }

      private static final Mode[] VALUES = values();

      public static Mode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Mode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dstore.elastic.sort.Sort.Mode)
    }

    private int bitField0_;
    private int sortByCase_ = 0;
    private java.lang.Object sortBy_;
    public enum SortByCase
        implements com.google.protobuf.Internal.EnumLite {
      FIELD_NAME(1),
      SCORE(2),
      SORTBY_NOT_SET(0);
      private int value = 0;
      private SortByCase(int value) {
        this.value = value;
      }
      public static SortByCase valueOf(int value) {
        switch (value) {
          case 1: return FIELD_NAME;
          case 2: return SCORE;
          case 0: return SORTBY_NOT_SET;
          default: throw new java.lang.IllegalArgumentException(
            "Value is undefined for this oneof enum.");
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SortByCase
    getSortByCase() {
      return SortByCase.valueOf(
          sortByCase_);
    }

    public static final int FIELD_NAME_FIELD_NUMBER = 1;
    /**
     * <code>optional string field_name = 1;</code>
     */
    public java.lang.String getFieldName() {
      java.lang.Object ref = "";
      if (sortByCase_ == 1) {
        ref = sortBy_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (sortByCase_ == 1) {
          sortBy_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string field_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFieldNameBytes() {
      java.lang.Object ref = "";
      if (sortByCase_ == 1) {
        ref = sortBy_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (sortByCase_ == 1) {
          sortBy_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 2;
    /**
     * <code>optional bool score = 2;</code>
     *
     * <pre>
     * When sorting by score all other parameters are ignored
     * </pre>
     */
    public boolean getScore() {
      if (sortByCase_ == 2) {
        return (java.lang.Boolean) sortBy_;
      }
      return false;
    }

    public static final int SORT_ORDER_FIELD_NUMBER = 5;
    private int sortOrder_;
    /**
     * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
     */
    public int getSortOrderValue() {
      return sortOrder_;
    }
    /**
     * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
     */
    public io.dstore.elastic.ElasticSort.Sort.Order getSortOrder() {
      io.dstore.elastic.ElasticSort.Sort.Order result = io.dstore.elastic.ElasticSort.Sort.Order.valueOf(sortOrder_);
      return result == null ? io.dstore.elastic.ElasticSort.Sort.Order.UNRECOGNIZED : result;
    }

    public static final int MISSING_TREATMENT_FIELD_NUMBER = 6;
    private int missingTreatment_;
    /**
     * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
     */
    public int getMissingTreatmentValue() {
      return missingTreatment_;
    }
    /**
     * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
     */
    public io.dstore.elastic.ElasticSort.Sort.Missing getMissingTreatment() {
      io.dstore.elastic.ElasticSort.Sort.Missing result = io.dstore.elastic.ElasticSort.Sort.Missing.valueOf(missingTreatment_);
      return result == null ? io.dstore.elastic.ElasticSort.Sort.Missing.UNRECOGNIZED : result;
    }

    public static final int SORT_MODE_FIELD_NUMBER = 7;
    private int sortMode_;
    /**
     * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
     */
    public int getSortModeValue() {
      return sortMode_;
    }
    /**
     * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
     */
    public io.dstore.elastic.ElasticSort.Sort.Mode getSortMode() {
      io.dstore.elastic.ElasticSort.Sort.Mode result = io.dstore.elastic.ElasticSort.Sort.Mode.valueOf(sortMode_);
      return result == null ? io.dstore.elastic.ElasticSort.Sort.Mode.UNRECOGNIZED : result;
    }

    public static final int NESTED_FILTER_FIELD_NUMBER = 8;
    private java.util.List<io.dstore.elastic.ElasticQuery.Query> nestedFilter_;
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    public java.util.List<io.dstore.elastic.ElasticQuery.Query> getNestedFilterList() {
      return nestedFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
        getNestedFilterOrBuilderList() {
      return nestedFilter_;
    }
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    public int getNestedFilterCount() {
      return nestedFilter_.size();
    }
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.Query getNestedFilter(int index) {
      return nestedFilter_.get(index);
    }
    /**
     * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
     *
     * <pre>
     * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
     * </pre>
     */
    public io.dstore.elastic.ElasticQuery.QueryOrBuilder getNestedFilterOrBuilder(
        int index) {
      return nestedFilter_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sortByCase_ == 1) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, sortBy_);
      }
      if (sortByCase_ == 2) {
        output.writeBool(
            2, (boolean)((java.lang.Boolean) sortBy_));
      }
      if (sortOrder_ != io.dstore.elastic.ElasticSort.Sort.Order.ASCENDING.getNumber()) {
        output.writeEnum(5, sortOrder_);
      }
      if (missingTreatment_ != io.dstore.elastic.ElasticSort.Sort.Missing.LAST.getNumber()) {
        output.writeEnum(6, missingTreatment_);
      }
      if (sortMode_ != io.dstore.elastic.ElasticSort.Sort.Mode.MIN.getNumber()) {
        output.writeEnum(7, sortMode_);
      }
      for (int i = 0; i < nestedFilter_.size(); i++) {
        output.writeMessage(8, nestedFilter_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sortByCase_ == 1) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, sortBy_);
      }
      if (sortByCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              2, (boolean)((java.lang.Boolean) sortBy_));
      }
      if (sortOrder_ != io.dstore.elastic.ElasticSort.Sort.Order.ASCENDING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, sortOrder_);
      }
      if (missingTreatment_ != io.dstore.elastic.ElasticSort.Sort.Missing.LAST.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, missingTreatment_);
      }
      if (sortMode_ != io.dstore.elastic.ElasticSort.Sort.Mode.MIN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, sortMode_);
      }
      for (int i = 0; i < nestedFilter_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, nestedFilter_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.elastic.ElasticSort.Sort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.elastic.ElasticSort.Sort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.elastic.sort.Sort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.elastic.sort.Sort)
        io.dstore.elastic.ElasticSort.SortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.elastic.ElasticSort.internal_static_dstore_elastic_sort_Sort_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.elastic.ElasticSort.internal_static_dstore_elastic_sort_Sort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.elastic.ElasticSort.Sort.class, io.dstore.elastic.ElasticSort.Sort.Builder.class);
      }

      // Construct using io.dstore.elastic.ElasticSort.Sort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNestedFilterFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        sortOrder_ = 0;

        missingTreatment_ = 0;

        sortMode_ = 0;

        if (nestedFilterBuilder_ == null) {
          nestedFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          nestedFilterBuilder_.clear();
        }
        sortByCase_ = 0;
        sortBy_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.elastic.ElasticSort.internal_static_dstore_elastic_sort_Sort_descriptor;
      }

      public io.dstore.elastic.ElasticSort.Sort getDefaultInstanceForType() {
        return io.dstore.elastic.ElasticSort.Sort.getDefaultInstance();
      }

      public io.dstore.elastic.ElasticSort.Sort build() {
        io.dstore.elastic.ElasticSort.Sort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.elastic.ElasticSort.Sort buildPartial() {
        io.dstore.elastic.ElasticSort.Sort result = new io.dstore.elastic.ElasticSort.Sort(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sortByCase_ == 1) {
          result.sortBy_ = sortBy_;
        }
        if (sortByCase_ == 2) {
          result.sortBy_ = sortBy_;
        }
        result.sortOrder_ = sortOrder_;
        result.missingTreatment_ = missingTreatment_;
        result.sortMode_ = sortMode_;
        if (nestedFilterBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            nestedFilter_ = java.util.Collections.unmodifiableList(nestedFilter_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.nestedFilter_ = nestedFilter_;
        } else {
          result.nestedFilter_ = nestedFilterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.sortByCase_ = sortByCase_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.elastic.ElasticSort.Sort) {
          return mergeFrom((io.dstore.elastic.ElasticSort.Sort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.elastic.ElasticSort.Sort other) {
        if (other == io.dstore.elastic.ElasticSort.Sort.getDefaultInstance()) return this;
        if (other.sortOrder_ != 0) {
          setSortOrderValue(other.getSortOrderValue());
        }
        if (other.missingTreatment_ != 0) {
          setMissingTreatmentValue(other.getMissingTreatmentValue());
        }
        if (other.sortMode_ != 0) {
          setSortModeValue(other.getSortModeValue());
        }
        if (nestedFilterBuilder_ == null) {
          if (!other.nestedFilter_.isEmpty()) {
            if (nestedFilter_.isEmpty()) {
              nestedFilter_ = other.nestedFilter_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureNestedFilterIsMutable();
              nestedFilter_.addAll(other.nestedFilter_);
            }
            onChanged();
          }
        } else {
          if (!other.nestedFilter_.isEmpty()) {
            if (nestedFilterBuilder_.isEmpty()) {
              nestedFilterBuilder_.dispose();
              nestedFilterBuilder_ = null;
              nestedFilter_ = other.nestedFilter_;
              bitField0_ = (bitField0_ & ~0x00000020);
              nestedFilterBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNestedFilterFieldBuilder() : null;
            } else {
              nestedFilterBuilder_.addAllMessages(other.nestedFilter_);
            }
          }
        }
        switch (other.getSortByCase()) {
          case FIELD_NAME: {
            sortByCase_ = 1;
            sortBy_ = other.sortBy_;
            onChanged();
            break;
          }
          case SCORE: {
            setScore(other.getScore());
            break;
          }
          case SORTBY_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.elastic.ElasticSort.Sort parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.elastic.ElasticSort.Sort) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sortByCase_ = 0;
      private java.lang.Object sortBy_;
      public SortByCase
          getSortByCase() {
        return SortByCase.valueOf(
            sortByCase_);
      }

      public Builder clearSortBy() {
        sortByCase_ = 0;
        sortBy_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>optional string field_name = 1;</code>
       */
      public java.lang.String getFieldName() {
        java.lang.Object ref = "";
        if (sortByCase_ == 1) {
          ref = sortBy_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (sortByCase_ == 1) {
            sortBy_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFieldNameBytes() {
        java.lang.Object ref = "";
        if (sortByCase_ == 1) {
          ref = sortBy_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (sortByCase_ == 1) {
            sortBy_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  sortByCase_ = 1;
        sortBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder clearFieldName() {
        if (sortByCase_ == 1) {
          sortByCase_ = 0;
          sortBy_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string field_name = 1;</code>
       */
      public Builder setFieldNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        sortByCase_ = 1;
        sortBy_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>optional bool score = 2;</code>
       *
       * <pre>
       * When sorting by score all other parameters are ignored
       * </pre>
       */
      public boolean getScore() {
        if (sortByCase_ == 2) {
          return (java.lang.Boolean) sortBy_;
        }
        return false;
      }
      /**
       * <code>optional bool score = 2;</code>
       *
       * <pre>
       * When sorting by score all other parameters are ignored
       * </pre>
       */
      public Builder setScore(boolean value) {
        sortByCase_ = 2;
        sortBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool score = 2;</code>
       *
       * <pre>
       * When sorting by score all other parameters are ignored
       * </pre>
       */
      public Builder clearScore() {
        if (sortByCase_ == 2) {
          sortByCase_ = 0;
          sortBy_ = null;
          onChanged();
        }
        return this;
      }

      private int sortOrder_ = 0;
      /**
       * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
       */
      public int getSortOrderValue() {
        return sortOrder_;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
       */
      public Builder setSortOrderValue(int value) {
        sortOrder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Order getSortOrder() {
        io.dstore.elastic.ElasticSort.Sort.Order result = io.dstore.elastic.ElasticSort.Sort.Order.valueOf(sortOrder_);
        return result == null ? io.dstore.elastic.ElasticSort.Sort.Order.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
       */
      public Builder setSortOrder(io.dstore.elastic.ElasticSort.Sort.Order value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        sortOrder_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Order sort_order = 5;</code>
       */
      public Builder clearSortOrder() {
        
        sortOrder_ = 0;
        onChanged();
        return this;
      }

      private int missingTreatment_ = 0;
      /**
       * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
       */
      public int getMissingTreatmentValue() {
        return missingTreatment_;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
       */
      public Builder setMissingTreatmentValue(int value) {
        missingTreatment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Missing getMissingTreatment() {
        io.dstore.elastic.ElasticSort.Sort.Missing result = io.dstore.elastic.ElasticSort.Sort.Missing.valueOf(missingTreatment_);
        return result == null ? io.dstore.elastic.ElasticSort.Sort.Missing.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
       */
      public Builder setMissingTreatment(io.dstore.elastic.ElasticSort.Sort.Missing value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        missingTreatment_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Missing missing_treatment = 6;</code>
       */
      public Builder clearMissingTreatment() {
        
        missingTreatment_ = 0;
        onChanged();
        return this;
      }

      private int sortMode_ = 0;
      /**
       * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
       */
      public int getSortModeValue() {
        return sortMode_;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
       */
      public Builder setSortModeValue(int value) {
        sortMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
       */
      public io.dstore.elastic.ElasticSort.Sort.Mode getSortMode() {
        io.dstore.elastic.ElasticSort.Sort.Mode result = io.dstore.elastic.ElasticSort.Sort.Mode.valueOf(sortMode_);
        return result == null ? io.dstore.elastic.ElasticSort.Sort.Mode.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
       */
      public Builder setSortMode(io.dstore.elastic.ElasticSort.Sort.Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        sortMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dstore.elastic.sort.Sort.Mode sort_mode = 7;</code>
       */
      public Builder clearSortMode() {
        
        sortMode_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.dstore.elastic.ElasticQuery.Query> nestedFilter_ =
        java.util.Collections.emptyList();
      private void ensureNestedFilterIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          nestedFilter_ = new java.util.ArrayList<io.dstore.elastic.ElasticQuery.Query>(nestedFilter_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> nestedFilterBuilder_;

      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query> getNestedFilterList() {
        if (nestedFilterBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nestedFilter_);
        } else {
          return nestedFilterBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public int getNestedFilterCount() {
        if (nestedFilterBuilder_ == null) {
          return nestedFilter_.size();
        } else {
          return nestedFilterBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query getNestedFilter(int index) {
        if (nestedFilterBuilder_ == null) {
          return nestedFilter_.get(index);
        } else {
          return nestedFilterBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder setNestedFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (nestedFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedFilterIsMutable();
          nestedFilter_.set(index, value);
          onChanged();
        } else {
          nestedFilterBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder setNestedFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (nestedFilterBuilder_ == null) {
          ensureNestedFilterIsMutable();
          nestedFilter_.set(index, builderForValue.build());
          onChanged();
        } else {
          nestedFilterBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder addNestedFilter(io.dstore.elastic.ElasticQuery.Query value) {
        if (nestedFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedFilterIsMutable();
          nestedFilter_.add(value);
          onChanged();
        } else {
          nestedFilterBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder addNestedFilter(
          int index, io.dstore.elastic.ElasticQuery.Query value) {
        if (nestedFilterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedFilterIsMutable();
          nestedFilter_.add(index, value);
          onChanged();
        } else {
          nestedFilterBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder addNestedFilter(
          io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (nestedFilterBuilder_ == null) {
          ensureNestedFilterIsMutable();
          nestedFilter_.add(builderForValue.build());
          onChanged();
        } else {
          nestedFilterBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder addNestedFilter(
          int index, io.dstore.elastic.ElasticQuery.Query.Builder builderForValue) {
        if (nestedFilterBuilder_ == null) {
          ensureNestedFilterIsMutable();
          nestedFilter_.add(index, builderForValue.build());
          onChanged();
        } else {
          nestedFilterBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder addAllNestedFilter(
          java.lang.Iterable<? extends io.dstore.elastic.ElasticQuery.Query> values) {
        if (nestedFilterBuilder_ == null) {
          ensureNestedFilterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nestedFilter_);
          onChanged();
        } else {
          nestedFilterBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder clearNestedFilter() {
        if (nestedFilterBuilder_ == null) {
          nestedFilter_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          nestedFilterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public Builder removeNestedFilter(int index) {
        if (nestedFilterBuilder_ == null) {
          ensureNestedFilterIsMutable();
          nestedFilter_.remove(index);
          onChanged();
        } else {
          nestedFilterBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder getNestedFilterBuilder(
          int index) {
        return getNestedFilterFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.QueryOrBuilder getNestedFilterOrBuilder(
          int index) {
        if (nestedFilterBuilder_ == null) {
          return nestedFilter_.get(index);  } else {
          return nestedFilterBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public java.util.List<? extends io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
           getNestedFilterOrBuilderList() {
        if (nestedFilterBuilder_ != null) {
          return nestedFilterBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nestedFilter_);
        }
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addNestedFilterBuilder() {
        return getNestedFilterFieldBuilder().addBuilder(
            io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public io.dstore.elastic.ElasticQuery.Query.Builder addNestedFilterBuilder(
          int index) {
        return getNestedFilterFieldBuilder().addBuilder(
            index, io.dstore.elastic.ElasticQuery.Query.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.elastic.query.Query nested_filter = 8;</code>
       *
       * <pre>
       * A filter that the inner objects inside the nested path should match with in order for its field values to be taken into account by sorting
       * </pre>
       */
      public java.util.List<io.dstore.elastic.ElasticQuery.Query.Builder> 
           getNestedFilterBuilderList() {
        return getNestedFilterFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder> 
          getNestedFilterFieldBuilder() {
        if (nestedFilterBuilder_ == null) {
          nestedFilterBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.elastic.ElasticQuery.Query, io.dstore.elastic.ElasticQuery.Query.Builder, io.dstore.elastic.ElasticQuery.QueryOrBuilder>(
                  nestedFilter_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          nestedFilter_ = null;
        }
        return nestedFilterBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.elastic.sort.Sort)
    }

    // @@protoc_insertion_point(class_scope:dstore.elastic.sort.Sort)
    private static final io.dstore.elastic.ElasticSort.Sort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.elastic.ElasticSort.Sort();
    }

    public static io.dstore.elastic.ElasticSort.Sort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sort>
        PARSER = new com.google.protobuf.AbstractParser<Sort>() {
      public Sort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Sort(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Sort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sort> getParserForType() {
      return PARSER;
    }

    public io.dstore.elastic.ElasticSort.Sort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_elastic_sort_Sort_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_elastic_sort_Sort_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031dstore/elastic/sort.proto\022\023dstore.elas" +
      "tic.sort\032\032dstore/elastic/query.proto\"\222\003\n" +
      "\004Sort\022\024\n\nfield_name\030\001 \001(\tH\000\022\017\n\005score\030\002 \001" +
      "(\010H\000\0223\n\nsort_order\030\005 \001(\0162\037.dstore.elasti" +
      "c.sort.Sort.Order\022<\n\021missing_treatment\030\006" +
      " \001(\0162!.dstore.elastic.sort.Sort.Missing\022" +
      "1\n\tsort_mode\030\007 \001(\0162\036.dstore.elastic.sort" +
      ".Sort.Mode\0222\n\rnested_filter\030\010 \003(\0132\033.dsto" +
      "re.elastic.query.Query\"&\n\005Order\022\r\n\tASCEN" +
      "DING\020\000\022\016\n\nDESCENDING\020\001\"\036\n\007Missing\022\010\n\004LAS",
      "T\020\000\022\t\n\005FIRST\020\001\"6\n\004Mode\022\007\n\003MIN\020\000\022\007\n\003MAX\020\001" +
      "\022\007\n\003SUM\020\002\022\007\n\003AVG\020\003\022\n\n\006MEDIAN\020\004B\t\n\007sort_b" +
      "yB \n\021io.dstore.elasticB\013ElasticSortb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.elastic.ElasticQuery.getDescriptor(),
        }, assigner);
    internal_static_dstore_elastic_sort_Sort_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_elastic_sort_Sort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_elastic_sort_Sort_descriptor,
        new java.lang.String[] { "FieldName", "Score", "SortOrder", "MissingTreatment", "SortMode", "NestedFilter", "SortBy", });
    io.dstore.elastic.ElasticQuery.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
